{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/placer-autoloader.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "discover",
          "parameters": [
            {
              "name": "root",
              "type": {
                "text": "Element | ShadowRoot"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "discover",
          "declaration": {
            "name": "discover",
            "module": "src/placer-autoloader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/placer.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PcAvatar",
          "declaration": {
            "name": "default",
            "module": "\"./components/avatar/avatar.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcBadge",
          "declaration": {
            "name": "default",
            "module": "\"./components/badge/badge.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcButton",
          "declaration": {
            "name": "default",
            "module": "\"./components/button/button.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcButtonGroup",
          "declaration": {
            "name": "default",
            "module": "\"./components/button-group/button-group.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcCard",
          "declaration": {
            "name": "default",
            "module": "\"./components/card/card.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcCheckbox",
          "declaration": {
            "name": "default",
            "module": "\"./components/checkbox/checkbox.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcIcon",
          "declaration": {
            "name": "default",
            "module": "\"./components/icon/icon.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcIconButton",
          "declaration": {
            "name": "default",
            "module": "\"./components/icon-button/icon-button.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcInput",
          "declaration": {
            "name": "default",
            "module": "\"./components/input/input.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcPopup",
          "declaration": {
            "name": "default",
            "module": "\"./components/popup/popup.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcQrCode",
          "declaration": {
            "name": "default",
            "module": "\"./components/qr-code/qr-code.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcRadio",
          "declaration": {
            "name": "default",
            "module": "\"./components/radio/radio.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcRadioButton",
          "declaration": {
            "name": "default",
            "module": "\"./components/radio-button/radio-button.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcRadioGroup",
          "declaration": {
            "name": "default",
            "module": "\"./components/radio-group/radio-group.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcRating",
          "declaration": {
            "name": "default",
            "module": "\"./components/rating/rating.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcResizeObserver",
          "declaration": {
            "name": "default",
            "module": "\"./components/resize-observer/resize-observer.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcSpinner",
          "declaration": {
            "name": "default",
            "module": "\"./components/spinner/spinner.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcSwitch",
          "declaration": {
            "name": "default",
            "module": "\"./components/switch/switch.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcTab",
          "declaration": {
            "name": "default",
            "module": "\"./components/tab/tab.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcTabGroup",
          "declaration": {
            "name": "default",
            "module": "\"./components/tab-group/tab-group.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcTabPanel",
          "declaration": {
            "name": "default",
            "module": "\"./components/tab-panel/tab-panel.js\""
          }
        },
        {
          "kind": "js",
          "name": "PcVisuallyHidden",
          "declaration": {
            "name": "default",
            "module": "\"./components/visually-hidden/visually-hidden.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./utilities/animation-registry.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./utilities/animation.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./utilities/base-path.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./utilities/form.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./utilities/icon-library.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/placer-autoloader.js",
      "declarations": [
        {
          "kind": "function",
          "name": "discover",
          "parameters": [
            {
              "name": "root"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "discover",
          "declaration": {
            "name": "discover",
            "module": "dist/placer-autoloader.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/placer.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PcAvatar",
          "declaration": {
            "name": "default",
            "module": "./components/avatar/avatar.js"
          }
        },
        {
          "kind": "js",
          "name": "PcBadge",
          "declaration": {
            "name": "default",
            "module": "./components/badge/badge.js"
          }
        },
        {
          "kind": "js",
          "name": "PcButton",
          "declaration": {
            "name": "default",
            "module": "./components/button/button.js"
          }
        },
        {
          "kind": "js",
          "name": "PcCard",
          "declaration": {
            "name": "default",
            "module": "./components/card/card.js"
          }
        },
        {
          "kind": "js",
          "name": "PcCheckbox",
          "declaration": {
            "name": "default",
            "module": "./components/checkbox/checkbox.js"
          }
        },
        {
          "kind": "js",
          "name": "PcIcon",
          "declaration": {
            "name": "default",
            "module": "./components/icon/icon.js"
          }
        },
        {
          "kind": "js",
          "name": "PcIconButton",
          "declaration": {
            "name": "default",
            "module": "./components/icon-button/icon-button.js"
          }
        },
        {
          "kind": "js",
          "name": "PcQrCode",
          "declaration": {
            "name": "default",
            "module": "./components/qr-code/qr-code.js"
          }
        },
        {
          "kind": "js",
          "name": "PcRating",
          "declaration": {
            "name": "default",
            "module": "./components/rating/rating.js"
          }
        },
        {
          "kind": "js",
          "name": "PcResizeObserver",
          "declaration": {
            "name": "default",
            "module": "./components/resize-observer/resize-observer.js"
          }
        },
        {
          "kind": "js",
          "name": "PcSpinner",
          "declaration": {
            "name": "default",
            "module": "./components/spinner/spinner.js"
          }
        },
        {
          "kind": "js",
          "name": "PcSwitch",
          "declaration": {
            "name": "default",
            "module": "./components/switch/switch.js"
          }
        },
        {
          "kind": "js",
          "name": "PcTab",
          "declaration": {
            "name": "default",
            "module": "./components/tab/tab.js"
          }
        },
        {
          "kind": "js",
          "name": "PcTabGroup",
          "declaration": {
            "name": "default",
            "module": "./components/tab-group/tab-group.js"
          }
        },
        {
          "kind": "js",
          "name": "PcTabPanel",
          "declaration": {
            "name": "default",
            "module": "./components/tab-panel/tab-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "PcVisuallyHidden",
          "declaration": {
            "name": "default",
            "module": "./components/visually-hidden/visually-hidden.js"
          }
        },
        {
          "kind": "js",
          "name": "getBasePath",
          "declaration": {
            "name": "getBasePath",
            "module": "./utilities/base-path.js"
          }
        },
        {
          "kind": "js",
          "name": "setBasePath",
          "declaration": {
            "name": "setBasePath",
            "module": "./utilities/base-path.js"
          }
        },
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "./components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "./components/icon/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/bounce.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/flash.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/headShake.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/heartBeat.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/jello.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/pulse.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/rubberBand.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/shake.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/shakeX.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/shakeY.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/swing.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/tada.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./attention_seekers/wobble.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_entrances/backInDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_entrances/backInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_entrances/backInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_entrances/backInUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_exits/backOutDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_exits/backOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_exits/backOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./back_exits/backOutUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_entrances/bounceIn.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_entrances/bounceInDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_entrances/bounceInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_entrances/bounceInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_entrances/bounceInUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_exits/bounceOut.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_exits/bounceOutDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_exits/bounceOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_exits/bounceOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./bouncing_exits/bounceOutUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeIn.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInBottomLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInBottomRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInDownBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInLeftBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInRightBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInTopLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInTopRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_entrances/fadeInUpBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOut.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutBottomLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutBottomRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutDownBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutLeftBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutRightBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutTopLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutTopRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./fading_exits/fadeOutUpBig.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./flippers/flip.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./flippers/flipInX.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./flippers/flipInY.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./flippers/flipOutX.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./flippers/flipOutY.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./lightspeed/lightSpeedInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./lightspeed/lightSpeedInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./lightspeed/lightSpeedOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./lightspeed/lightSpeedOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_entrances/rotateIn.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_entrances/rotateInDownLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_entrances/rotateInDownRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_entrances/rotateInUpLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_entrances/rotateInUpRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_exits/rotateOut.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_exits/rotateOutDownLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_exits/rotateOutDownRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_exits/rotateOutUpLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rotating_exits/rotateOutUpRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_entrances/slideInDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_entrances/slideInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_entrances/slideInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_entrances/slideInUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_exits/slideOutDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_exits/slideOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_exits/slideOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./sliding_exits/slideOutUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./specials/hinge.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./specials/jackInTheBox.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./specials/rollIn.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./specials/rollOut.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_entrances/zoomIn.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_entrances/zoomInDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_entrances/zoomInLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_entrances/zoomInRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_entrances/zoomInUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_exits/zoomOut.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_exits/zoomOutDown.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_exits/zoomOutLeft.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_exits/zoomOutRight.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./zooming_exits/zoomOutUp.js\""
          }
        },
        {
          "kind": "js",
          "name": "easings",
          "declaration": {
            "name": "easings",
            "module": "\"./easings/easings.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/active-elements.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "activeElements",
          "return": {
            "type": {
              "text": "Generator<Element>"
            }
          },
          "parameters": [
            {
              "name": "activeElement",
              "default": "document.activeElement",
              "type": {
                "text": "Element | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getDeepestActiveElement"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "activeElements",
          "declaration": {
            "name": "activeElements",
            "module": "src/internal/active-elements.ts"
          }
        },
        {
          "kind": "js",
          "name": "getDeepestActiveElement",
          "declaration": {
            "name": "getDeepestActiveElement",
            "module": "src/internal/active-elements.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/animate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "animateTo",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "keyframes",
              "type": {
                "text": "Keyframe[]"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "KeyframeAnimationOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "parseDuration",
          "parameters": [
            {
              "name": "delay",
              "type": {
                "text": "number | string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "prefersReducedMotion"
        },
        {
          "kind": "function",
          "name": "stopAnimations",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "shimKeyframesHeightAuto",
          "parameters": [
            {
              "name": "keyframes",
              "type": {
                "text": "Keyframe[]"
              }
            },
            {
              "name": "calculatedHeight",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "animateTo",
          "declaration": {
            "name": "animateTo",
            "module": "src/internal/animate.ts"
          }
        },
        {
          "kind": "js",
          "name": "parseDuration",
          "declaration": {
            "name": "parseDuration",
            "module": "src/internal/animate.ts"
          }
        },
        {
          "kind": "js",
          "name": "prefersReducedMotion",
          "declaration": {
            "name": "prefersReducedMotion",
            "module": "src/internal/animate.ts"
          }
        },
        {
          "kind": "js",
          "name": "stopAnimations",
          "declaration": {
            "name": "stopAnimations",
            "module": "src/internal/animate.ts"
          }
        },
        {
          "kind": "js",
          "name": "shimKeyframesHeightAuto",
          "declaration": {
            "name": "shimKeyframesHeightAuto",
            "module": "src/internal/animate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/close-active-element.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "blurActiveElement",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "blurActiveElement",
          "declaration": {
            "name": "blurActiveElement",
            "module": "src/internal/close-active-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/debounce.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debounce",
          "parameters": [
            {
              "name": "delay",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "src/internal/debounce.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/default-value.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "defaultValue",
          "parameters": [
            {
              "name": "propertyName",
              "default": "\"value\""
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultValue",
          "declaration": {
            "name": "defaultValue",
            "module": "src/internal/default-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/drag.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "drag",
          "parameters": [
            {
              "name": "container",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "Partial<DragOptions>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "drag",
          "declaration": {
            "name": "drag",
            "module": "src/internal/drag.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/emit.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "emit",
          "parameters": [
            {
              "name": "target",
              "type": {
                "text": "EventTarget"
              }
            },
            {
              "name": "eventName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "eventDetail",
              "optional": true,
              "type": {
                "text": "CustomEventInit"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "bindEmit",
          "parameters": [
            {
              "name": "context",
              "type": {
                "text": "EventTarget"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "emit",
          "declaration": {
            "name": "emit",
            "module": "src/internal/emit.ts"
          }
        },
        {
          "kind": "js",
          "name": "bindEmit",
          "declaration": {
            "name": "bindEmit",
            "module": "src/internal/emit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/event.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "waitForEvent",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "eventName",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "waitForEvent",
          "declaration": {
            "name": "waitForEvent",
            "module": "src/internal/event.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/form.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "formCollections",
          "type": {
            "text": "WeakMap<\n    HTMLFormElement,\n    Set<HTMLInputElement>\n>"
          },
          "default": "new WeakMap()"
        },
        {
          "kind": "class",
          "description": "",
          "name": "FormControlController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLInputElement & ReactiveControllerHost"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement | null | undefined"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "FormControlControllerOptions"
              },
              "default": "{ form: (input) => input.closest(\"form\"), name: (input) => input.name, value: (input) => input.value, defaultValue: (input) => input.defaultValue, disabled: (input) => input.disabled, reportValidity: (input) => typeof input.reportValidity === \"function\" ? input.reportValidity() : true, checkValidity: (input) => typeof input.checkValidity === \"function\" ? input.checkValidity() : true, setValue: (input, value: unknown) => (input.value = value as string), assumeInteractionOn: [\"input\"], ...options, }"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "attachForm",
              "privacy": "private",
              "parameters": [
                {
                  "name": "form",
                  "optional": true,
                  "type": {
                    "text": "HTMLFormElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "detachForm",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleFormData",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleFormReset",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleInteraction",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "checkFormValidity",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "reportFormValidity",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setUserInteracted",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                },
                {
                  "name": "hasInteracted",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "doAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "\"submit\" | \"reset\""
                  }
                },
                {
                  "name": "submitter",
                  "optional": true,
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getForm"
            },
            {
              "kind": "method",
              "name": "reset",
              "parameters": [
                {
                  "name": "submitter",
                  "optional": true,
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "submit",
              "parameters": [
                {
                  "name": "submitter",
                  "optional": true,
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValidity",
              "parameters": [
                {
                  "name": "isValid",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValidity"
            },
            {
              "kind": "method",
              "name": "emitInvalidEvent",
              "parameters": [
                {
                  "name": "originalInvalidEvent",
                  "optional": true,
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "validValidityState",
          "type": {
            "text": "ValidityState"
          }
        },
        {
          "kind": "variable",
          "name": "valueMissingValidityState",
          "type": {
            "text": "ValidityState"
          }
        },
        {
          "kind": "variable",
          "name": "customErrorValidityState",
          "type": {
            "text": "ValidityState"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formCollections",
          "declaration": {
            "name": "formCollections",
            "module": "src/internal/form.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormControlController",
          "declaration": {
            "name": "FormControlController",
            "module": "src/internal/form.ts"
          }
        },
        {
          "kind": "js",
          "name": "validValidityState",
          "declaration": {
            "name": "validValidityState",
            "module": "src/internal/form.ts"
          }
        },
        {
          "kind": "js",
          "name": "valueMissingValidityState",
          "declaration": {
            "name": "valueMissingValidityState",
            "module": "src/internal/form.ts"
          }
        },
        {
          "kind": "js",
          "name": "customErrorValidityState",
          "declaration": {
            "name": "customErrorValidityState",
            "module": "src/internal/form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/math.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "clamp",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "min",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "max",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clamp",
          "declaration": {
            "name": "clamp",
            "module": "src/internal/math.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/modal.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Modal",
          "members": [
            {
              "kind": "field",
              "name": "element",
              "type": {
                "text": "HTMLElement"
              },
              "default": "element"
            },
            {
              "kind": "field",
              "name": "isExternalActivated",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "tabDirection",
              "type": {
                "text": "\"forward\" | \"backward\""
              },
              "default": "\"forward\""
            },
            {
              "kind": "field",
              "name": "currentFocus",
              "type": {
                "text": "HTMLElement | null"
              }
            },
            {
              "kind": "field",
              "name": "previousFocus",
              "type": {
                "text": "HTMLElement | null"
              }
            },
            {
              "kind": "field",
              "name": "elementsWithTabbableControls",
              "type": {
                "text": "string[]"
              },
              "default": "[\"iframe\"]"
            },
            {
              "kind": "method",
              "name": "activate"
            },
            {
              "kind": "method",
              "name": "deactivate"
            },
            {
              "kind": "method",
              "name": "isActive"
            },
            {
              "kind": "method",
              "name": "activateExternal"
            },
            {
              "kind": "method",
              "name": "deactivateExternal"
            },
            {
              "kind": "method",
              "name": "checkFocus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleFocusIn",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "possiblyHasTabbableChildren",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleKeyDown",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleKeyUp",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Modal",
            "module": "src/internal/modal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/offset.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getOffset",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "parent",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getOffset",
          "declaration": {
            "name": "getOffset",
            "module": "src/internal/offset.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/scroll.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "lockBodyScrolling",
          "parameters": [
            {
              "name": "lockingElement",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unlockBodyScrolling",
          "parameters": [
            {
              "name": "lockingElement",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "scrollIntoView",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "container",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "direction",
              "default": "\"vertical\"",
              "type": {
                "text": "\"horizontal\" | \"vertical\" | \"both\""
              }
            },
            {
              "name": "behavior",
              "default": "\"smooth\"",
              "type": {
                "text": "\"smooth\" | \"auto\""
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lockBodyScrolling",
          "declaration": {
            "name": "lockBodyScrolling",
            "module": "src/internal/scroll.ts"
          }
        },
        {
          "kind": "js",
          "name": "unlockBodyScrolling",
          "declaration": {
            "name": "unlockBodyScrolling",
            "module": "src/internal/scroll.ts"
          }
        },
        {
          "kind": "js",
          "name": "scrollIntoView",
          "declaration": {
            "name": "scrollIntoView",
            "module": "src/internal/scroll.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/scrollend-polyfill.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/slot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HasSlotController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "ReactiveControllerHost & Element"
              }
            },
            {
              "kind": "field",
              "name": "slotNames",
              "type": {
                "text": "string[]"
              },
              "default": "slotNames"
            },
            {
              "kind": "method",
              "name": "hasDefaultSlot",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasNamedSlot",
              "privacy": "private",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "test",
              "parameters": [
                {
                  "name": "slotName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "field",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getInnerHTML",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "slot",
              "type": {
                "text": "HTMLSlotElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getTextContent",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "slot",
              "type": {
                "text": "HTMLSlotElement | undefined | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HasSlotController",
          "declaration": {
            "name": "HasSlotController",
            "module": "src/internal/slot.ts"
          }
        },
        {
          "kind": "js",
          "name": "getInnerHTML",
          "declaration": {
            "name": "getInnerHTML",
            "module": "src/internal/slot.ts"
          }
        },
        {
          "kind": "js",
          "name": "getTextContent",
          "declaration": {
            "name": "getTextContent",
            "module": "src/internal/slot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/string.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "uppercaseFirstLetter",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uppercaseFirstLetter",
          "declaration": {
            "name": "uppercaseFirstLetter",
            "module": "src/internal/string.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/tabbable.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getTabbableBoundary",
          "parameters": [
            {
              "name": "root",
              "type": {
                "text": "HTMLElement | ShadowRoot"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getTabbableElements",
          "parameters": [
            {
              "name": "root",
              "type": {
                "text": "HTMLElement | ShadowRoot"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getTabbableBoundary",
          "declaration": {
            "name": "getTabbableBoundary",
            "module": "src/internal/tabbable.ts"
          }
        },
        {
          "kind": "js",
          "name": "getTabbableElements",
          "declaration": {
            "name": "getTabbableElements",
            "module": "src/internal/tabbable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/watch.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "watch",
          "parameters": [
            {
              "name": "propertyName",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "WatchOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watch",
          "declaration": {
            "name": "watch",
            "module": "src/internal/watch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/animation-registry.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "setDefaultAnimation",
          "parameters": [
            {
              "name": "animationName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "animation",
              "type": {
                "text": "ElementAnimation | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAnimation",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "animationName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "animation",
              "type": {
                "text": "ElementAnimation | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimation",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "animationName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "GetAnimationOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setDefaultAnimation",
          "declaration": {
            "name": "setDefaultAnimation",
            "module": "src/utilities/animation-registry.ts"
          }
        },
        {
          "kind": "js",
          "name": "setAnimation",
          "declaration": {
            "name": "setAnimation",
            "module": "src/utilities/animation-registry.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAnimation",
          "declaration": {
            "name": "getAnimation",
            "module": "src/utilities/animation-registry.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/animation.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "getAnimationNames",
          "declaration": {
            "name": "getAnimationNames",
            "module": "\"../components/animation/animations.js\""
          }
        },
        {
          "kind": "js",
          "name": "getEasingNames",
          "declaration": {
            "name": "getEasingNames",
            "module": "\"../components/animation/animations.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/base-path.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "setBasePath",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getBasePath",
          "parameters": [
            {
              "name": "subpath",
              "default": "\"\""
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setBasePath",
          "declaration": {
            "name": "setBasePath",
            "module": "src/utilities/base-path.ts"
          }
        },
        {
          "kind": "js",
          "name": "getBasePath",
          "declaration": {
            "name": "getBasePath",
            "module": "src/utilities/base-path.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/form.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "serialize",
          "parameters": [
            {
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getFormControls",
          "parameters": [
            {
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "serialize",
          "declaration": {
            "name": "serialize",
            "module": "src/utilities/form.ts"
          }
        },
        {
          "kind": "js",
          "name": "getFormControls",
          "declaration": {
            "name": "getFormControls",
            "module": "src/utilities/form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/icon-library.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "\"../components/icon/library.js\""
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "\"../components/icon/library.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/utilities/base-path.js",
      "declarations": [
        {
          "kind": "function",
          "name": "setBasePath",
          "parameters": [
            {
              "name": "path"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getBasePath",
          "parameters": [
            {
              "name": "subpath",
              "default": "\"\""
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getBasePath",
          "declaration": {
            "name": "getBasePath",
            "module": "dist/utilities/base-path.js"
          }
        },
        {
          "kind": "js",
          "name": "setBasePath",
          "declaration": {
            "name": "setBasePath",
            "module": "dist/utilities/base-path.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/utilities/icon-library.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "../components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "../components/icon/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/default-value.js",
      "declarations": [
        {
          "kind": "function",
          "name": "defaultValue",
          "parameters": [
            {
              "name": "propertyName",
              "default": "\"value\""
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultValue",
          "declaration": {
            "name": "defaultValue",
            "module": "dist/internal/default-value.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/emit.js",
      "declarations": [
        {
          "kind": "function",
          "name": "emit",
          "parameters": [
            {
              "name": "target"
            },
            {
              "name": "eventName"
            },
            {
              "name": "eventDetail"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "emit",
          "declaration": {
            "name": "emit",
            "module": "dist/internal/emit.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/form.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "formCollections",
          "default": "new WeakMap()"
        },
        {
          "kind": "class",
          "description": "",
          "name": "FormControlController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "attachForm",
              "parameters": [
                {
                  "name": "form"
                }
              ]
            },
            {
              "kind": "method",
              "name": "detachForm"
            },
            {
              "kind": "method",
              "name": "setUserInteracted",
              "parameters": [
                {
                  "name": "el"
                },
                {
                  "name": "hasInteracted"
                }
              ]
            },
            {
              "kind": "method",
              "name": "doAction",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "submitter"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getForm"
            },
            {
              "kind": "method",
              "name": "reset",
              "parameters": [
                {
                  "name": "submitter"
                }
              ]
            },
            {
              "kind": "method",
              "name": "submit",
              "parameters": [
                {
                  "name": "submitter"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValidity",
              "parameters": [
                {
                  "name": "isValid"
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValidity"
            },
            {
              "kind": "method",
              "name": "emitInvalidEvent",
              "parameters": [
                {
                  "name": "originalInvalidEvent"
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleFormData"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit"
            },
            {
              "kind": "field",
              "name": "handleFormReset"
            },
            {
              "kind": "field",
              "name": "handleInteraction"
            },
            {
              "kind": "field",
              "name": "checkFormValidity"
            },
            {
              "kind": "field",
              "name": "reportFormValidity"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "object"
              },
              "default": "{ form: (input) => input.closest(\"form\"), name: (input) => input.name, value: (input) => input.value, defaultValue: (input) => input.defaultValue, disabled: (input) => input.disabled, reportValidity: (input) => typeof input.reportValidity === \"function\" ? input.reportValidity() : true, checkValidity: (input) => typeof input.checkValidity === \"function\" ? input.checkValidity() : true, setValue: (input, value) => (input.value = value), assumeInteractionOn: [\"input\"], ...options, }"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "validValidityState"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlController",
          "declaration": {
            "name": "FormControlController",
            "module": "dist/internal/form.js"
          }
        },
        {
          "kind": "js",
          "name": "formCollections",
          "declaration": {
            "name": "formCollections",
            "module": "dist/internal/form.js"
          }
        },
        {
          "kind": "js",
          "name": "validValidityState",
          "declaration": {
            "name": "validValidityState",
            "module": "dist/internal/form.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/math.js",
      "declarations": [
        {
          "kind": "function",
          "name": "clamp",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clamp",
          "declaration": {
            "name": "clamp",
            "module": "dist/internal/math.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/offset.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getOffset",
          "parameters": [
            {
              "name": "element"
            },
            {
              "name": "parent"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getOffset",
          "declaration": {
            "name": "getOffset",
            "module": "dist/internal/offset.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/scroll.js",
      "declarations": [
        {
          "kind": "function",
          "name": "scrollIntoView",
          "parameters": [
            {
              "name": "element"
            },
            {
              "name": "container"
            },
            {
              "name": "direction",
              "default": "\"vertical\""
            },
            {
              "name": "behavior",
              "default": "\"smooth\""
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scrollIntoView",
          "declaration": {
            "name": "scrollIntoView",
            "module": "dist/internal/scroll.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/scrollend-polyfill.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/slot.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HasSlotController",
          "members": [
            {
              "kind": "method",
              "name": "hasDefaultSlot"
            },
            {
              "kind": "method",
              "name": "hasNamedSlot",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "test",
              "parameters": [
                {
                  "name": "slotName"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "field",
              "name": "slotNames",
              "type": {
                "text": "array"
              },
              "default": "slotNames"
            },
            {
              "kind": "field",
              "name": "handleSlotChange"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HasSlotController",
          "declaration": {
            "name": "HasSlotController",
            "module": "dist/internal/slot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/internal/watch.js",
      "declarations": [
        {
          "kind": "function",
          "name": "watch",
          "parameters": [
            {
              "name": "propertyName"
            },
            {
              "name": "options"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watch",
          "declaration": {
            "name": "watch",
            "module": "dist/internal/watch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/bounce.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounce",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\", transform: \"translate3d(0, 0, 0)\", }, { offset: 0.2, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\", transform: \"translate3d(0, 0, 0)\", }, { offset: 0.4, easing: \"cubic-bezier(0.755, 0.05, 0.855, 0.06)\", transform: \"translate3d(0, -30px, 0) scaleY(1.1)\", }, { offset: 0.43, easing: \"cubic-bezier(0.755, 0.05, 0.855, 0.06)\", transform: \"translate3d(0, -30px, 0) scaleY(1.1)\", }, { offset: 0.53, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\", transform: \"translate3d(0, 0, 0)\", }, { offset: 0.7, easing: \"cubic-bezier(0.755, 0.05, 0.855, 0.06)\", transform: \"translate3d(0, -15px, 0) scaleY(1.05)\", }, { \"offset\": 0.8, \"transition-timing-function\": \"cubic-bezier(0.215, 0.61, 0.355, 1)\", \"transform\": \"translate3d(0, 0, 0) scaleY(0.95)\", }, { offset: 0.9, transform: \"translate3d(0, -4px, 0) scaleY(1.02)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\", transform: \"translate3d(0, 0, 0)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounce",
          "declaration": {
            "name": "bounce",
            "module": "src/animations/attention_seekers/bounce.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/flash.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flash",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 0.25, opacity: \"0\" }, { offset: 0.5, opacity: \"1\" }, { offset: 0.75, opacity: \"0\" }, { offset: 1, opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flash",
          "declaration": {
            "name": "flash",
            "module": "src/animations/attention_seekers/flash.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/headShake.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "headShake",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translateX(0)\" }, { offset: 0.065, transform: \"translateX(-6px) rotateY(-9deg)\" }, { offset: 0.185, transform: \"translateX(5px) rotateY(7deg)\" }, { offset: 0.315, transform: \"translateX(-3px) rotateY(-5deg)\" }, { offset: 0.435, transform: \"translateX(2px) rotateY(3deg)\" }, { offset: 0.5, transform: \"translateX(0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "headShake",
          "declaration": {
            "name": "headShake",
            "module": "src/animations/attention_seekers/headShake.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/heartBeat.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "heartBeat",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale(1)\" }, { offset: 0.14, transform: \"scale(1.3)\" }, { offset: 0.28, transform: \"scale(1)\" }, { offset: 0.42, transform: \"scale(1.3)\" }, { offset: 0.7, transform: \"scale(1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "heartBeat",
          "declaration": {
            "name": "heartBeat",
            "module": "src/animations/attention_seekers/heartBeat.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/jello.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "jello",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.111, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.222, transform: \"skewX(-12.5deg) skewY(-12.5deg)\" }, { offset: 0.33299999999999996, transform: \"skewX(6.25deg) skewY(6.25deg)\" }, { offset: 0.444, transform: \"skewX(-3.125deg) skewY(-3.125deg)\" }, { offset: 0.555, transform: \"skewX(1.5625deg) skewY(1.5625deg)\" }, { offset: 0.6659999999999999, transform: \"skewX(-0.78125deg) skewY(-0.78125deg)\", }, { offset: 0.777, transform: \"skewX(0.390625deg) skewY(0.390625deg)\" }, { offset: 0.888, transform: \"skewX(-0.1953125deg) skewY(-0.1953125deg)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "jello",
          "declaration": {
            "name": "jello",
            "module": "src/animations/attention_seekers/jello.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/pulse.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "pulse",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale3d(1, 1, 1)\" }, { offset: 0.5, transform: \"scale3d(1.05, 1.05, 1.05)\" }, { offset: 1, transform: \"scale3d(1, 1, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pulse",
          "declaration": {
            "name": "pulse",
            "module": "src/animations/attention_seekers/pulse.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/rubberBand.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rubberBand",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale3d(1, 1, 1)\" }, { offset: 0.3, transform: \"scale3d(1.25, 0.75, 1)\" }, { offset: 0.4, transform: \"scale3d(0.75, 1.25, 1)\" }, { offset: 0.5, transform: \"scale3d(1.15, 0.85, 1)\" }, { offset: 0.65, transform: \"scale3d(0.95, 1.05, 1)\" }, { offset: 0.75, transform: \"scale3d(1.05, 0.95, 1)\" }, { offset: 1, transform: \"scale3d(1, 1, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rubberBand",
          "declaration": {
            "name": "rubberBand",
            "module": "src/animations/attention_seekers/rubberBand.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/shake.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "shake",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.1, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.2, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.3, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.4, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.5, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.6, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.7, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.8, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.9, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shake",
          "declaration": {
            "name": "shake",
            "module": "src/animations/attention_seekers/shake.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/shakeX.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "shakeX",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.1, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.2, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.3, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.4, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.5, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.6, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.7, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 0.8, transform: \"translate3d(10px, 0, 0)\" }, { offset: 0.9, transform: \"translate3d(-10px, 0, 0)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shakeX",
          "declaration": {
            "name": "shakeX",
            "module": "src/animations/attention_seekers/shakeX.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/shakeY.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "shakeY",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.1, transform: \"translate3d(0, -10px, 0)\" }, { offset: 0.2, transform: \"translate3d(0, 10px, 0)\" }, { offset: 0.3, transform: \"translate3d(0, -10px, 0)\" }, { offset: 0.4, transform: \"translate3d(0, 10px, 0)\" }, { offset: 0.5, transform: \"translate3d(0, -10px, 0)\" }, { offset: 0.6, transform: \"translate3d(0, 10px, 0)\" }, { offset: 0.7, transform: \"translate3d(0, -10px, 0)\" }, { offset: 0.8, transform: \"translate3d(0, 10px, 0)\" }, { offset: 0.9, transform: \"translate3d(0, -10px, 0)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shakeY",
          "declaration": {
            "name": "shakeY",
            "module": "src/animations/attention_seekers/shakeY.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/swing.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "swing",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, transform: \"rotate3d(0, 0, 1, 15deg)\" }, { offset: 0.4, transform: \"rotate3d(0, 0, 1, -10deg)\" }, { offset: 0.6, transform: \"rotate3d(0, 0, 1, 5deg)\" }, { offset: 0.8, transform: \"rotate3d(0, 0, 1, -5deg)\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, 0deg)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "swing",
          "declaration": {
            "name": "swing",
            "module": "src/animations/attention_seekers/swing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/tada.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tada",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale3d(1, 1, 1)\" }, { offset: 0.1, transform: \"scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.2, transform: \"scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.3, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)\", }, { offset: 0.4, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.5, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)\", }, { offset: 0.6, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.7, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)\", }, { offset: 0.8, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.9, transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)\", }, { offset: 1, transform: \"scale3d(1, 1, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tada",
          "declaration": {
            "name": "tada",
            "module": "src/animations/attention_seekers/tada.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/attention_seekers/wobble.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "wobble",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 0.15, transform: \"translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)\", }, { offset: 0.3, transform: \"translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)\", }, { offset: 0.45, transform: \"translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)\", }, { offset: 0.6, transform: \"translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)\", }, { offset: 0.75, transform: \"translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)\", }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wobble",
          "declaration": {
            "name": "wobble",
            "module": "src/animations/attention_seekers/wobble.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_entrances/backInDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backInDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translateY(-1200px) scale(0.7)\", opacity: \"0.7\" }, { offset: 0.8, transform: \"translateY(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"scale(1)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backInDown",
          "declaration": {
            "name": "backInDown",
            "module": "src/animations/back_entrances/backInDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_entrances/backInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translateX(-2000px) scale(0.7)\", opacity: \"0.7\" }, { offset: 0.8, transform: \"translateX(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"scale(1)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backInLeft",
          "declaration": {
            "name": "backInLeft",
            "module": "src/animations/back_entrances/backInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_entrances/backInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translateX(2000px) scale(0.7)\", opacity: \"0.7\" }, { offset: 0.8, transform: \"translateX(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"scale(1)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backInRight",
          "declaration": {
            "name": "backInRight",
            "module": "src/animations/back_entrances/backInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_entrances/backInUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backInUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translateY(1200px) scale(0.7)\", opacity: \"0.7\" }, { offset: 0.8, transform: \"translateY(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"scale(1)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backInUp",
          "declaration": {
            "name": "backInUp",
            "module": "src/animations/back_entrances/backInUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_exits/backOutDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backOutDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale(1)\", opacity: \"1\" }, { offset: 0.2, transform: \"translateY(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"translateY(700px) scale(0.7)\", opacity: \"0.7\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backOutDown",
          "declaration": {
            "name": "backOutDown",
            "module": "src/animations/back_exits/backOutDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_exits/backOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale(1)\", opacity: \"1\" }, { offset: 0.2, transform: \"translateX(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"translateX(-2000px) scale(0.7)\", opacity: \"0.7\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backOutLeft",
          "declaration": {
            "name": "backOutLeft",
            "module": "src/animations/back_exits/backOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_exits/backOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale(1)\", opacity: \"1\" }, { offset: 0.2, transform: \"translateX(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"translateX(2000px) scale(0.7)\", opacity: \"0.7\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backOutRight",
          "declaration": {
            "name": "backOutRight",
            "module": "src/animations/back_exits/backOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/back_exits/backOutUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "backOutUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"scale(1)\", opacity: \"1\" }, { offset: 0.2, transform: \"translateY(0px) scale(0.7)\", opacity: \"0.7\" }, { offset: 1, transform: \"translateY(-700px) scale(0.7)\", opacity: \"0.7\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backOutUp",
          "declaration": {
            "name": "backOutUp",
            "module": "src/animations/back_exits/backOutUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_entrances/bounceIn.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceIn",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.3, 0.3, 0.3)\" }, { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.2, transform: \"scale3d(1.1, 1.1, 1.1)\" }, { offset: 0.2, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.4, transform: \"scale3d(0.9, 0.9, 0.9)\" }, { offset: 0.4, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.6, opacity: \"1\", transform: \"scale3d(1.03, 1.03, 1.03)\" }, { offset: 0.6, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.8, transform: \"scale3d(0.97, 0.97, 0.97)\" }, { offset: 0.8, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 1, opacity: \"1\", transform: \"scale3d(1, 1, 1)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceIn",
          "declaration": {
            "name": "bounceIn",
            "module": "src/animations/bouncing_entrances/bounceIn.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_entrances/bounceInDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceInDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, -3000px, 0) scaleY(3)\", }, { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.6, opacity: \"1\", transform: \"translate3d(0, 25px, 0) scaleY(0.9)\", }, { offset: 0.6, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.75, transform: \"translate3d(0, -10px, 0) scaleY(0.95)\" }, { offset: 0.75, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.9, transform: \"translate3d(0, 5px, 0) scaleY(0.985)\" }, { offset: 0.9, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceInDown",
          "declaration": {
            "name": "bounceInDown",
            "module": "src/animations/bouncing_entrances/bounceInDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_entrances/bounceInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-3000px, 0, 0) scaleX(3)\", }, { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.6, opacity: \"1\", transform: \"translate3d(25px, 0, 0) scaleX(1)\", }, { offset: 0.6, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.75, transform: \"translate3d(-10px, 0, 0) scaleX(0.98)\" }, { offset: 0.75, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.9, transform: \"translate3d(5px, 0, 0) scaleX(0.995)\" }, { offset: 0.9, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceInLeft",
          "declaration": {
            "name": "bounceInLeft",
            "module": "src/animations/bouncing_entrances/bounceInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_entrances/bounceInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(3000px, 0, 0) scaleX(3)\", }, { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.6, opacity: \"1\", transform: \"translate3d(-25px, 0, 0) scaleX(1)\", }, { offset: 0.6, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.75, transform: \"translate3d(10px, 0, 0) scaleX(0.98)\" }, { offset: 0.75, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.9, transform: \"translate3d(-5px, 0, 0) scaleX(0.995)\" }, { offset: 0.9, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceInRight",
          "declaration": {
            "name": "bounceInRight",
            "module": "src/animations/bouncing_entrances/bounceInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_entrances/bounceInUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceInUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, 3000px, 0) scaleY(5)\", }, { offset: 0, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.6, opacity: \"1\", transform: \"translate3d(0, -20px, 0) scaleY(0.9)\", }, { offset: 0.6, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.75, transform: \"translate3d(0, 10px, 0) scaleY(0.95)\" }, { offset: 0.75, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 0.9, transform: \"translate3d(0, -5px, 0) scaleY(0.985)\" }, { offset: 0.9, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, easing: \"cubic-bezier(0.215, 0.61, 0.355, 1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceInUp",
          "declaration": {
            "name": "bounceInUp",
            "module": "src/animations/bouncing_entrances/bounceInUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_exits/bounceOut.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceOut",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, transform: \"scale3d(0.9, 0.9, 0.9)\" }, { offset: 0.5, opacity: \"1\", transform: \"scale3d(1.1, 1.1, 1.1)\" }, { offset: 0.55, opacity: \"1\", transform: \"scale3d(1.1, 1.1, 1.1)\" }, { offset: 1, opacity: \"0\", transform: \"scale3d(0.3, 0.3, 0.3)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceOut",
          "declaration": {
            "name": "bounceOut",
            "module": "src/animations/bouncing_exits/bounceOut.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_exits/bounceOutDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceOutDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, transform: \"translate3d(0, 10px, 0) scaleY(0.985)\" }, { offset: 0.4, opacity: \"1\", transform: \"translate3d(0, -20px, 0) scaleY(0.9)\", }, { offset: 0.45, opacity: \"1\", transform: \"translate3d(0, -20px, 0) scaleY(0.9)\", }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, 2000px, 0) scaleY(3)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceOutDown",
          "declaration": {
            "name": "bounceOutDown",
            "module": "src/animations/bouncing_exits/bounceOutDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_exits/bounceOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, opacity: \"1\", transform: \"translate3d(20px, 0, 0) scaleX(0.9)\", }, { offset: 1, opacity: \"0\", transform: \"translate3d(-2000px, 0, 0) scaleX(2)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceOutLeft",
          "declaration": {
            "name": "bounceOutLeft",
            "module": "src/animations/bouncing_exits/bounceOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_exits/bounceOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, opacity: \"1\", transform: \"translate3d(-20px, 0, 0) scaleX(0.9)\", }, { offset: 1, opacity: \"0\", transform: \"translate3d(2000px, 0, 0) scaleX(2)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceOutRight",
          "declaration": {
            "name": "bounceOutRight",
            "module": "src/animations/bouncing_exits/bounceOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/bouncing_exits/bounceOutUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "bounceOutUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.2, transform: \"translate3d(0, -10px, 0) scaleY(0.985)\" }, { offset: 0.4, opacity: \"1\", transform: \"translate3d(0, 20px, 0) scaleY(0.9)\", }, { offset: 0.45, opacity: \"1\", transform: \"translate3d(0, 20px, 0) scaleY(0.9)\", }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, -2000px, 0) scaleY(3)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bounceOutUp",
          "declaration": {
            "name": "bounceOutUp",
            "module": "src/animations/bouncing_exits/bounceOutUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/easings/easings.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "easings",
          "type": {
            "text": "object"
          },
          "default": "{ linear: \"linear\", ease: \"ease\", easeIn: \"ease-in\", easeOut: \"ease-out\", easeInOut: \"ease-in-out\", easeInSine: \"cubic-bezier(0.47, 0, 0.745, 0.715)\", easeOutSine: \"cubic-bezier(0.39, 0.575, 0.565, 1)\", easeInOutSine: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\", easeInQuad: \"cubic-bezier(0.55, 0.085, 0.68, 0.53)\", easeOutQuad: \"cubic-bezier(0.25, 0.46, 0.45, 0.94)\", easeInOutQuad: \"cubic-bezier(0.455, 0.03, 0.515, 0.955)\", easeInCubic: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", easeOutCubic: \"cubic-bezier(0.215, 0.61, 0.355, 1)\", easeInOutCubic: \"cubic-bezier(0.645, 0.045, 0.355, 1)\", easeInQuart: \"cubic-bezier(0.895, 0.03, 0.685, 0.22)\", easeOutQuart: \"cubic-bezier(0.165, 0.84, 0.44, 1)\", easeInOutQuart: \"cubic-bezier(0.77, 0, 0.175, 1)\", easeInQuint: \"cubic-bezier(0.755, 0.05, 0.855, 0.06)\", easeOutQuint: \"cubic-bezier(0.23, 1, 0.32, 1)\", easeInOutQuint: \"cubic-bezier(0.86, 0, 0.07, 1)\", easeInExpo: \"cubic-bezier(0.95, 0.05, 0.795, 0.035)\", easeOutExpo: \"cubic-bezier(0.19, 1, 0.22, 1)\", easeInOutExpo: \"cubic-bezier(1, 0, 0, 1)\", easeInCirc: \"cubic-bezier(0.6, 0.04, 0.98, 0.335)\", easeOutCirc: \"cubic-bezier(0.075, 0.82, 0.165, 1)\", easeInOutCirc: \"cubic-bezier(0.785, 0.135, 0.15, 0.86)\", easeInBack: \"cubic-bezier(0.6, -0.28, 0.735, 0.045)\", easeOutBack: \"cubic-bezier(0.175, 0.885, 0.32, 1.275)\", easeInOutBack: \"cubic-bezier(0.68, -0.55, 0.265, 1.55)\", }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "easings",
          "declaration": {
            "name": "easings",
            "module": "src/animations/easings/easings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeIn.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeIn",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\" }, { offset: 1, opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeIn",
          "declaration": {
            "name": "fadeIn",
            "module": "src/animations/fading_entrances/fadeIn.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInBottomLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInBottomLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-100%, 100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInBottomLeft",
          "declaration": {
            "name": "fadeInBottomLeft",
            "module": "src/animations/fading_entrances/fadeInBottomLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInBottomRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInBottomRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(100%, 100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInBottomRight",
          "declaration": {
            "name": "fadeInBottomRight",
            "module": "src/animations/fading_entrances/fadeInBottomRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, -100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInDown",
          "declaration": {
            "name": "fadeInDown",
            "module": "src/animations/fading_entrances/fadeInDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInDownBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInDownBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, -2000px, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInDownBig",
          "declaration": {
            "name": "fadeInDownBig",
            "module": "src/animations/fading_entrances/fadeInDownBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-100%, 0, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInLeft",
          "declaration": {
            "name": "fadeInLeft",
            "module": "src/animations/fading_entrances/fadeInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInLeftBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInLeftBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-2000px, 0, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInLeftBig",
          "declaration": {
            "name": "fadeInLeftBig",
            "module": "src/animations/fading_entrances/fadeInLeftBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(100%, 0, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInRight",
          "declaration": {
            "name": "fadeInRight",
            "module": "src/animations/fading_entrances/fadeInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInRightBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInRightBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(2000px, 0, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInRightBig",
          "declaration": {
            "name": "fadeInRightBig",
            "module": "src/animations/fading_entrances/fadeInRightBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInTopLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInTopLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-100%, -100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInTopLeft",
          "declaration": {
            "name": "fadeInTopLeft",
            "module": "src/animations/fading_entrances/fadeInTopLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInTopRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInTopRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(100%, -100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInTopRight",
          "declaration": {
            "name": "fadeInTopRight",
            "module": "src/animations/fading_entrances/fadeInTopRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, 100%, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInUp",
          "declaration": {
            "name": "fadeInUp",
            "module": "src/animations/fading_entrances/fadeInUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_entrances/fadeInUpBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInUpBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(0, 2000px, 0)\" }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInUpBig",
          "declaration": {
            "name": "fadeInUpBig",
            "module": "src/animations/fading_entrances/fadeInUpBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOut.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOut",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOut",
          "declaration": {
            "name": "fadeOut",
            "module": "src/animations/fading_exits/fadeOut.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutBottomLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutBottomLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(-100%, 100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutBottomLeft",
          "declaration": {
            "name": "fadeOutBottomLeft",
            "module": "src/animations/fading_exits/fadeOutBottomLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutBottomRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutBottomRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(100%, 100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutBottomRight",
          "declaration": {
            "name": "fadeOutBottomRight",
            "module": "src/animations/fading_exits/fadeOutBottomRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, 100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutDown",
          "declaration": {
            "name": "fadeOutDown",
            "module": "src/animations/fading_exits/fadeOutDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutDownBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutDownBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, 2000px, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutDownBig",
          "declaration": {
            "name": "fadeOutDownBig",
            "module": "src/animations/fading_exits/fadeOutDownBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(-100%, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutLeft",
          "declaration": {
            "name": "fadeOutLeft",
            "module": "src/animations/fading_exits/fadeOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutLeftBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutLeftBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(-2000px, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutLeftBig",
          "declaration": {
            "name": "fadeOutLeftBig",
            "module": "src/animations/fading_exits/fadeOutLeftBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(100%, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutRight",
          "declaration": {
            "name": "fadeOutRight",
            "module": "src/animations/fading_exits/fadeOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutRightBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutRightBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(2000px, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutRightBig",
          "declaration": {
            "name": "fadeOutRightBig",
            "module": "src/animations/fading_exits/fadeOutRightBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutTopLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutTopLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(-100%, -100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutTopLeft",
          "declaration": {
            "name": "fadeOutTopLeft",
            "module": "src/animations/fading_exits/fadeOutTopLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutTopRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutTopRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(100%, -100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutTopRight",
          "declaration": {
            "name": "fadeOutTopRight",
            "module": "src/animations/fading_exits/fadeOutTopRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, -100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutUp",
          "declaration": {
            "name": "fadeOutUp",
            "module": "src/animations/fading_exits/fadeOutUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/fading_exits/fadeOutUpBig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeOutUpBig",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(0, -2000px, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeOutUpBig",
          "declaration": {
            "name": "fadeOutUpBig",
            "module": "src/animations/fading_exits/fadeOutUpBig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/flippers/flip.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flip",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg)\", easing: \"ease-out\", }, { offset: 0.4, transform: \"perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\\n rotate3d(0, 1, 0, -190deg)\", easing: \"ease-out\", }, { offset: 0.5, transform: \"perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\\n rotate3d(0, 1, 0, -170deg)\", easing: \"ease-in\", }, { offset: 0.8, transform: \"perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\\n rotate3d(0, 1, 0, 0deg)\", easing: \"ease-in\", }, { offset: 1, transform: \"perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg)\", easing: \"ease-in\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flip",
          "declaration": {
            "name": "flip",
            "module": "src/animations/flippers/flip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/flippers/flipInX.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flipInX",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"perspective(400px) rotate3d(1, 0, 0, 90deg)\", easing: \"ease-in\", opacity: \"0\", }, { offset: 0.4, transform: \"perspective(400px) rotate3d(1, 0, 0, -20deg)\", easing: \"ease-in\", }, { offset: 0.6, transform: \"perspective(400px) rotate3d(1, 0, 0, 10deg)\", opacity: \"1\", }, { offset: 0.8, transform: \"perspective(400px) rotate3d(1, 0, 0, -5deg)\" }, { offset: 1, transform: \"perspective(400px)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flipInX",
          "declaration": {
            "name": "flipInX",
            "module": "src/animations/flippers/flipInX.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/flippers/flipInY.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flipInY",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"perspective(400px) rotate3d(0, 1, 0, 90deg)\", easing: \"ease-in\", opacity: \"0\", }, { offset: 0.4, transform: \"perspective(400px) rotate3d(0, 1, 0, -20deg)\", easing: \"ease-in\", }, { offset: 0.6, transform: \"perspective(400px) rotate3d(0, 1, 0, 10deg)\", opacity: \"1\", }, { offset: 0.8, transform: \"perspective(400px) rotate3d(0, 1, 0, -5deg)\" }, { offset: 1, transform: \"perspective(400px)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flipInY",
          "declaration": {
            "name": "flipInY",
            "module": "src/animations/flippers/flipInY.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/flippers/flipOutX.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flipOutX",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"perspective(400px)\" }, { offset: 0.3, transform: \"perspective(400px) rotate3d(1, 0, 0, -20deg)\", opacity: \"1\", }, { offset: 1, transform: \"perspective(400px) rotate3d(1, 0, 0, 90deg)\", opacity: \"0\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flipOutX",
          "declaration": {
            "name": "flipOutX",
            "module": "src/animations/flippers/flipOutX.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/flippers/flipOutY.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "flipOutY",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"perspective(400px)\" }, { offset: 0.3, transform: \"perspective(400px) rotate3d(0, 1, 0, -15deg)\", opacity: \"1\", }, { offset: 1, transform: \"perspective(400px) rotate3d(0, 1, 0, 90deg)\", opacity: \"0\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flipOutY",
          "declaration": {
            "name": "flipOutY",
            "module": "src/animations/flippers/flipOutY.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/lightspeed/lightSpeedInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightSpeedInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(-100%, 0, 0) skewX(30deg)\", opacity: \"0\", }, { offset: 0.6, transform: \"skewX(-20deg)\", opacity: \"1\" }, { offset: 0.8, transform: \"skewX(5deg)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightSpeedInLeft",
          "declaration": {
            "name": "lightSpeedInLeft",
            "module": "src/animations/lightspeed/lightSpeedInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/lightspeed/lightSpeedInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightSpeedInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(100%, 0, 0) skewX(-30deg)\", opacity: \"0\", }, { offset: 0.6, transform: \"skewX(20deg)\", opacity: \"1\" }, { offset: 0.8, transform: \"skewX(-5deg)\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightSpeedInRight",
          "declaration": {
            "name": "lightSpeedInRight",
            "module": "src/animations/lightspeed/lightSpeedInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/lightspeed/lightSpeedOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightSpeedOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"translate3d(-100%, 0, 0) skewX(-30deg)\", opacity: \"0\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightSpeedOutLeft",
          "declaration": {
            "name": "lightSpeedOutLeft",
            "module": "src/animations/lightspeed/lightSpeedOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/lightspeed/lightSpeedOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightSpeedOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"translate3d(100%, 0, 0) skewX(30deg)\", opacity: \"0\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightSpeedOutRight",
          "declaration": {
            "name": "lightSpeedOutRight",
            "module": "src/animations/lightspeed/lightSpeedOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_entrances/rotateIn.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateIn",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"rotate3d(0, 0, 1, -200deg)\", opacity: \"0\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateIn",
          "declaration": {
            "name": "rotateIn",
            "module": "src/animations/rotating_entrances/rotateIn.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_entrances/rotateInDownLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateInDownLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"rotate3d(0, 0, 1, -45deg)\", opacity: \"0\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateInDownLeft",
          "declaration": {
            "name": "rotateInDownLeft",
            "module": "src/animations/rotating_entrances/rotateInDownLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_entrances/rotateInDownRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateInDownRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"rotate3d(0, 0, 1, 45deg)\", opacity: \"0\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateInDownRight",
          "declaration": {
            "name": "rotateInDownRight",
            "module": "src/animations/rotating_entrances/rotateInDownRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_entrances/rotateInUpLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateInUpLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"rotate3d(0, 0, 1, 45deg)\", opacity: \"0\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateInUpLeft",
          "declaration": {
            "name": "rotateInUpLeft",
            "module": "src/animations/rotating_entrances/rotateInUpLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_entrances/rotateInUpRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateInUpRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"rotate3d(0, 0, 1, -90deg)\", opacity: \"0\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\", opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateInUpRight",
          "declaration": {
            "name": "rotateInUpRight",
            "module": "src/animations/rotating_entrances/rotateInUpRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_exits/rotateOut.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateOut",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, 200deg)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateOut",
          "declaration": {
            "name": "rotateOut",
            "module": "src/animations/rotating_exits/rotateOut.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_exits/rotateOutDownLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateOutDownLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, 45deg)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateOutDownLeft",
          "declaration": {
            "name": "rotateOutDownLeft",
            "module": "src/animations/rotating_exits/rotateOutDownLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_exits/rotateOutDownRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateOutDownRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, -45deg)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateOutDownRight",
          "declaration": {
            "name": "rotateOutDownRight",
            "module": "src/animations/rotating_exits/rotateOutDownRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_exits/rotateOutUpLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateOutUpLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, -45deg)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateOutUpLeft",
          "declaration": {
            "name": "rotateOutUpLeft",
            "module": "src/animations/rotating_exits/rotateOutUpLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/rotating_exits/rotateOutUpRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rotateOutUpRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, transform: \"rotate3d(0, 0, 1, 90deg)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateOutUpRight",
          "declaration": {
            "name": "rotateOutUpRight",
            "module": "src/animations/rotating_exits/rotateOutUpRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_entrances/slideInDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideInDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, -100%, 0)\", visibility: \"visible\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideInDown",
          "declaration": {
            "name": "slideInDown",
            "module": "src/animations/sliding_entrances/slideInDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_entrances/slideInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(-100%, 0, 0)\", visibility: \"visible\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideInLeft",
          "declaration": {
            "name": "slideInLeft",
            "module": "src/animations/sliding_entrances/slideInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_entrances/slideInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(100%, 0, 0)\", visibility: \"visible\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideInRight",
          "declaration": {
            "name": "slideInRight",
            "module": "src/animations/sliding_entrances/slideInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_entrances/slideInUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideInUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 100%, 0)\", visibility: \"visible\" }, { offset: 1, transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideInUp",
          "declaration": {
            "name": "slideInUp",
            "module": "src/animations/sliding_entrances/slideInUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_exits/slideOutDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideOutDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, visibility: \"hidden\", transform: \"translate3d(0, 100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideOutDown",
          "declaration": {
            "name": "slideOutDown",
            "module": "src/animations/sliding_exits/slideOutDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_exits/slideOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, visibility: \"hidden\", transform: \"translate3d(-100%, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideOutLeft",
          "declaration": {
            "name": "slideOutLeft",
            "module": "src/animations/sliding_exits/slideOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_exits/slideOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, visibility: \"hidden\", transform: \"translate3d(100%, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideOutRight",
          "declaration": {
            "name": "slideOutRight",
            "module": "src/animations/sliding_exits/slideOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/sliding_exits/slideOutUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slideOutUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, transform: \"translate3d(0, 0, 0)\" }, { offset: 1, visibility: \"hidden\", transform: \"translate3d(0, -100%, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slideOutUp",
          "declaration": {
            "name": "slideOutUp",
            "module": "src/animations/sliding_exits/slideOutUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/specials/hinge.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "hinge",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, easing: \"ease-in-out\" }, { offset: 0.2, transform: \"rotate3d(0, 0, 1, 80deg)\", easing: \"ease-in-out\", }, { offset: 0.4, transform: \"rotate3d(0, 0, 1, 60deg)\", easing: \"ease-in-out\", opacity: \"1\", }, { offset: 0.6, transform: \"rotate3d(0, 0, 1, 80deg)\", easing: \"ease-in-out\", }, { offset: 0.8, transform: \"rotate3d(0, 0, 1, 60deg)\", easing: \"ease-in-out\", opacity: \"1\", }, { offset: 1, transform: \"translate3d(0, 700px, 0)\", opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hinge",
          "declaration": {
            "name": "hinge",
            "module": "src/animations/specials/hinge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/specials/jackInTheBox.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "jackInTheBox",
          "type": {
            "text": "array"
          },
          "default": "[ { \"offset\": 0, \"opacity\": \"0\", \"transform\": \"scale(0.1) rotate(30deg)\", \"transform-origin\": \"center bottom\", }, { offset: 0.5, transform: \"rotate(-10deg)\" }, { offset: 0.7, transform: \"rotate(3deg)\" }, { offset: 1, opacity: \"1\", transform: \"scale(1)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "jackInTheBox",
          "declaration": {
            "name": "jackInTheBox",
            "module": "src/animations/specials/jackInTheBox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/specials/rollIn.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rollIn",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg)\", }, { offset: 1, opacity: \"1\", transform: \"translate3d(0, 0, 0)\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rollIn",
          "declaration": {
            "name": "rollIn",
            "module": "src/animations/specials/rollIn.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/specials/rollOut.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "rollOut",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 1, opacity: \"0\", transform: \"translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rollOut",
          "declaration": {
            "name": "rollOut",
            "module": "src/animations/specials/rollOut.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_entrances/zoomIn.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomIn",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.3, 0.3, 0.3)\" }, { offset: 0.5, opacity: \"1\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomIn",
          "declaration": {
            "name": "zoomIn",
            "module": "src/animations/zooming_entrances/zoomIn.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_entrances/zoomInDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomInDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 0.6, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomInDown",
          "declaration": {
            "name": "zoomInDown",
            "module": "src/animations/zooming_entrances/zoomInDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_entrances/zoomInLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomInLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 0.6, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomInLeft",
          "declaration": {
            "name": "zoomInLeft",
            "module": "src/animations/zooming_entrances/zoomInLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_entrances/zoomInRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomInRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 0.6, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomInRight",
          "declaration": {
            "name": "zoomInRight",
            "module": "src/animations/zooming_entrances/zoomInRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_entrances/zoomInUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomInUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 0.6, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomInUp",
          "declaration": {
            "name": "zoomInUp",
            "module": "src/animations/zooming_entrances/zoomInUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_exits/zoomOut.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOut",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0, opacity: \"1\" }, { offset: 0.5, opacity: \"0\", transform: \"scale3d(0.3, 0.3, 0.3)\" }, { offset: 1, opacity: \"0\" }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOut",
          "declaration": {
            "name": "zoomOut",
            "module": "src/animations/zooming_exits/zoomOut.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_exits/zoomOutDown.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOutDown",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.4, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 1, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOutDown",
          "declaration": {
            "name": "zoomOutDown",
            "module": "src/animations/zooming_exits/zoomOutDown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_exits/zoomOutLeft.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOutLeft",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.4, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0)\", }, { offset: 1, opacity: \"0\", transform: \"scale(0.1) translate3d(-2000px, 0, 0)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOutLeft",
          "declaration": {
            "name": "zoomOutLeft",
            "module": "src/animations/zooming_exits/zoomOutLeft.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_exits/zoomOutRight.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOutRight",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.4, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0)\", }, { offset: 1, opacity: \"0\", transform: \"scale(0.1) translate3d(2000px, 0, 0)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOutRight",
          "declaration": {
            "name": "zoomOutRight",
            "module": "src/animations/zooming_exits/zoomOutRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/animations/zooming_exits/zoomOutUp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOutUp",
          "type": {
            "text": "array"
          },
          "default": "[ { offset: 0.4, opacity: \"1\", transform: \"scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0)\", easing: \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\", }, { offset: 1, opacity: \"0\", transform: \"scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0)\", easing: \"cubic-bezier(0.175, 0.885, 0.32, 1)\", }, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOutUp",
          "declaration": {
            "name": "zoomOutUp",
            "module": "src/animations/zooming_exits/zoomOutUp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/animation/animation.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcAnimation",
          "members": [
            {
              "kind": "field",
              "name": "animation",
              "type": {
                "text": "Animation | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasStarted",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "Promise<HTMLSlotElement>"
              }
            },
            {
              "kind": "field",
              "name": "delay",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "delay"
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "PlaybackDirection"
              },
              "default": "\"normal\"",
              "attribute": "direction"
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "attribute": "duration"
            },
            {
              "kind": "field",
              "name": "easing",
              "type": {
                "text": "string"
              },
              "default": "\"linear\"",
              "attribute": "easing"
            },
            {
              "kind": "field",
              "name": "endDelay",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "end-delay"
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "FillMode"
              },
              "default": "\"auto\"",
              "attribute": "fill"
            },
            {
              "kind": "field",
              "name": "iterations",
              "default": "Infinity",
              "attribute": "iterations"
            },
            {
              "kind": "field",
              "name": "iterationStart",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "iteration-start"
            },
            {
              "kind": "field",
              "name": "keyframes",
              "type": {
                "text": "Keyframe[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"none\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "play",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "play",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "playbackRate",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "playback-rate"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "CSSNumberish"
              }
            },
            {
              "kind": "field",
              "name": "handleAnimationFinish",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleAnimationCancel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "createAnimation",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "destroyAnimation",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleAnimationChange"
            },
            {
              "kind": "method",
              "name": "handlePlayChange"
            },
            {
              "kind": "method",
              "name": "handlePlaybackRateChange"
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "method",
              "name": "finish"
            }
          ],
          "attributes": [
            {
              "name": "delay",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "delay"
            },
            {
              "name": "direction",
              "type": {
                "text": "PlaybackDirection"
              },
              "default": "\"normal\"",
              "fieldName": "direction"
            },
            {
              "name": "duration",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "fieldName": "duration"
            },
            {
              "name": "easing",
              "type": {
                "text": "string"
              },
              "default": "\"linear\"",
              "fieldName": "easing"
            },
            {
              "name": "end-delay",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "endDelay"
            },
            {
              "name": "fill",
              "type": {
                "text": "FillMode"
              },
              "default": "\"auto\"",
              "fieldName": "fill"
            },
            {
              "name": "iterations",
              "default": "Infinity",
              "fieldName": "iterations"
            },
            {
              "name": "iteration-start",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "iterationStart"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"none\"",
              "fieldName": "name"
            },
            {
              "name": "play",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "play"
            },
            {
              "name": "playback-rate",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "playbackRate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-animation",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcAnimation",
          "declaration": {
            "name": "PcAnimation",
            "module": "src/components/animation/animation.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-animation",
          "declaration": {
            "name": "PcAnimation",
            "module": "src/components/animation/animation.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/animation/animation.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: contents; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/animation/animation.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/animation/animation.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./animation.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcAnimation",
            "module": "src/components/animation/animation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/animation/animations.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getAnimationNames"
        },
        {
          "kind": "function",
          "name": "getEasingNames"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "animations",
          "declaration": {
            "name": "animations",
            "module": "src/components/animation/animations.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationNames",
          "declaration": {
            "name": "getAnimationNames",
            "module": "src/components/animation/animations.ts"
          }
        },
        {
          "kind": "js",
          "name": "getEasingNames",
          "declaration": {
            "name": "getEasingNames",
            "module": "src/components/animation/animations.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/avatar/avatar.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcAvatar",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "hasError",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "image",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "image"
            },
            {
              "kind": "field",
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "initials"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "\"eager\" | \"lazy\""
              },
              "default": "\"eager\"",
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "\"circle\" | \"rounded\" | \"square\""
              },
              "default": "\"circle\"",
              "attribute": "shape",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleImageChange"
            },
            {
              "kind": "method",
              "name": "handleImageLoadError",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "image",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "image"
            },
            {
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "initials"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "loading",
              "type": {
                "text": "\"eager\" | \"lazy\""
              },
              "default": "\"eager\"",
              "fieldName": "loading"
            },
            {
              "name": "shape",
              "type": {
                "text": "\"circle\" | \"rounded\" | \"square\""
              },
              "default": "\"circle\"",
              "fieldName": "shape"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcAvatar",
          "declaration": {
            "name": "PcAvatar",
            "module": "src/components/avatar/avatar.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-avatar",
          "declaration": {
            "name": "PcAvatar",
            "module": "src/components/avatar/avatar.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/avatar/Avatar.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Avatar\", component: \"pc-avatar\", argTypes: { image: { control: \"file\" }, initials: { control: \"text\" }, label: { control: \"text\" }, loading: { control: \"select\", options: [\"eager\", \"lazy\"], }, shape: { control: \"select\", options: [\"circle\", \"rounded\", \"square\"], }, }, args: { image: undefined, initials: undefined, label: \"User avatar\", loading: \"eager\", shape: \"circle\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        },
        {
          "kind": "variable",
          "name": "Image",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: \"/avatar.png\", label: \"randomguy-2650’s avatar\", loading: \"eager\", shape: \"circle\", }, render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        },
        {
          "kind": "variable",
          "name": "Initials",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { initials: \"PC\", label: \"Placer Toolkit’s avatar\", loading: \"eager\", shape: \"circle\", }, render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        },
        {
          "kind": "variable",
          "name": "Rounded",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { label: \"Rounded user avatar\", loading: \"eager\", shape: \"rounded\", }, render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        },
        {
          "kind": "variable",
          "name": "Square",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { label: \"Square user avatar\", loading: \"eager\", shape: \"square\", }, render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        },
        {
          "kind": "variable",
          "name": "LazyLoaded",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: \"/avatar.png\", label: \"Lazy‐loaded user avatar\", loading: \"lazy\", shape: \"circle\", }, render: ({ image, initials, label, loading, shape }) => html` <pc-avatar image=${image} initials=${initials} label=${label} loading=${loading} shape=${shape} ></pc-avatar> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Image",
          "declaration": {
            "name": "Image",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Initials",
          "declaration": {
            "name": "Initials",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Rounded",
          "declaration": {
            "name": "Rounded",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Square",
          "declaration": {
            "name": "Square",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "LazyLoaded",
          "declaration": {
            "name": "LazyLoaded",
            "module": "src/components/avatar/Avatar.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/avatar/avatar.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --size: 3rem; display: inline-block; } .avatar { display: inline-flex; position: relative; align-items: center; justify-content: center; width: var(--size); height: var(--size); background-color: var(--pc-color-neutral-500); color: var(--pc-color-neutral-0); font-family: var(--pc-font-sans); font-size: calc(var(--size) * 0.4); font-weight: var(--pc-font-weight-bold); user-select: none; -webkit-user-select: none; vertical-align: middle; transition: all var(--pc-transition-fast) ease-in-out; } .circle, .circle .image { border-radius: var(--pc-border-radius-circle); } .rounded, .rounded .image { border-radius: var(--pc-border-radius-m); } .square { border-radius: 0; } .icon { display: flex; position: absolute; align-items: center; justify-content: center; top: 0; left: 0; width: 100%; height: 100%; } .initials { line-height: 1; text-transform: uppercase; } .image { position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; overflow: hidden; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/avatar/avatar.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/avatar/avatar.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./avatar.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcAvatar",
            "module": "src/components/avatar/avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/badge/badge.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcBadge",
          "members": [
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "| \"primary\"\n        | \"success\"\n        | \"neutral\"\n        | \"warning\"\n        | \"danger\""
              },
              "default": "\"primary\"",
              "attribute": "appearance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "rounded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pulse",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "| \"primary\"\n        | \"success\"\n        | \"neutral\"\n        | \"warning\"\n        | \"danger\""
              },
              "default": "\"primary\"",
              "fieldName": "appearance"
            },
            {
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rounded"
            },
            {
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pulse"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcBadge",
          "declaration": {
            "name": "PcBadge",
            "module": "src/components/badge/badge.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-badge",
          "declaration": {
            "name": "PcBadge",
            "module": "src/components/badge/badge.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/badge/Badge.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Badge\", component: \"pc-badge\", argTypes: { appearance: { control: \"select\", options: [\"primary\", \"success\", \"neutral\", \"warning\", \"danger\"], }, label: { control: \"text\" }, rounded: { control: \"boolean\" }, pulse: { control: \"boolean\" }, }, args: { appearance: \"primary\", label: \"Badge\", rounded: false, pulse: false, }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ appearance, label, rounded, pulse }) => html` <pc-badge appearance=${appearance} ?rounded=${rounded} ?pulse=${pulse}> ${label} </pc-badge> `, }"
        },
        {
          "kind": "variable",
          "name": "Success",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"success\", label: \"Success\", rounded: false, pulse: false, }, render: ({ appearance, label, rounded, pulse }) => html` <pc-badge appearance=${appearance} ?rounded=${rounded} ?pulse=${pulse}> ${label} </pc-badge> `, }"
        },
        {
          "kind": "variable",
          "name": "Rounded",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"primary\", label: \"Rounded\", rounded: true, pulse: false, }, render: ({ appearance, label, rounded, pulse }) => html` <pc-badge appearance=${appearance} ?rounded=${rounded} ?pulse=${pulse}> ${label} </pc-badge> `, }"
        },
        {
          "kind": "variable",
          "name": "Pulse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"primary\", label: \"Pulse\", rounded: false, pulse: true, }, render: ({ appearance, label, rounded, pulse }) => html` <pc-badge appearance=${appearance} ?rounded=${rounded} ?pulse=${pulse}> ${label} </pc-badge> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/badge/Badge.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/badge/Badge.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Success",
          "declaration": {
            "name": "Success",
            "module": "src/components/badge/Badge.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Rounded",
          "declaration": {
            "name": "Rounded",
            "module": "src/components/badge/Badge.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pulse",
          "declaration": {
            "name": "Pulse",
            "module": "src/components/badge/Badge.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/badge/badge.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-flex; } span { padding: var(--pc-spacing-xs) var(--pc-spacing-s); font-family: var(--pc-font-sans); font-size: var(--pc-font-size-xs); font-weight: var(--pc-font-weight-bold); color: var(--pc-color-neutral-0); border: 1px solid transparent; border-radius: var(--pc-border-radius-pill); user-select: none; -webkit-user-select: none; cursor: inherit; transition: all var(--pc-transition-fast) ease-in-out; } span, span.appearance-primary { --pulse-color: var(--pc-color-primary-600); background-color: var(--pc-color-primary-500); border: 1px solid var(--pc-color-primary-400); } span.appearance-success { --pulse-color: var(--pc-color-success-600); background-color: var(--pc-color-success-500); border: 1px solid var(--pc-color-success-400); } span.appearance-neutral { --pulse-color: var(--pc-color-neutral-600); background-color: var(--pc-color-neutral-500); border: 1px solid var(--pc-color-neutral-400); } span.appearance-warning { --pulse-color: var(--pc-color-warning-600); background-color: var(--pc-color-warning-500); border: 1px solid var(--pc-color-warning-400); } span.appearance-danger { --pulse-color: var(--pc-color-danger-600); background-color: var(--pc-color-danger-500); border: 1px solid var(--pc-color-danger-400); } span.rounded { border-radius: var(--pc-border-radius-s); } span.pulse { animation: pulse 1.5s cubic-bezier(0, 0.55, 0.45, 1) infinite; } @keyframes pulse { 0% { box-shadow: 0 0 0 0 var(--pulse-color); } 70% { box-shadow: 0 0 0 0.5rem transparent; } 100% { box-shadow: 0 0 0 0 transparent; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/badge/badge.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/badge/badge.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./badge.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcBadge",
            "module": "src/components/badge/badge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button/button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcButton",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "readonly": true,
              "default": "new FormControlController(this, { assumeInteractionOn: [\"click\"], })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController( this, \"[default]\", \"prefix\", \"suffix\", )"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "| \"default\"\n        | \"primary\"\n        | \"success\"\n        | \"warning\"\n        | \"danger\"\n        | \"text\""
              },
              "default": "\"default\"",
              "attribute": "appearance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "form"
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "formaction"
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "| \"application/x-www-form-url-encoded\"\n        | \"multipart/form-data\"\n        | \"text/plain\" | undefined"
              },
              "attribute": "formenctype"
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "\"GET\" | \"POST\" | undefined"
              },
              "attribute": "formmethod"
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "formnovalidate"
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "| \"_self\"\n        | \"_blank\"\n        | \"_parent\"\n        | \"_top\"\n        | string | undefined"
              },
              "attribute": "formtarget"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "outlined",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pill",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "\"noreferrer noopener\"",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
              },
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "| \"button\"\n        | \"submit\"\n        | \"reset\""
              },
              "default": "\"button\"",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "\"ltr\" | \"rtl\""
              },
              "privacy": "private",
              "default": "\"ltr\""
            },
            {
              "kind": "field",
              "name": "validity",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "updateDirection",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "click"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "title"
            },
            {
              "name": "appearance",
              "type": {
                "text": "| \"default\"\n        | \"primary\"\n        | \"success\"\n        | \"warning\"\n        | \"danger\"\n        | \"text\""
              },
              "default": "\"default\"",
              "fieldName": "appearance"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "download"
            },
            {
              "name": "form",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "form"
            },
            {
              "name": "formaction",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "formAction"
            },
            {
              "name": "formenctype",
              "type": {
                "text": "| \"application/x-www-form-url-encoded\"\n        | \"multipart/form-data\"\n        | \"text/plain\" | undefined"
              },
              "fieldName": "formEnctype"
            },
            {
              "name": "formmethod",
              "type": {
                "text": "\"GET\" | \"POST\" | undefined"
              },
              "fieldName": "formMethod"
            },
            {
              "name": "formnovalidate",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "formNoValidate"
            },
            {
              "name": "formtarget",
              "type": {
                "text": "| \"_self\"\n        | \"_blank\"\n        | \"_parent\"\n        | \"_top\"\n        | string | undefined"
              },
              "fieldName": "formTarget"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "href"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "name"
            },
            {
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "outlined"
            },
            {
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pill"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "\"noreferrer noopener\"",
              "fieldName": "rel"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "target",
              "type": {
                "text": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
              },
              "fieldName": "target"
            },
            {
              "name": "type",
              "type": {
                "text": "| \"button\"\n        | \"submit\"\n        | \"reset\""
              },
              "default": "\"button\"",
              "fieldName": "type"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcButton",
          "declaration": {
            "name": "PcButton",
            "module": "src/components/button/button.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-button",
          "declaration": {
            "name": "PcButton",
            "module": "src/components/button/button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button/Button.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Button\", component: \"pc-button\", argTypes: { appearance: { control: \"select\", options: [ \"default\", \"primary\", \"success\", \"warning\", \"danger\", \"text\", ], }, disabled: { control: \"boolean\" }, download: { control: \"text\" }, form: { control: \"text\" }, formAction: { control: \"text\" }, formEnctype: { control: \"select\", options: [ \"application/x-www-form-url-encoded\", \"multipart/form-data\", \"text/plain\", ], }, formMethod: { control: \"select\", options: [\"GET\", \"POST\"], }, formNoValidate: { control: \"boolean\" }, formTarget: { control: \"select\", options: [\"_self\", \"_blank\", \"_parent\", \"_top\"], }, href: { control: \"text\" }, label: { control: \"text\" }, name: { control: \"text\" }, outlined: { control: \"boolean\" }, pill: { control: \"boolean\" }, prefix: { control: \"text\" }, rel: { control: \"text\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, suffix: { control: \"text\" }, target: { control: \"select\", options: [\"_blank\", \"_parent\", \"_self\"], }, type: { control: \"select\", options: [\"button\", \"submit\", \"reset\"], }, value: { control: \"text\" }, }, args: { appearance: \"default\", disabled: false, download: undefined, form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, href: undefined, label: \"Button\", name: undefined, outlined: false, pill: false, prefix: undefined, rel: \"noreferrer noopener\", size: \"medium\", suffix: undefined, target: undefined, type: \"button\", value: undefined, }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Primary",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"primary\", disabled: false, label: \"Primary\", outlined: false, pill: false, rel: \"noreferrer noopener\", size: \"medium\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: false, label: \"Large\", outlined: false, pill: false, rel: \"noreferrer noopener\", size: \"large\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: false, label: \"Small\", outlined: false, pill: false, rel: \"noreferrer noopener\", size: \"small\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Link",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: false, href: \"https://example.com\", label: \"Link to example.com\", outlined: false, pill: false, rel: \"noreferrer noopener\", size: \"medium\", type: \"button\", target: \"_blank\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: true, label: \"Disabled\", outlined: false, pill: false, rel: \"noreferrer noopener\", size: \"medium\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Outlined",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: false, label: \"Outlined\", outlined: true, pill: false, rel: \"noreferrer noopener\", size: \"medium\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Pill",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", disabled: false, label: \"Pill\", outlined: false, pill: true, rel: \"noreferrer noopener\", size: \"medium\", type: \"button\", form: undefined, formAction: undefined, formEnctype: undefined, formMethod: undefined, formNoValidate: undefined, formTarget: undefined, name: undefined, value: undefined, }, render: ({ appearance, disabled, download, form, formAction, formEnctype, formMethod, formNoValidate, formTarget, href, label, name, outlined, pill, prefix, rel, size, suffix, target, type, value, }) => html` <pc-button type=${type} appearance=${appearance} size=${size} href=${href} target=${target} rel=${rel} value=${value} download=${download} form=${form} formAction=${formAction} formEnctype=${formEnctype} formMethod=${formMethod} ?formNoValidate=${formNoValidate} formTarget=${formTarget} name=${name} ?outlined=${outlined} ?pill=${pill} ?disabled=${disabled} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${label} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-button> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Primary",
          "declaration": {
            "name": "Primary",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Link",
          "declaration": {
            "name": "Link",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Outlined",
          "declaration": {
            "name": "Outlined",
            "module": "src/components/button/Button.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pill",
          "declaration": {
            "name": "Pill",
            "module": "src/components/button/Button.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button/button.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { position: relative; display: inline-block; width: auto; cursor: pointer; } .button { display: inline-flex; align-items: stretch; justify-content: center; width: auto; min-width: 100%; border: none; border-radius: var(--pc-border-radius-s); padding: 0; box-sizing: border-box; color: var(--pc-color-neutral-900); font-family: var(--pc-input-font-family); font-weight: var(--pc-font-weight-bold); vertical-align: middle; white-space: nowrap; user-select: none; -webkit-user-select: none; cursor: inherit; text-decoration: none; transition: all var(--pc-transition-fast) ease-in-out; text-align: center; } .button::-moz-focus-inner { border: 0; } .button:focus { outline: none; } .button:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .prefix, .suffix { display: flex; align-items: center; flex: 0 0 auto; pointer-events: none; } .prefix::slotted(*), .suffix::slotted(*) { transform: translateY(1px); } .label { display: inline-block; transition: color var(--pc-transition-fast) ease-in-out; } .button[disabled], .button[aria-disabled=\"true\"] { opacity: 0.6; cursor: not-allowed; } .button[disabled] *, .button[aria-disabled=\"true\"] * { pointer-events: none; } .button, .button.appearance-default { background-color: var(--pc-color-neutral-200); border: var(--pc-input-border-width) solid var(--pc-color-neutral-100); } .button:hover:not(.button[disabled]), .button.appearance-default:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-300); border: var(--pc-input-border-width) solid var(--pc-color-neutral-200); } .button:hover:active:not(.button[disabled]), .button.appearance-default:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-100); border: var(--pc-input-border-width) solid var(--pc-color-neutral-100); color: var(--pc-color-neutral-800); } .button.appearance-primary { background-color: var(--pc-color-primary-200); border: var(--pc-input-border-width) solid var(--pc-color-primary-100); } .button.appearance-primary:hover:not(.button[disabled]) { background-color: var(--pc-color-primary-300); border: var(--pc-input-border-width) solid var(--pc-color-primary-200); } .button.appearance-primary:hover:active:not(.button[disabled]) { background-color: var(--pc-color-primary-100); border: var(--pc-input-border-width) solid var(--pc-color-primary-100); color: var(--pc-color-primary-800); } .button.appearance-success { background-color: var(--pc-color-success-200); border: var(--pc-input-border-width) solid var(--pc-color-success-100); } .button.appearance-success:hover:not(.button[disabled]) { background-color: var(--pc-color-success-300); border: var(--pc-input-border-width) solid var(--pc-color-success-200); } .button.appearance-success:hover:active:not(.button[disabled]) { background-color: var(--pc-color-success-100); border: var(--pc-input-border-width) solid var(--pc-color-success-100); color: var(--pc-color-success-800); } .button.appearance-warning { background-color: var(--pc-color-warning-200); border: var(--pc-input-border-width) solid var(--pc-color-warning-100); } .button.appearance-warning:hover:not(.button[disabled]) { background-color: var(--pc-color-warning-300); border: var(--pc-input-border-width) solid var(--pc-color-warning-200); } .button.appearance-warning:hover:active:not(.button[disabled]) { background-color: var(--pc-color-warning-100); border: var(--pc-input-border-width) solid var(--pc-color-warning-100); color: var(--pc-color-warning-800); } .button.appearance-danger { background-color: var(--pc-color-danger-200); border: var(--pc-input-border-width) solid var(--pc-color-danger-100); } .button.appearance-danger:hover:not(.button[disabled]) { background-color: var(--pc-color-danger-300); border: var(--pc-input-border-width) solid var(--pc-color-danger-200); } .button.appearance-danger:hover:active:not(.button[disabled]) { background-color: var(--pc-color-danger-100); border: var(--pc-input-border-width) solid var(--pc-color-danger-100); color: var(--pc-color-danger-800); } .button.appearance-text { background-color: transparent; border: 1px solid transparent; } .button.appearance-text:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-200); border: 1px solid var(--pc-color-neutral-200); color: var(--pc-color-sky-600); } .button.appearance-text:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-100); border: 1px solid var(--pc-color-neutral-100); color: var(--pc-color-sky-500); } .button.size-small.has-prefix { padding-inline-start: var(--pc-spacing-s); } .button.size-small.has-suffix { padding-inline-end: var(--pc-spacing-s); } .button.size-medium.has-prefix { padding-inline-start: var(--pc-spacing-m); } .button.size-medium.has-suffix { padding-inline-end: var(--pc-spacing-m); } .button.size-large.has-prefix { padding-inline-start: var(--pc-spacing-l); } .button.size-large.has-suffix { padding-inline-end: var(--pc-spacing-l); } .button.has-prefix.has-label .label { padding-left: var(--pc-spacing-s); } .button.has-suffix.has-label .label { padding-right: var(--pc-spacing-s); } .button.size-small.has-label .label { padding: 0 var(--pc-spacing-s); } .button.size-medium.has-label .label { padding: 0 var(--pc-spacing-m); } .button.size-large.has-label .label { padding: 0 var(--pc-spacing-l); } .button.has-prefix.has-label .label { padding-left: var(--pc-spacing-s); } .button.has-suffix.has-label .label { padding-right: var(--pc-spacing-s); } .button.size-small { font-size: var(--pc-button-font-size-s); line-height: calc( var(--pc-input-height-s) - var(--pc-input-border-width) * 2 ); } .button.size-medium { min-height: var(--pc-input-height-m); font-size: var(--pc-button-font-size-m); line-height: calc( var(--pc-input-height-m) - var(--pc-input-border-width) * 2 ); } .button.size-large { font-size: var(--pc-button-font-size-l); line-height: calc( var(--pc-input-height-l) - var(--pc-input-border-width) * 2 ); } .button.outlined, .button.outlined:hover, .button.outlined:hover:active { background: transparent !important; } .radio.outlined:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-100) !important; } .radio.outlined:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-50) !important; } .radio.outlined.checked:not(.button[disabled]) { background-color: var(--pc-color-primary-500) !important; border-color: var(--pc-color-primary-500); color: var(--pc-color-neutral-0); } .radio.outlined.checked:hover:not(.button[disabled]) { background-color: var(--pc-color-primary-600) !important; border-color: var(--pc-color-primary-600); } .radio.outlined.checked:hover:active:not(.button[disabled]) { background-color: var(--pc-color-primary-400) !important; border-color: var(--pc-color-primary-400); color: var(--pc-color-neutral-0); } .button.pill { border-radius: var(--pc-border-radius-pill); } :host( [data-pc-button-group-button-first]:not( [data-pc-button-group-button-last] ) ) .button { border-start-end-radius: 0; border-end-end-radius: 0; } :host([data-pc-button-group-button-inner]) .button { border-radius: 0; } :host( [data-pc-button-group-button-last]:not( [data-pc-button-group-button-first] ) ) .button { border-start-start-radius: 0; border-end-start-radius: 0; } :host( [data-pc-button-group-button]:not( [data-pc-button-group-button-first] ) ) { margin-inline-start: calc(-1 * var(--pc-input-border-width)); } :host([data-pc-button-group-button-hover]), :host([data-pc-button-group-button-focus]) { z-index: 1; } :host([data-pc-button-group-button][checked]) { z-index: 2; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/button/button.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button/button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./button.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcButton",
            "module": "src/components/button/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button-group/button-group.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcButtonGroup",
          "members": [
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "disableRole",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcButtonGroup",
          "declaration": {
            "name": "PcButtonGroup",
            "module": "src/components/button-group/button-group.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-button-group",
          "declaration": {
            "name": "PcButtonGroup",
            "module": "src/components/button-group/button-group.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button-group/button-group.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; } .button-group { display: flex; flex-wrap: nowrap; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/button-group/button-group.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button-group/button-group.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./button-group.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcButtonGroup",
            "module": "src/components/button-group/button-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/button-group/ButtonGroup.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Button Group\", component: \"pc-button-group\", subcomponents: { \"pc-button\": \"pc-button\", }, argTypes: { appearance: { control: \"select\", options: [\"default\", \"primary\", \"success\", \"warning\", \"danger\"], }, label: { control: \"text\" }, pill: { control: \"boolean\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, }, args: { appearance: \"default\", label: \"A button group\", pill: false, size: \"medium\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ appearance, label, pill, size }) => html` <pc-button-group label=${label}> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Left </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Centre </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Right </pc-button> </pc-button-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Primary",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"primary\", label: \"A primary button group\", pill: false, size: \"medium\", }, render: ({ appearance, label, pill, size }) => html` <pc-button-group label=${label}> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Left </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Centre </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Right </pc-button> </pc-button-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", label: \"A large button group\", pill: false, size: \"large\", }, render: ({ appearance, label, pill, size }) => html` <pc-button-group label=${label}> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Left </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Centre </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Right </pc-button> </pc-button-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", label: \"A small button group\", pill: false, size: \"small\", }, render: ({ appearance, label, pill, size }) => html` <pc-button-group label=${label}> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Left </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Centre </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Right </pc-button> </pc-button-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Pill",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { appearance: \"default\", label: \"A button group with pill‐style buttons\", pill: true, size: \"medium\", }, render: ({ appearance, label, pill, size }) => html` <pc-button-group label=${label}> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Left </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Centre </pc-button> <pc-button appearance=${appearance} size=${size} ?pill=${pill}> Right </pc-button> </pc-button-group> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Primary",
          "declaration": {
            "name": "Primary",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pill",
          "declaration": {
            "name": "Pill",
            "module": "src/components/button-group/ButtonGroup.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/card/card.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcCard",
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController( this, \"image\", \"header\", \"footer\", )"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCard",
          "declaration": {
            "name": "PcCard",
            "module": "src/components/card/card.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-card",
          "declaration": {
            "name": "PcCard",
            "module": "src/components/card/card.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/card/Card.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Card\", component: \"pc-card\", argTypes: { image: { control: \"text\", description: \"The designated slot for images.\", }, header: { control: \"text\", description: \"The designated slot for the header.\", }, body: { control: \"text\", description: \"The designated slot for body text.\", }, footer: { control: \"text\", description: \"The designated slot for the footer.\", }, }, args: { image: `<img src=\"https://placehold.co/300x200\" alt=\"Placeholder image\" />`, header: `<strong>Lorem ipsum</strong>`, body: `<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>`, footer: `<pc-button appearance=\"primary\" pill><pc-icon slot=\"prefix\" library=\"default\" =\"solid\" name=\"cart-shopping\"></pc-icon>Buy</pc-button><pc-button appearance=\"text\" pill>More info</pc-button>`, }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ image, header, body, footer }) => html` <pc-card class=\"card-default\"> ${image ? html`<div slot=\"image\">${unsafeHTML(image)}</div>` : null} ${header ? html`<div slot=\"header\">${unsafeHTML(header)}</div>` : null} ${body ? html`${unsafeHTML(body)}` : null} ${footer ? html`<div slot=\"footer\">${unsafeHTML(footer)}</div>` : null} </pc-card> <style> .card-default { max-width: 300px; } .card-default div[slot=\"footer\"] { display: flex; align-items: center; justify-content: flex-end; gap: var(--pc-spacing-s); } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "BasicCard",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: \"\", header: \"\", body: \"<p>This is just a basic card. No image, no header, and no footer. Just your content.</p>\", footer: \"\", }, render: ({ image, header, body, footer }) => html` <pc-card class=\"card-basic\"> ${image ? html`<div slot=\"image\">${unsafeHTML(image)}</div>` : null} ${header ? html`<div slot=\"header\">${unsafeHTML(header)}</div>` : null} ${body ? html`${unsafeHTML(body)}` : null} ${footer ? html`<div slot=\"footer\">${unsafeHTML(footer)}</div>` : null} </pc-card> <style> .card-basic { max-width: 300px; } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "WithHeader",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: \"\", header: '<strong>Header title</strong><pc-icon-button library=\"default\" =\"solid\" name=\"gear\"></pc-icon-button>', body: \"<p>This card has a header. You can put all sorts of things in it!</p>\", footer: \"\", }, render: ({ image, header, body, footer }) => html` <pc-card class=\"card-header\"> ${image ? html`<div slot=\"image\">${unsafeHTML(image)}</div>` : null} ${header ? html`<div slot=\"header\">${unsafeHTML(header)}</div>` : null} ${body ? html`${unsafeHTML(body)}` : null} ${footer ? html`<div slot=\"footer\">${unsafeHTML(footer)}</div>` : null} </pc-card> <style> .card-header { max-width: 300px; } .card-header [slot=\"header\"] { display: flex; align-items: center; justify-content: space-between; } .card-header pc-icon-button { font-size: var(--pc-font-size-m); } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "WithFooter",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: \"\", header: \"\", body: \"<p>This card has a footer. You can put all sorts of things in it!</p>\", footer: '<pc-rating></pc-rating><pc-button appearance=\"primary\" pill>Preview</pc-button>', }, render: ({ image, header, body, footer }) => html` <pc-card class=\"card-footer\"> ${image ? html`<div slot=\"image\">${unsafeHTML(image)}</div>` : null} ${header ? html`<div slot=\"header\">${unsafeHTML(header)}</div>` : null} ${body ? html`${unsafeHTML(body)}` : null} ${footer ? html`<div slot=\"footer\">${unsafeHTML(footer)}</div>` : null} </pc-card> <style> .card-footer { max-width: 300px; } .card-footer [slot=\"footer\"] { display: flex; align-items: center; justify-content: space-between; } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "WithImage",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { image: '<img src=\"https://placehold.co/300x200\" alt=\"Placeholder image\" />', header: \"\", body: \"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\", footer: \"\", }, render: ({ image, header, body, footer }) => html` <pc-card class=\"card-default\"> ${image ? html`<div slot=\"image\">${unsafeHTML(image)}</div>` : null} ${header ? html`<div slot=\"header\">${unsafeHTML(header)}</div>` : null} ${body ? html`${unsafeHTML(body)}` : null} ${footer ? html`<div slot=\"footer\">${unsafeHTML(footer)}</div>` : null} </pc-card> <style> .card-default { max-width: 300px; } .card-default div[slot=\"footer\"] { display: flex; align-items: center; justify-content: flex-end; gap: var(--pc-spacing-s); } </style> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/card/Card.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/card/Card.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicCard",
          "declaration": {
            "name": "BasicCard",
            "module": "src/components/card/Card.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithHeader",
          "declaration": {
            "name": "WithHeader",
            "module": "src/components/card/Card.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithFooter",
          "declaration": {
            "name": "WithFooter",
            "module": "src/components/card/Card.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithImage",
          "declaration": {
            "name": "WithImage",
            "module": "src/components/card/Card.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/card/card.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --border-color: var(--pc-color-neutral-200); --border-radius: var(--pc-border-radius-l); --border-width: 1px; --padding: var(--pc-spacing-l); display: inline-block; } .card { display: flex; flex-direction: column; background-color: var(--pc-panel-background-color); border: var(--border-width) solid var(--border-color); border-radius: var(--border-radius); box-shadow: var(--pc-shadow-l); } .image { display: flex; border-radius: var(--border-radius) var(--border-radius) 0 0; margin: calc(-1 * var(--border-width)); overflow: hidden; } .image::slotted(img) { display: block; width: 100%; } .card:not(.has-image) .image { display: none; } .header { display: block; border-bottom: var(--border-width) solid var(--border-color); padding: calc(var(--padding) / 2) var(--padding); } .card:not(.has-header) .header { display: none; } .body { display: block; padding: var(--padding); } .has-footer .footer { display: block; border-top: var(--border-width) solid var(--border-color); padding: var(--padding); } .card:not(.has-footer) .footer { display: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/card/card.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/card/card.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./card.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcCard",
            "module": "src/components/card/card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/checkbox/checkbox.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcCheckbox",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "readonly": true,
              "default": "new FormControlController(this, { value: (control: PcCheckbox) => control.checked ? control.value || \"on\" : undefined, defaultValue: (control: PcCheckbox) => control.defaultChecked, setValue: (control: PcCheckbox, checked: boolean) => (control.checked = checked), })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController(this, \"hint\")"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isFadingOut",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "defaultChecked",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "hint"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "invalid",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pressed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "validity",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleStateChange"
            },
            {
              "kind": "method",
              "name": "click"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "form"
            },
            {
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "hint"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "invalid"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "name"
            },
            {
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pressed"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "title"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCheckbox",
          "declaration": {
            "name": "PcCheckbox",
            "module": "src/components/checkbox/checkbox.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-checkbox",
          "declaration": {
            "name": "PcCheckbox",
            "module": "src/components/checkbox/checkbox.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/checkbox/Checkbox.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Checkbox\", component: \"pc-checkbox\", argTypes: { checked: { control: \"boolean\" }, defaultChecked: { control: \"boolean\" }, disabled: { control: \"boolean\" }, hint: { control: \"text\" }, indeterminate: { control: \"boolean\" }, invalid: { control: \"boolean\" }, label: { control: \"text\" }, name: { control: \"text\" }, pressed: { control: \"boolean\" }, required: { control: \"boolean\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, title: { control: \"text\" }, value: { control: \"text\" }, }, args: { checked: false, defaultChecked: false, disabled: false, hint: \"\", indeterminate: false, invalid: false, label: \"Checkbox\", name: \"\", pressed: false, required: false, size: \"medium\", title: \"\", value: \"\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Checked",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: true, defaultChecked: false, disabled: false, hint: \"\", indeterminate: false, invalid: false, label: \"Checked\", name: \"\", pressed: false, required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Indeterminate",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, hint: \"\", indeterminate: true, invalid: false, label: \"Indeterminate\", name: \"\", pressed: false, required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Hint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, hint: \"What does this checkbox do?\", indeterminate: false, invalid: false, label: \"Checkbox with hint\", name: \"\", pressed: false, required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: true, hint: \"\", indeterminate: false, invalid: false, label: \"Disabled\", name: \"\", pressed: false, required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, hint: \"\", indeterminate: false, invalid: false, label: \"Large\", name: \"\", pressed: false, required: false, size: \"large\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, hint: \"\", indeterminate: false, invalid: false, label: \"Small\", name: \"\", pressed: false, required: false, size: \"small\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, hint, indeterminate, invalid, label, name, pressed, required, size, title, value, }) => html` <pc-checkbox ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} hint=${hint} ?indeterminate=${indeterminate} ?invalid=${invalid} name=${name} ?pressed=${pressed} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-checkbox> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Checked",
          "declaration": {
            "name": "Checked",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Indeterminate",
          "declaration": {
            "name": "Indeterminate",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Hint",
          "declaration": {
            "name": "Hint",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/checkbox/Checkbox.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/checkbox/checkbox.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; } .checkbox { display: inline-flex; align-items: flex-start; position: relative; font-family: var(--pc-input-font-family); font-weight: var(--pc-input-font-weight); color: var(--pc-input-label-color); vertical-align: middle; cursor: pointer; } .size-small { --toggle-size: var(--pc-toggle-size-s); font-size: var(--pc-input-font-size-s); } .size-medium { --toggle-size: var(--pc-toggle-size-m); font-size: var(--pc-input-font-size-m); } .size-large { --toggle-size: var(--pc-toggle-size-l); font-size: var(--pc-input-font-size-l); } .checkbox-control { display: inline-flex; align-items: center; justify-content: center; flex: 0 0 auto; position: relative; width: var(--toggle-size); height: var(--toggle-size); border: var(--pc-input-border-width) solid var(--pc-input-border-color); border-radius: var(--pc-input-border-radius-s); background-color: transparent; color: var(--pc-color-neutral-0); transition: all var(--pc-transition-fast) ease-in-out; } .checkbox-control pc-icon { opacity: 0; visibility: hidden; transition: opacity var(--pc-transition-fast) ease-in-out, visibility var(--pc-transition-fast) ease-in-out; } .is-checked .checkbox-control pc-icon, .is-indeterminate .checkbox-control pc-icon { opacity: 1; visibility: visible; } .is-checked:not(.is-fading-out) .checkbox-control pc-icon { opacity: 1; visibility: visible; } .is-fading-out .checkbox-control pc-icon { opacity: 0; visibility: hidden; } .checkbox-input { position: absolute; margin: 0; padding: 0; opacity: 0; pointer-events: none; } pc-icon { display: inline-flex; width: calc(var(--toggle-size) / 1.25); height: calc(var(--toggle-size) / 1.25); transition: all var(--pc-transition-fast) ease-in-out; } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-control:hover { border-color: var(--pc-input-border-color-hover); } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-control:hover:active { border-color: var(--pc-input-border-color-active); } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .is-checked .checkbox-control, .is-indeterminate .checkbox-control { border-color: var(--pc-color-primary-500); background-color: var(--pc-color-primary-500); } .checkbox.is-checked:not(.is-disabled) .checkbox-control:hover, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-control:hover { border-color: var(--pc-color-primary-600); background-color: var(--pc-color-primary-600); } .checkbox.is-checked:not(.is-disabled) .checkbox-control:hover:active, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-control:hover:active { border-color: var(--pc-color-primary-400); background-color: var(--pc-color-primary-400); } .checkbox.is-checked:not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .is-disabled { opacity: 0.6; cursor: not-allowed; } .label { display: inline-block; color: var(--pc-input-label-color); line-height: var(--toggle-size); margin-inline-start: var(--pc-spacing-s); user-select: none; -webkit-user-select: none; transition: color var(--pc-transition-fast) ease-in-out; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margin-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/checkbox/checkbox.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/checkbox/checkbox.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./checkbox.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcCheckbox",
            "module": "src/components/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/icon.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcIcon",
          "members": [
            {
              "kind": "field",
              "name": "initialRender",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "resolveIcon",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<SVGResult>"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "library",
                  "optional": true,
                  "type": {
                    "text": "IconLibrary"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "svg",
              "type": {
                "text": "SVGElement | HTMLTemplateResult | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "iconStyle",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon-style",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "\"default\"",
              "attribute": "library",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "src"
            },
            {
              "kind": "method",
              "name": "getIconSource",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IconSource"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleLabelChange"
            },
            {
              "kind": "method",
              "name": "setIcon"
            }
          ],
          "attributes": [
            {
              "name": "icon-style",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconStyle"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "\"default\"",
              "fieldName": "library"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "src"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIcon",
          "declaration": {
            "name": "PcIcon",
            "module": "src/components/icon/icon.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-icon",
          "declaration": {
            "name": "PcIcon",
            "module": "src/components/icon/icon.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/Icon.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Icon\", component: \"pc-icon\", argTypes: { iconStyle: { control: \"select\", options: [\"solid\", \"regular\", \"brands\"], }, label: { control: \"text\" }, library: { control: \"text\" }, name: { control: \"text\" }, src: { control: \"file\" }, // CSS styles fontSize: { control: \"text\" }, color: { control: \"color\" }, }, args: { iconStyle: \"solid\", label: \"An icon\", library: \"default\", name: \"house\", src: undefined, // CSS styles fontSize: \"1rem\", color: \"var(--pc-color-neutral-1000)\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ iconStyle, label, library, name, src, fontSize, color }) => html` <pc-icon library=${library} icon-style=${iconStyle} name=${name} src=${src} label=${label} style=\"display: inline-flex; font-size: ${fontSize}; color: ${color}\" ></pc-icon> `, }"
        },
        {
          "kind": "variable",
          "name": "Colour",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { iconStyle: \"solid\", label: \"A coloured icon\", library: \"default\", name: \"battery-three-quarters\", fontSize: \"1rem\", color: \"var(--pc-color-success-500)\", }, render: ({ iconStyle, label, library, name, src, fontSize, color }) => html` <pc-icon library=${library} icon-style=${iconStyle} name=${name} src=${src} label=${label} style=\"display: inline-flex; font-size: ${fontSize}; color: ${color}\" ></pc-icon> `, }"
        },
        {
          "kind": "variable",
          "name": "Sizing",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { iconStyle: \"solid\", label: \"A large icon\", library: \"default\", name: \"house\", fontSize: \"5rem\", color: \"var(--pc-color-neutral-1000)\", }, render: ({ iconStyle, label, library, name, src, fontSize, color }) => html` <pc-icon library=${library} icon-style=${iconStyle} name=${name} src=${src} label=${label} style=\"display: inline-flex; font-size: ${fontSize}; color: ${color}\" ></pc-icon> `, }"
        },
        {
          "kind": "variable",
          "name": "Label",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { iconStyle: \"solid\", label: \"Add to favourites\", library: \"default\", name: \"star\", fontSize: \"1rem\", color: \"var(--pc-color-amber-500)\", }, render: ({ iconStyle, label, library, name, src, fontSize, color }) => html` <pc-icon library=${library} icon-style=${iconStyle} name=${name} src=${src} label=${label} style=\"display: inline-flex; font-size: ${fontSize}; color: ${color}\" ></pc-icon> `, }"
        },
        {
          "kind": "variable",
          "name": "Custom",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { iconStyle: undefined, label: \"A custom icon of an epic awesome face\", library: undefined, name: undefined, src: \"/face-awesome.svg\", fontSize: \"1rem\", color: undefined, }, render: ({ iconStyle, label, library, name, src, fontSize, color }) => html` <pc-icon library=${library} icon-style=${iconStyle} name=${name} src=${src} label=${label} style=\"display: inline-flex; font-size: ${fontSize}; color: ${color}\" ></pc-icon> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/icon/Icon.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/icon/Icon.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Colour",
          "declaration": {
            "name": "Colour",
            "module": "src/components/icon/Icon.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Sizing",
          "declaration": {
            "name": "Sizing",
            "module": "src/components/icon/Icon.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Label",
          "declaration": {
            "name": "Label",
            "module": "src/components/icon/Icon.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Custom",
          "declaration": {
            "name": "Custom",
            "module": "src/components/icon/Icon.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/icon.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; box-sizing: content-box !important; width: 1em; height: 1em; } svg { display: block; width: 100%; height: 100%; fill: currentColor; overflow: visible; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/icon/icon.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/icon.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./icon.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcIcon",
            "module": "src/components/icon/icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/library.default.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "library",
          "type": {
            "text": "IconLibrary"
          },
          "default": "{ name: \"default\", resolver: (name, iconStyle = \"solid\") => { return `https://use.fontawesome.com/releases/v6.7.2/svgs/${iconStyle}/${name}.svg`; }, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "library",
            "module": "src/components/icon/library.default.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon/library.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "watchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "PcIcon"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unwatchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "PcIcon"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconLibrary",
          "parameters": [
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "registerIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "Omit<IconLibrary, \"name\">"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unregisterIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watchIcon",
          "declaration": {
            "name": "watchIcon",
            "module": "src/components/icon/library.ts"
          }
        },
        {
          "kind": "js",
          "name": "unwatchIcon",
          "declaration": {
            "name": "unwatchIcon",
            "module": "src/components/icon/library.ts"
          }
        },
        {
          "kind": "js",
          "name": "getIconLibrary",
          "declaration": {
            "name": "getIconLibrary",
            "module": "src/components/icon/library.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "src/components/icon/library.ts"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "src/components/icon/library.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon-button/icon-button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcIconButton",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "iconStyle",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon-style"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "library"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
              },
              "attribute": "target"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "click"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "download"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "icon-style",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconStyle"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "library"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "src"
            },
            {
              "name": "target",
              "type": {
                "text": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
              },
              "fieldName": "target"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-icon-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIconButton",
          "declaration": {
            "name": "PcIconButton",
            "module": "src/components/icon-button/icon-button.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-icon-button",
          "declaration": {
            "name": "PcIconButton",
            "module": "src/components/icon-button/icon-button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon-button/icon-button.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-flex; color: var(--pc-color-neutral-600); } .icon-button { display: flex; align-items: center; flex: 0 0 auto; background: none; border: none; border-radius: var(--pc-border-radius-m); font-size: inherit; color: inherit; padding: var(--pc-spacing-xs); cursor: pointer; -webkit-appearance: none; transition: all var(--pc-transition-fast) ease-in-out; } .icon-button:hover:not(.icon-button-disabled), .icon-button:focus-visible:not(.icon-button-disabled) { color: var(--pc-color-primary-600); } .icon-button:hover:active:not(.icon-button-disabled) { color: var(--pc-color-primary-500); } .icon-button:focus { outline: none; } .icon-button-disabled { opacity: 0.6; cursor: not-allowed; } .icon-button:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .icon { pointer-events: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/icon-button/icon-button.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon-button/icon-button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./icon-button.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcIconButton",
            "module": "src/components/icon-button/icon-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/icon-button/IconButton.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Icon Button\", component: \"pc-icon-button\", argTypes: { disabled: { control: \"boolean\" }, download: { control: \"text\" }, href: { control: \"text\" }, iconStyle: { control: \"select\", options: [\"solid\", \"regular\", \"brands\"], }, label: { control: \"text\" }, library: { control: \"text\" }, name: { control: \"text\" }, src: { control: \"text\" }, target: { control: \"select\", options: [\"_blank\", \"_parent\", \"_self\"], }, // CSS styles fontSize: { control: \"text\" }, colorRest: { control: \"color\" }, colorHover: { control: \"color\" }, colorPressed: { control: \"color\" }, }, args: { disabled: false, download: undefined, href: undefined, iconStyle: \"solid\", label: \"An icon button with a gear icon\", library: \"default\", name: \"gear\", src: undefined, target: undefined, // CSS styles fontSize: \"1rem\", colorRest: \"var(--pc-color-neutral-600)\", colorHover: \"var(--pc-color-primary-600)\", colorPressed: \"var(--pc-color-primary-500)\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled, download, href, iconStyle, label, library, name, src, target, // CSS styles fontSize, colorRest, colorHover, colorPressed, }) => html` <pc-icon-button library=${library} icon-style=${iconStyle} name=${name} label=${label} src=${src} download=${download} href=${href} target=${target} ?disabled=${disabled} ></pc-icon-button> <style> pc-icon-button::part(base) { color: ${colorRest} !important; font-size: ${fontSize} !important; } pc-icon-button::part(base):hover { color: ${colorHover} !important; } pc-icon-button::part(base):hover:active { color: ${colorPressed} !important; } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "Sizing",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, iconStyle: \"solid\", label: \"A large icon button with a gear icon\", library: \"default\", name: \"gear\", fontSize: \"5rem\", colorRest: \"var(--pc-color-neutral-600)\", colorHover: \"var(--pc-color-primary-600)\", colorPressed: \"var(--pc-color-primary-500)\", }, render: ({ disabled, download, href, iconStyle, label, library, name, src, target, fontSize, colorRest, colorHover, colorPressed, }) => html` <pc-icon-button library=${library} icon-style=${iconStyle} name=${name} label=${label} src=${src} download=${download} href=${href} target=${target} ?disabled=${disabled} ></pc-icon-button> <style> pc-icon-button::part(base) { color: ${colorRest} !important; font-size: ${fontSize} !important; } pc-icon-button::part(base):hover { color: ${colorHover} !important; } pc-icon-button::part(base):hover:active { color: ${colorPressed} !important; } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "Colour",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, iconStyle: \"solid\", label: \"An icon button with a warning icon\", library: \"default\", name: \"triangle-exclamation\", fontSize: \"1rem\", colorRest: \"var(--pc-color-neutral-600)\", colorHover: \"var(--pc-color-warning-600)\", colorPressed: \"var(--pc-color-warning-500)\", }, render: ({ disabled, download, href, iconStyle, label, library, name, src, target, fontSize, colorRest, colorHover, colorPressed, }) => html` <pc-icon-button library=${library} icon-style=${iconStyle} name=${name} label=${label} src=${src} download=${download} href=${href} target=${target} ?disabled=${disabled} ></pc-icon-button> <style> pc-icon-button::part(base) { color: ${colorRest} !important; font-size: ${fontSize} !important; } pc-icon-button::part(base):hover { color: ${colorHover} !important; } pc-icon-button::part(base):hover:active { color: ${colorPressed} !important; } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: true, iconStyle: \"solid\", label: \"A disabled icon button with a gear icon\", library: \"default\", name: \"gear\", fontSize: \"1rem\", colorRest: \"var(--pc-color-neutral-600)\", colorHover: \"var(--pc-color-primary-600)\", colorPressed: \"var(--pc-color-primary-500)\", }, render: ({ disabled, download, href, iconStyle, label, library, name, src, target, fontSize, colorRest, colorHover, colorPressed, }) => html` <pc-icon-button library=${library} icon-style=${iconStyle} name=${name} label=${label} src=${src} download=${download} href=${href} target=${target} ?disabled=${disabled} ></pc-icon-button> <style> pc-icon-button::part(base) { color: ${colorRest} !important; font-size: ${fontSize} !important; } pc-icon-button::part(base):hover { color: ${colorHover} !important; } pc-icon-button::part(base):hover:active { color: ${colorPressed} !important; } </style> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/icon-button/IconButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/icon-button/IconButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Sizing",
          "declaration": {
            "name": "Sizing",
            "module": "src/components/icon-button/IconButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Colour",
          "declaration": {
            "name": "Colour",
            "module": "src/components/icon-button/IconButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/icon-button/IconButton.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/input/input.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcInput",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "readonly": true,
              "default": "new FormControlController(this, { assumeInteractionOn: [\"pc-blur\", \"pc-input\"], })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController( this, \"hint\", \"label\", )"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "__numberInput",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "__dateInput",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autocapitalize",
              "type": {
                "text": "| \"off\"\n        | \"none\"\n        | \"on\"\n        | \"sentences\"\n        | \"words\"\n        | \"characters\""
              },
              "default": "\"none\"",
              "attribute": "autocapitalize"
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "autocorrect",
              "type": {
                "text": "\"off\" | \"on\""
              },
              "default": "\"off\"",
              "attribute": "autocorrect"
            },
            {
              "kind": "field",
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "attribute": "autofocus"
            },
            {
              "kind": "field",
              "name": "clearable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "clearable"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "enterkeyhint",
              "type": {
                "text": "| \"enter\"\n        | \"done\"\n        | \"go\"\n        | \"next\"\n        | \"previous\"\n        | \"search\"\n        | \"send\""
              },
              "default": "\"enter\"",
              "attribute": "enterkeyhint"
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "filled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "hint"
            },
            {
              "kind": "field",
              "name": "inputmode",
              "type": {
                "text": "| \"none\"\n        | \"text\"\n        | \"decimal\"\n        | \"numeric\"\n        | \"tel\"\n        | \"search\"\n        | \"email\"\n        | \"url\""
              },
              "default": "\"text\"",
              "attribute": "inputmode"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | string | undefined"
              },
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | string | undefined"
              },
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "noSpinButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "no-spin-buttons"
            },
            {
              "kind": "field",
              "name": "passwordToggle",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "password-toggle"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "passwordVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "password-visible"
            },
            {
              "kind": "field",
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pill",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "spellcheck"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | \"any\" | undefined"
              },
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "| \"date\"\n        | \"datetime-local\"\n        | \"email\"\n        | \"number\"\n        | \"password\"\n        | \"search\"\n        | \"tel\"\n        | \"text\"\n        | \"time\"\n        | \"url\""
              },
              "default": "\"text\"",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "valueAsDate"
            },
            {
              "kind": "field",
              "name": "valueAsNumber"
            },
            {
              "kind": "field",
              "name": "validity",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClearClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePasswordToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleStepChange"
            },
            {
              "kind": "method",
              "name": "handleValueChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            },
            {
              "kind": "method",
              "name": "select"
            },
            {
              "kind": "method",
              "name": "setSelectionRange",
              "parameters": [
                {
                  "name": "selectionStart",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionEnd",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionDirection",
                  "default": "\"none\"",
                  "type": {
                    "text": "\"forward\" | \"backward\" | \"none\""
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setRangeText",
              "parameters": [
                {
                  "name": "replacement",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "start",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectMode",
                  "default": "\"preserve\"",
                  "type": {
                    "text": "\"select\" | \"start\" | \"end\" | \"preserve\""
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "showPicker"
            },
            {
              "kind": "method",
              "name": "stepUp"
            },
            {
              "kind": "method",
              "name": "stepDown"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "title"
            },
            {
              "name": "autocapitalize",
              "type": {
                "text": "| \"off\"\n        | \"none\"\n        | \"on\"\n        | \"sentences\"\n        | \"words\"\n        | \"characters\""
              },
              "default": "\"none\"",
              "fieldName": "autocapitalize"
            },
            {
              "name": "autocomplete",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "autocomplete"
            },
            {
              "name": "autocorrect",
              "type": {
                "text": "\"off\" | \"on\""
              },
              "default": "\"off\"",
              "fieldName": "autocorrect"
            },
            {
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "fieldName": "autofocus"
            },
            {
              "name": "clearable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "clearable"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "enterkeyhint",
              "type": {
                "text": "| \"enter\"\n        | \"done\"\n        | \"go\"\n        | \"next\"\n        | \"previous\"\n        | \"search\"\n        | \"send\""
              },
              "default": "\"enter\"",
              "fieldName": "enterkeyhint"
            },
            {
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "filled"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "form"
            },
            {
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "hint"
            },
            {
              "name": "inputmode",
              "type": {
                "text": "| \"none\"\n        | \"text\"\n        | \"decimal\"\n        | \"numeric\"\n        | \"tel\"\n        | \"search\"\n        | \"email\"\n        | \"url\""
              },
              "default": "\"text\"",
              "fieldName": "inputmode"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "min",
              "type": {
                "text": "number | string | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "minlength"
            },
            {
              "name": "max",
              "type": {
                "text": "number | string | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "maxlength"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "name"
            },
            {
              "name": "no-spin-buttons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "noSpinButtons"
            },
            {
              "name": "password-toggle",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "passwordToggle"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "pattern"
            },
            {
              "name": "password-visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "passwordVisible"
            },
            {
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pill"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "spellcheck"
            },
            {
              "name": "step",
              "type": {
                "text": "number | \"any\" | undefined"
              },
              "fieldName": "step"
            },
            {
              "name": "type",
              "type": {
                "text": "| \"date\"\n        | \"datetime-local\"\n        | \"email\"\n        | \"number\"\n        | \"password\"\n        | \"search\"\n        | \"tel\"\n        | \"text\"\n        | \"time\"\n        | \"url\""
              },
              "default": "\"text\"",
              "fieldName": "type"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcInput",
          "declaration": {
            "name": "PcInput",
            "module": "src/components/input/input.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-input",
          "declaration": {
            "name": "PcInput",
            "module": "src/components/input/input.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/input/Input.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Input\", component: \"pc-input\", argTypes: { autocapitalize: { control: \"select\", options: [\"off\", \"none\", \"on\", \"sentences\", \"words\", \"characters\"], description: \"Sets where to auto‐capitalise the string.\", }, autocomplete: { control: \"text\", description: \"Enables auto‐complete on the input.\", }, autocorrect: { control: \"select\", options: [\"off\", \"on\"], description: \"Enables auto‐correct on the input.\", }, autofocus: { control: \"boolean\", description: \"Sets if the input will be automatically focused on page load.\", }, clearable: { control: \"boolean\", description: \"Adds a clear button to the input.\", }, disabled: { control: \"boolean\", description: \"Disables the input.\", }, defaultValue: { control: \"text\", description: \"Sets the default value. Useful for resetting forms.\", }, enterkeyhint: { control: \"select\", options: [ \"enter\", \"done\", \"go\", \"next\", \"previous\", \"search\", \"send\", ], description: \"Gives a visual cue on the Enter key on virtual keyboards.\", }, filled: { control: \"boolean\", description: \"Enables the filled style.\", }, form: { control: \"text\", description: \"Connects the input to a form element with an id.\", }, hint: { control: \"text\", description: \"Adds supplementary text under the input.\", }, inputmode: { control: \"select\", options: [ \"none\", \"text\", \"decimal\", \"numeric\", \"tel\", \"search\", \"email\", \"url\", ], description: \"Specifies which type of keyboard to display on mobile devices.\", }, label: { control: \"text\", description: \"Adds a label above the input.\", }, min: { control: \"number\", description: \"Sets the minimum number allowed for number inputs.\", }, minlength: { control: \"number\", description: \"Sets the minimum length allowed for the input.\", }, max: { control: \"number\", description: \"Sets the maximum number allowed for number inputs.\", }, maxlength: { control: \"number\", description: \"Sets the maximum length allowed for the input.\", }, name: { control: \"text\", description: \"Adds a name to refer to in forms.\", }, noSpinButtons: { control: \"boolean\", description: \"Removes the spin buttons for number inputs.\", }, passwordToggle: { control: \"boolean\", description: \"Enables the password toggle for password inputs.\", }, pattern: { control: \"text\", description: \"Restricts the input to allow characters only from the provided RegEx expression.\", }, passwordVisible: { control: \"boolean\", description: \"Shows the password by default for password inputs.\", }, pill: { control: \"boolean\", description: \"Sets the shape of the input to a pill.\", }, placeholder: { control: \"text\", description: \"Adds a placeholder to the input.\", }, readonly: { control: \"boolean\", description: \"Sets the input to read‐only.\", }, required: { control: \"boolean\", description: \"If enabled, you must fill out the input with valid data.\", }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], description: \"Sets the size of the input.\", }, spellcheck: { control: \"boolean\", description: \"Enables spellcheck on the input.\", }, step: { control: \"number\", description: \"Sets how many numbers to skip when increasing or decreasing the number with the provided spin buttons on number inputs.\", }, title: { control: \"text\", description: \"Sets the title attribute on the input. We recommend using Tooltip instead.\", }, type: { control: \"select\", options: [ \"date\", \"datetime-local\", \"email\", \"number\", \"password\", \"search\", \"tel\", \"text\", \"time\", \"url\", ], description: \"Sets the input type.\", }, value: { control: \"text\", description: \"Sets the default value inside the input.\", }, prefix: { control: \"text\", description: \"Content to display in the prefix slot.\", }, suffix: { control: \"text\", description: \"Content to display in the suffix slot.\", }, }, args: { autocapitalize: \"none\", autocomplete: undefined, autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", min: undefined, minlength: undefined, max: undefined, maxlength: undefined, name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"\", readonly: false, required: false, size: \"medium\", spellcheck: true, step: undefined, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Label",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"What’s your name?\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Hint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"What would you like people to call you?\", inputmode: \"text\", label: \"Nickname\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Placeholder",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Search the web…\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Clearable",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: true, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Search the web…\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "PasswordToggle",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"Create your password\", name: \"\", noSpinButtons: false, passwordToggle: true, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Make it as secure as possible!\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"password\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Filled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: true, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Search the web…\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: true, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Disabled\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Large\", readonly: false, required: false, size: \"large\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"Small\", readonly: false, required: false, size: \"small\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Pill",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: true, placeholder: \"Pill\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "InputTypes",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"E‐mail\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: false, placeholder: \"\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"email\", value: \"\", prefix: \"\", suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        },
        {
          "kind": "variable",
          "name": "Prefix",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { autocapitalize: \"none\", autocorrect: \"off\", autofocus: false, clearable: false, disabled: false, defaultValue: \"\", enterkeyhint: \"enter\", filled: false, form: \"\", hint: \"\", inputmode: \"text\", label: \"\", name: \"\", noSpinButtons: false, passwordToggle: false, pattern: \"\", passwordVisible: false, pill: true, placeholder: \"Search the web…\", readonly: false, required: false, size: \"medium\", spellcheck: true, title: \"\", type: \"text\", value: \"\", prefix: '<pc-icon library=\"default\" icon-style=\"solid\" name=\"magnifying-glass\"></pc-icon>', suffix: \"\", }, render: ({ autocapitalize, autocomplete, autocorrect, autofocus, clearable, disabled, defaultValue, enterkeyhint, filled, form, hint, inputmode, label, min, minlength, max, maxlength, name, noSpinButtons, passwordToggle, pattern, passwordVisible, pill, placeholder, readonly, required, size, spellcheck, step, title, type, value, prefix, suffix, }) => html` <pc-input autocapitalize=${autocapitalize} autocomplete=${autocomplete} autocorrect=${autocorrect} ?autofocus=${autofocus} ?clearable=${clearable} ?disabled=${disabled} defaultValue=${defaultValue} enterkeyhint=${enterkeyhint} ?filled=${filled} form=${form} hint=${hint} inputmode=${inputmode} label=${label} min=${min} minlength=${minlength} max=${max} maxlength=${maxlength} name=${name} ?no-spin-buttons=${noSpinButtons} ?password-toggle=${passwordToggle} pattern=${pattern} ?password-visible=${passwordVisible} ?pill=${pill} placeholder=${placeholder} ?readonly=${readonly} ?required=${required} size=${size} ?spellcheck=${spellcheck} step=${step} title=${title} type=${type} value=${value} > ${prefix ? html`<span slot=\"prefix\">${unsafeHTML(prefix)}</span>` : \"\"} ${suffix ? html`<span slot=\"suffix\">${unsafeHTML(suffix)}</span>` : \"\"} </pc-input> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Label",
          "declaration": {
            "name": "Label",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Hint",
          "declaration": {
            "name": "Hint",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Placeholder",
          "declaration": {
            "name": "Placeholder",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Clearable",
          "declaration": {
            "name": "Clearable",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PasswordToggle",
          "declaration": {
            "name": "PasswordToggle",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Filled",
          "declaration": {
            "name": "Filled",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pill",
          "declaration": {
            "name": "Pill",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputTypes",
          "declaration": {
            "name": "InputTypes",
            "module": "src/components/input/Input.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Prefix",
          "declaration": {
            "name": "Prefix",
            "module": "src/components/input/Input.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/input/input.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: block; } .input { display: flex; position: relative; align-items: stretch; justify-content: start; flex: 1 1 auto; width: 100%; font-family: var(--pc-input-font-family); font-weight: var(--pc-input-font-weight); letter-spacing: var(--pc-input-letter-spacing); vertical-align: middle; overflow: hidden; cursor: text; transition: all var(--pc-transition-fast) ease-in-out; } .input-standard { background-color: var(--pc-input-background-color); border: var(--pc-input-border-width) solid var(--pc-input-border-color); } .input-standard:hover:not(.input-disabled) { background-color: var(--pc-input-background-color-hover); border-color: var(--pc-input-border-color-hover); } .input-standard.input-focused:not(.input-disabled) { background-color: var(--pc-input-background-color-focus); border-color: var(--pc-input-border-color); outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .input-standard.input-focused:not(.input-disabled) .input-control { color: var(--pc-input-color-focus); } .input-standard.input-disabled { background-color: var(--pc-input-background-color-disabled); border-color: var(--pc-input-border-color-disabled); opacity: 0.6; cursor: not-allowed; } .input-standard.input-disabled .input-control { color: var(--pc-input-color-disabled); } .input-standard.input-disabled .input-control::placeholder { color: var(--pc-input-placeholder-color-disabled); } .input-filled { background-color: var(--pc-input-filled-background-color); color: var(--pc-input-color); border: var(--pc-input-border-width) solid transparent; } .input-filled:hover:not(.input-disabled) { background-color: var(--pc-input-filled-background-color-hover); } .input-filled.input-focused:not(.input-disabled) { background-color: var(--pc-input-filled-background-color-focus); outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .input-filled.input-disabled { background-color: var(--pc-input-filled-background-color-disabled); opacity: 0.6; cursor: not-allowed; } .input-control { margin: 0; padding: 0; flex: 1 1 auto; font-family: inherit; font-size: inherit; font-weight: inherit; min-width: 0; height: 100%; color: var(--pc-input-color); border: none; background: inherit; box-shadow: none; cursor: inherit; -webkit-appearance: none; } .input-control::-webkit-search-decoration, .input-control::-webkit-search-cancel-button, .input-control::-webkit-search-results-button, .input-control::-webkit-search-results-decoration { -webkit-appearance: none; } .input-control:-webkit-autofill, .input-control:-webkit-autofill:hover, .input-control:-webkit-autofill:active, .input-control:-webkit-autofill:focus { box-shadow: inset 0 0 0 var(--pc-input-height-l) var(--pc-input-background-color-hover) !important; -webkit-text-fill-color: var(--pc-color-primary-500); caret-color: var(--pc-input-color); } .input-filled .input-control:-webkit-autofill, .input-filled .input-control:-webkit-autofill:hover, .input-filled .input-control:-webkit-autofill:active, .input-filled .input-control:-webkit-autofill:focus { box-shadow: inset 0 0 0 var(--pc-input-height-l) var(--pc-input-background-color-hover) !important; } .input-control::placeholder { color: var(--pc-input-placeholder-color); user-select: none; -webkit-user-select: none; } .input:hover:not(.input-disabled) .input-control { color: var(--pc-input-color-hover); } .input-control:focus { outline: none; } .prefix, .suffix { display: inline-flex; align-items: center; flex: 0 0 auto; cursor: default; } .prefix ::slotted(*), .suffix ::slotted(*) { color: var(--pc-input-icon-color); } .input-small { height: var(--pc-input-height-s); font-size: var(--pc-input-font-size-s); border-radius: var(--pc-input-border-radius-s); } .input-small .input-control { height: calc( var(--pc-input-height-s) - var(--pc-input-border-width) * 2 ); padding: 0 var(--pc-input-spacing-s); } .input-small .clear-input-button, .input-small .password-toggle-button { width: calc(1em + var(--pc-input-spacing-s) * 2); } .input-small .prefix ::slotted(*) { margin-inline-start: var(--pc-input-spacing-s); transform: translateY(1px); } .input-small .suffix ::slotted(*) { margin-inline-end: var(--pc-input-spacing-s); transform: translateY(1px); } .input-medium { height: var(--pc-input-height-m); font-size: var(--pc-input-font-size-m); border-radius: var(--pc-input-border-radius-m); } .input-medium .input-control { height: calc( var(--pc-input-height-m) - var(--pc-input-border-width) * 2 ); padding: 0 var(--pc-input-spacing-m); } .input-medium .clear-input-button, .input-medium .password-toggle-button { width: calc(1em + var(--pc-input-spacing-m) * 2); } .input-medium .prefix ::slotted(*) { margin-inline-start: var(--pc-input-spacing-m); transform: translateY(1px); } .input-medium .suffix ::slotted(*) { margin-inline-end: var(--pc-input-spacing-m); transform: translateY(1px); } .input-large { height: var(--pc-input-height-l); font-size: var(--pc-input-font-size-l); border-radius: var(--pc-input-border-radius-l); } .input-large .input-control { height: calc( var(--pc-input-height-l) - var(--pc-input-border-width) * 2 ); padding: 0 var(--pc-input-spacing-l); } .input-large .clear-input-button, .input-large .password-toggle-button { width: calc(1em + var(--pc-input-spacing-l) * 2); } .input-large .prefix ::slotted(*) { margin-inline-start: var(--pc-input-spacing-l); transform: translateY(2px); } .input-large .suffix ::slotted(*) { margin-inline-end: var(--pc-input-spacing-l); transform: translateY(2px); } .input-pill { border-radius: var(--pc-border-radius-pill); } .clear-input-button, .password-toggle-button { display: inline-flex; align-items: center; justify-content: center; font-size: inherit; color: var(--pc-input-icon-color); border: none; background: none; padding: 0; cursor: pointer; transition: color var(--pc-transition-fast) ease-in-out; } .clear-input-button:hover, .password-toggle-button:hover { color: var(--pc-input-icon-color-hover); } .clear-input-button:hover:active, .password-toggle-button:hover:active { color: var(--pc-input-icon-color-active); } .clear-input-button:focus, .password-toggle-button:focus { outline: none; } ::-ms-reveal { display: none; } .input-no-spin-buttons input[type=\"number\"] { -moz-appearance: textfield; } .input-no-spin-buttons input[type=\"number\"]::-webkit-outer-spin-button, .input-no-spin-buttons input[type=\"number\"]::-webkit-inner-spin-button { -webkit-appearance: none; display: none; } .label { display: inline-block; color: var(--pc-input-label-color); line-height: var(--pc-line-height-normal); margin-bottom: var(--pc-spacing-xs); transition: color var(--pc-transition-fast) ease-in-out; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margin-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); margin-top: var(--pc-spacing-xs); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/input/input.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/input/input.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./input.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcInput",
            "module": "src/components/input/input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/popup/popup.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcPopup",
          "members": [
            {
              "kind": "field",
              "name": "anchorElement",
              "type": {
                "text": "Element | VirtualElement | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "cleanup",
              "type": {
                "text": "ReturnType<typeof autoUpdate> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "popup",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "arrowElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Element | string | VirtualElement | undefined"
              },
              "attribute": "anchor"
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "arrow"
            },
            {
              "kind": "field",
              "name": "arrowPadding",
              "type": {
                "text": "number"
              },
              "default": "10",
              "attribute": "arrow-padding"
            },
            {
              "kind": "field",
              "name": "arrowPlacement",
              "type": {
                "text": "| \"start\"\n        | \"end\"\n        | \"center\"\n        | \"anchor\""
              },
              "default": "\"anchor\"",
              "attribute": "arrow-placement"
            },
            {
              "kind": "field",
              "name": "autoSize",
              "type": {
                "text": "| \"horizontal\"\n        | \"vertical\"\n        | \"both\" | undefined"
              },
              "attribute": "auto-size"
            },
            {
              "kind": "field",
              "name": "autoSizeBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "attribute": "autoSizeBoundary"
            },
            {
              "kind": "field",
              "name": "autoSizePadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "auto-size-padding"
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "flip"
            },
            {
              "kind": "field",
              "name": "flipBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "attribute": "flipBoundary"
            },
            {
              "kind": "field",
              "name": "flipFallbackPlacements",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "flip-fallback-placements"
            },
            {
              "kind": "field",
              "name": "flipFallbackStrategy",
              "type": {
                "text": "| \"best-fit\"\n        | \"initial\""
              },
              "default": "\"best-fit\"",
              "attribute": "flip-fallback-strategy"
            },
            {
              "kind": "field",
              "name": "flipPadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "flip-padding"
            },
            {
              "kind": "field",
              "name": "hoverBridge",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hover-bridge"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "| \"top\"\n        | \"top-start\"\n        | \"top-end\"\n        | \"bottom\"\n        | \"bottom-start\"\n        | \"bottom-end\"\n        | \"right\"\n        | \"right-start\"\n        | \"right-end\"\n        | \"left\"\n        | \"left-start\"\n        | \"left-end\""
              },
              "default": "\"top\"",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "shift",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "shift"
            },
            {
              "kind": "field",
              "name": "shiftBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "attribute": "shiftBoundary"
            },
            {
              "kind": "field",
              "name": "shiftPadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "shift-padding"
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "skidding"
            },
            {
              "kind": "field",
              "name": "strategy",
              "type": {
                "text": "\"absolute\" | \"fixed\""
              },
              "default": "\"absolute\"",
              "attribute": "strategy",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sync",
              "type": {
                "text": "\"width\" | \"height\" | \"both\" | undefined"
              },
              "attribute": "sync"
            },
            {
              "kind": "method",
              "name": "handleAnchorChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "start",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "stop",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "reposition"
            },
            {
              "kind": "field",
              "name": "updateHoverBridge",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "anchor",
              "type": {
                "text": "Element | string | VirtualElement | undefined"
              },
              "fieldName": "anchor"
            },
            {
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "arrow"
            },
            {
              "name": "arrow-padding",
              "type": {
                "text": "number"
              },
              "default": "10",
              "fieldName": "arrowPadding"
            },
            {
              "name": "arrow-placement",
              "type": {
                "text": "| \"start\"\n        | \"end\"\n        | \"center\"\n        | \"anchor\""
              },
              "default": "\"anchor\"",
              "fieldName": "arrowPlacement"
            },
            {
              "name": "auto-size",
              "type": {
                "text": "| \"horizontal\"\n        | \"vertical\"\n        | \"both\" | undefined"
              },
              "fieldName": "autoSize"
            },
            {
              "name": "autoSizeBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "fieldName": "autoSizeBoundary"
            },
            {
              "name": "auto-size-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "autoSizePadding"
            },
            {
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "distance"
            },
            {
              "name": "flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "flip"
            },
            {
              "name": "flipBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "fieldName": "flipBoundary"
            },
            {
              "name": "flip-fallback-placements",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "flipFallbackPlacements"
            },
            {
              "name": "flip-fallback-strategy",
              "type": {
                "text": "| \"best-fit\"\n        | \"initial\""
              },
              "default": "\"best-fit\"",
              "fieldName": "flipFallbackStrategy"
            },
            {
              "name": "flip-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "flipPadding"
            },
            {
              "name": "hover-bridge",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hoverBridge"
            },
            {
              "name": "placement",
              "type": {
                "text": "| \"top\"\n        | \"top-start\"\n        | \"top-end\"\n        | \"bottom\"\n        | \"bottom-start\"\n        | \"bottom-end\"\n        | \"right\"\n        | \"right-start\"\n        | \"right-end\"\n        | \"left\"\n        | \"left-start\"\n        | \"left-end\""
              },
              "default": "\"top\"",
              "fieldName": "placement"
            },
            {
              "name": "shift",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "shift"
            },
            {
              "name": "shiftBoundary",
              "type": {
                "text": "Element | Element[] | undefined"
              },
              "fieldName": "shiftBoundary"
            },
            {
              "name": "shift-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "shiftPadding"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "skidding"
            },
            {
              "name": "strategy",
              "type": {
                "text": "\"absolute\" | \"fixed\""
              },
              "default": "\"absolute\"",
              "fieldName": "strategy"
            },
            {
              "name": "sync",
              "type": {
                "text": "\"width\" | \"height\" | \"both\" | undefined"
              },
              "fieldName": "sync"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-popup",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcPopup",
          "declaration": {
            "name": "PcPopup",
            "module": "src/components/popup/popup.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-popup",
          "declaration": {
            "name": "PcPopup",
            "module": "src/components/popup/popup.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/popup/popup.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --arrow-color: var(--pc-color-neutral-200); --arrow-size: 6px; /* These properties are computed to account for the arrow’s dimensions after being rotated 45°. The constant 0.7071 is derived from sin(45°), which is the diagonal size of the arrow’s container after rotating. */ --arrow-size-diagonal: calc(var(--arrow-size) * 0.7071); --arrow-padding-offset: calc( var(--arrow-size-diagonal) - var(--arrow-size) ); display: contents; } .popup { position: absolute; isolation: isolate; max-width: var(--auto-size-available-width, none); max-height: var(--auto-size-available-height, none); } .popup-fixed { position: fixed; } .popup:not(.popup-active) { display: none; } .popup-arrow { position: absolute; width: calc(var(--arrow-size-diagonal) * 2); height: calc(var(--arrow-size-diagonal) * 2); background-color: var(--arrow-color); transform: rotate(45deg); z-index: 1; } .popup-hover-bridge:not(.popup-hover-bridge-visible) { display: none; } .popup-hover-bridge { position: fixed; inset: 0; z-index: calc(var(--pc-z-index-dropdown) - 1); clip-path: polygon( var(--hover-bridge-top-left-x, 0) var(--hover-bridge-top-left-y, 0), var(--hover-bridge-top-right-x, 0) var(--hover-bridge-top-right-y, 0), var(--hover-bridge-bottom-right-x, 0) var(--hover-bridge-bottom-right-y, 0), var(--hover-bridge-bottom-left-x, 0) var(--hover-bridge-bottom-left-y, 0) ); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/popup/popup.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/popup/popup.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./popup.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcPopup",
            "module": "src/components/popup/popup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/qr-code/qr-code.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcQrCode",
          "members": [
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "background",
              "type": {
                "text": "string"
              },
              "default": "\"white\"",
              "attribute": "background"
            },
            {
              "kind": "field",
              "name": "errorCorrection",
              "type": {
                "text": "| \"L\"\n        | \"M\"\n        | \"Q\"\n        | \"H\""
              },
              "default": "\"M\"",
              "attribute": "error-correction"
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "string"
              },
              "default": "\"black\"",
              "attribute": "fill"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "radius",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "radius"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "128",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "generate"
            }
          ],
          "attributes": [
            {
              "name": "background",
              "type": {
                "text": "string"
              },
              "default": "\"white\"",
              "fieldName": "background"
            },
            {
              "name": "error-correction",
              "type": {
                "text": "| \"L\"\n        | \"M\"\n        | \"Q\"\n        | \"H\""
              },
              "default": "\"M\"",
              "fieldName": "errorCorrection"
            },
            {
              "name": "fill",
              "type": {
                "text": "string"
              },
              "default": "\"black\"",
              "fieldName": "fill"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "radius",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "radius"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "128",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-qr-code",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcQrCode",
          "declaration": {
            "name": "PcQrCode",
            "module": "src/components/qr-code/qr-code.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-qr-code",
          "declaration": {
            "name": "PcQrCode",
            "module": "src/components/qr-code/qr-code.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/qr-code/qr-code.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/qr-code/qr-code.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/qr-code/qr-code.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./qr-code.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcQrCode",
            "module": "src/components/qr-code/qr-code.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/qr-code/QRCode.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/QR Code\", component: \"pc-qr-code\", argTypes: { background: { control: \"color\" }, errorCorrection: { control: \"select\", options: [\"L\", \"M\", \"Q\", \"H\"], }, fill: { control: \"color\" }, label: { control: \"text\" }, radius: { control: { type: \"number\", min: 0, max: 0.5, step: 0.01, }, }, size: { control: \"number\" }, value: { control: \"text\" }, }, args: { background: \"white\", errorCorrection: \"M\", fill: \"black\", label: \"A QR Code\", radius: 0, size: 128, value: \"https://example.com\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ background, errorCorrection, fill, label, radius, size, value, }) => html` <pc-qr-code background=${background} error-correction=${errorCorrection} fill=${fill} label=${label} radius=${radius} size=${size} value=${value} ></pc-qr-code> `, }"
        },
        {
          "kind": "variable",
          "name": "Sizing",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { background: \"white\", errorCorrection: \"M\", fill: \"black\", label: \"A large QR Code\", radius: 0, size: 256, value: \"https://example.com\", }, render: ({ background, errorCorrection, fill, label, radius, size, value, }) => html` <pc-qr-code background=${background} error-correction=${errorCorrection} fill=${fill} label=${label} radius=${radius} size=${size} value=${value} ></pc-qr-code> `, }"
        },
        {
          "kind": "variable",
          "name": "Colour",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { background: \"white\", errorCorrection: \"M\", fill: \"#184050\", label: \"A coloured QR Code\", radius: 0, size: 128, value: \"https://example.com\", }, render: ({ background, errorCorrection, fill, label, radius, size, value, }) => html` <pc-qr-code background=${background} error-correction=${errorCorrection} fill=${fill} label=${label} radius=${radius} size=${size} value=${value} ></pc-qr-code> `, }"
        },
        {
          "kind": "variable",
          "name": "Radius",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { background: \"white\", errorCorrection: \"M\", fill: \"black\", label: \"A QR Code with rounded data\", radius: 0.5, size: 128, value: \"https://example.com\", }, render: ({ background, errorCorrection, fill, label, radius, size, value, }) => html` <pc-qr-code background=${background} error-correction=${errorCorrection} fill=${fill} label=${label} radius=${radius} size=${size} value=${value} ></pc-qr-code> `, }"
        },
        {
          "kind": "variable",
          "name": "ErrorCorrection",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { background: \"white\", errorCorrection: \"H\", fill: \"black\", label: \"A QR Code with error correction set to high\", radius: 0, size: 128, value: \"https://example.com\", }, render: ({ background, errorCorrection, fill, label, radius, size, value, }) => html` <pc-qr-code background=${background} error-correction=${errorCorrection} fill=${fill} label=${label} radius=${radius} size=${size} value=${value} ></pc-qr-code> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Sizing",
          "declaration": {
            "name": "Sizing",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Colour",
          "declaration": {
            "name": "Colour",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Radius",
          "declaration": {
            "name": "Radius",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ErrorCorrection",
          "declaration": {
            "name": "ErrorCorrection",
            "module": "src/components/qr-code/QRCode.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio/radio.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcRadio",
          "members": [
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setInitialAttributes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleCheckedChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-radio",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRadio",
          "declaration": {
            "name": "PcRadio",
            "module": "src/components/radio/radio.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-radio",
          "declaration": {
            "name": "PcRadio",
            "module": "src/components/radio/radio.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio/Radio.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Radio\", component: \"pc-radio\", argTypes: { disabled: { control: \"boolean\" }, label: { control: \"text\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, value: { control: \"text\" }, }, args: { disabled: false, label: \"Radio\", size: \"medium\", value: \"radio\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled, label, size, value }) => html` <pc-radio ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Large\", size: \"large\", value: \"radio-large\", }, render: ({ disabled, label, size, value }) => html` <pc-radio ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Small\", size: \"small\", value: \"radio-small\", }, render: ({ disabled, label, size, value }) => html` <pc-radio ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: true, label: \"Disabled\", size: \"medium\", value: \"radio-disabled\", }, render: ({ disabled, label, size, value }) => html` <pc-radio ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/radio/Radio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/radio/Radio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/radio/Radio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/radio/Radio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/radio/Radio.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio/radio.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: block; } :host(:focus-visible) { outline: 0; } .radio { display: inline-flex; align-items: top; font-family: var(--pc-input-font-family); font-size: var(--pc-input-font-size-m); font-weight: var(--pc-input-font-weight); color: var(--pc-input-label-color); vertical-align: middle; cursor: pointer; } .radio-small { --toggle-size: var(--pc-toggle-size-s); font-size: var(--pc-input-font-size-s); } .radio-medium { --toggle-size: var(--pc-toggle-size-m); font-size: var(--pc-input-font-size-m); } .radio-large { --toggle-size: var(--pc-toggle-size-l); font-size: var(--pc-input-font-size-l); } .checked-icon { display: inline-flex; width: var(--toggle-size); height: var(--toggle-size); opacity: 0; transition: opacity 0.15s ease-in-out; } .radio-checked .checked-icon { opacity: 1; } .radio-control { display: inline-flex; position: relative; align-items: center; justify-content: center; flex: 0 0 auto; width: var(--toggle-size); height: var(--toggle-size); border: var(--pc-input-border-width) solid var(--pc-input-border-color); border-radius: var(--pc-border-radius-circle); background-color: transparent; color: transparent; transition: all var(--pc-transition-fast) ease-in-out; } .radio-input { position: absolute; margin: 0; padding: 0; opacity: 0; pointer-events: none; transition: opacity var(--pc-transition-fast) ease-in-out; } .radio:not(.radio-checked):not(.radio-disabled) .radio-control:hover { border-color: var(--pc-input-border-color-hover); } .radio:not(.radio-checked):not(.radio-disabled) .radio-control:hover:active { border-color: var(--pc-input-border-color-active); } .radio-checked .radio-control { color: var(--pc-color-neutral-0); background-color: var(--pc-color-primary-500); border-color: var(--pc-color-primary-500); } .radio.radio-checked:not(.radio-disabled) .radio-control:hover { background-color: var(--pc-color-primary-600); border-color: var(--pc-color-primary-600); } .radio.radio-checked:not(.radio-disabled) .radio-control:hover:active { background-color: var(--pc-color-primary-400); border-color: var(--pc-color-primary-400); } :host(:focus-visible) .radio-control { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .radio-disabled { opacity: 0.6; cursor: not-allowed; } /* If the radio isn’t checked, hide the circle icon in High Contrast mode on Windows */ .radio:not(.radio-checked) svg { opacity: 0; } .label { display: inline-block; color: var(--pc-input-label-color); line-height: var(--toggle-size); margin-inline-start: 0.5em; user-select: none; -webkit-user-select: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/radio/radio.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio/radio.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./radio.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcRadio",
            "module": "src/components/radio/radio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-button/radio-button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcRadioButton",
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController( this, \"[default]\", \"prefix\", \"suffix\", )"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hiddenInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pill",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            }
          ],
          "attributes": [
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "pill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pill"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-radio-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRadioButton",
          "declaration": {
            "name": "PcRadioButton",
            "module": "src/components/radio-button/radio-button.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-radio-button",
          "declaration": {
            "name": "PcRadioButton",
            "module": "src/components/radio-button/radio-button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-button/radio-button.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` ${buttonStyles} .prefix, .label, .suffix { display: inline-flex; position: relative; align-items: center; } .hidden-input { all: unset; position: absolute; inset: 0; opacity: 0; outline: 1px dotted var(--pc-color-danger-500); z-index: -1; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/radio-button/radio-button.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-button/radio-button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./radio-button.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcRadioButton",
            "module": "src/components/radio-button/radio-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-button/RadioButton.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Radio Button\", component: \"pc-radio-button\", argTypes: { disabled: { control: \"boolean\" }, label: { control: \"text\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, value: { control: \"text\" }, }, args: { disabled: false, label: \"Radio\", size: \"medium\", value: \"radio\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled, label, size, value }) => html` <pc-radio-button ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Large\", size: \"large\", value: \"radio-large\", }, render: ({ disabled, label, size, value }) => html` <pc-radio-button ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Small\", size: \"small\", value: \"radio-small\", }, render: ({ disabled, label, size, value }) => html` <pc-radio-button ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio-button> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: true, label: \"Disabled\", size: \"medium\", value: \"radio-disabled\", }, render: ({ disabled, label, size, value }) => html` <pc-radio-button ?disabled=${disabled} size=${size} value=${value}> ${label} </pc-radio-button> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/radio-button/RadioButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/radio-button/RadioButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/radio-button/RadioButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/radio-button/RadioButton.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/radio-button/RadioButton.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-group/radio-group.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcRadioGroup",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-button-group\": PcButtonGroup, \"pc-visually-hidden\": PcVisuallyHidden, }"
            },
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "protected",
              "readonly": true,
              "default": "new FormControlController(this)"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController( this, \"hint\", \"label\", )"
            },
            {
              "kind": "field",
              "name": "customValidityMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "validationTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "validationInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasButtonGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "hint"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"option\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "validity",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getAllRadios",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRadioClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleLabelClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "syncRadioElements",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncRadios",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateCheckedRadio",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSizeChange"
            },
            {
              "kind": "method",
              "name": "handleValueChange"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "default": "\"\""
                }
              ]
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "form"
            },
            {
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "hint"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"option\"",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRadioGroup",
          "declaration": {
            "name": "PcRadioGroup",
            "module": "src/components/radio-group/radio-group.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-radio-group",
          "declaration": {
            "name": "PcRadioGroup",
            "module": "src/components/radio-group/radio-group.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-group/radio-group.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: block; } .form-control { position: relative; border: none; margin: 0; padding: 0; } .label { padding: 0; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margin-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/radio-group/radio-group.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-group/radio-group.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./radio-group.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcRadioGroup",
            "module": "src/components/radio-group/radio-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/radio-group/RadioGroup.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Radio Group\", component: \"pc-radio-group\", subcomponents: { \"pc-radio\": \"pc-radio\", \"pc-radio-button\": \"pc-radio-button\", }, argTypes: { disabled: { control: \"boolean\" }, form: { control: \"text\" }, hint: { control: \"text\" }, label: { control: \"text\" }, name: { control: \"text\" }, required: { control: \"boolean\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, value: { control: \"text\" }, }, args: { disabled: false, form: \"\", hint: \"\", label: \"Select an option\", name: \"options\", required: false, size: \"medium\", value: \"1\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, form: \"\", hint: \"\", label: \"Select an option\", name: \"options\", required: false, size: \"large\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, form: \"\", hint: \"\", label: \"Select an option\", name: \"options\", required: false, size: \"small\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Hint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, form: \"\", hint: \"Choose the most appropriate option.\", label: \"Select an option\", name: \"options\", required: false, size: \"medium\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "RadioButtons",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, form: \"\", hint: \"Select an option that makes you proud.\", label: \"Select an option\", name: \"options\", required: false, size: \"medium\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio-button value=\"1\">Option 1</pc-radio-button> <pc-radio-button value=\"2\" ?disabled=${disabled} >Option 2</pc-radio-button > <pc-radio-button value=\"3\">Option 3</pc-radio-button> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: true, form: \"\", hint: \"\", label: \"Select an option\", name: \"options\", required: false, size: \"medium\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Required",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, form: \"\", hint: \"\", label: \"Select an option\", name: \"options\", required: true, size: \"medium\", value: \"1\", }, render: ({ disabled, form, hint, label, name, required, size, value, }) => html` <pc-radio-group form=${form} hint=${hint} label=${label} name=${name} ?required=${required} size=${size} value=${value} > <pc-radio value=\"1\">Option 1</pc-radio> <pc-radio value=\"2\" ?disabled=${disabled}>Option 2</pc-radio> <pc-radio value=\"3\">Option 3</pc-radio> </pc-radio-group> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Hint",
          "declaration": {
            "name": "Hint",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtons",
          "declaration": {
            "name": "RadioButtons",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "src/components/radio-group/RadioGroup.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/rating/rating.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcRating",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon\": PcIcon }"
            },
            {
              "kind": "field",
              "name": "rating",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "hoverValue",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "isHovering",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "5",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "precision",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "precision"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "getIcon",
              "type": {
                "text": "(value: number) => string"
              },
              "attribute": "getIcon"
            },
            {
              "kind": "method",
              "name": "getValueFromMousePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getValueFromTouchPosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getValueFromXCoordinate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "coordinate",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "roundToPrecision",
              "privacy": "private",
              "parameters": [
                {
                  "name": "numberToRound",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "precision",
                  "default": "0.5"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleHoverValueChange"
            },
            {
              "kind": "method",
              "name": "handleIsHoveringChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "label"
            },
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "5",
              "fieldName": "max"
            },
            {
              "name": "precision",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "precision"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "value"
            },
            {
              "name": "getIcon",
              "type": {
                "text": "(value: number) => string"
              },
              "fieldName": "getIcon"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-rating",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRating",
          "declaration": {
            "name": "PcRating",
            "module": "src/components/rating/rating.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-rating",
          "declaration": {
            "name": "PcRating",
            "module": "src/components/rating/rating.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/rating/Rating.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Rating\", component: \"pc-rating\", argTypes: { disabled: { control: \"boolean\" }, label: { control: \"text\" }, max: { control: { type: \"number\", min: 0 }, }, precision: { control: { type: \"number\", step: 0.01 }, }, readonly: { control: \"boolean\" }, value: { control: \"number\" }, getIcon: { control: \"text\" }, // CSS styles iconSize: { control: \"text\" }, }, args: { disabled: false, label: \"Rating\", max: 5, precision: 1, readonly: false, value: 0, getIcon: `<pc-icon library=\"default\" =\"solid\" name=\"star\"></pc-icon>`, // CSS styles iconSize: \"1.2rem\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled, label, max, precision, readonly, value, getIcon, // CSS styles iconSize, }) => html` <pc-rating class=\"rating-default\" ?disabled=${disabled} label=${label} max=${max} precision=${precision} ?readonly=${readonly} value=${value} style=\"--icon-size: ${iconSize}\" .getIcon=${() => getIcon} ></pc-rating> `, }"
        },
        {
          "kind": "variable",
          "name": "MaximumValue",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Rating with three stars\", max: 3, precision: 1, readonly: false, value: 0, // CSS styles iconSize: \"1rem\", }, render: ({ disabled, label, max, precision, readonly, value, getIcon, // CSS styles iconSize, }) => html` <pc-rating class=\"rating-max-value\" ?disabled=${disabled} label=${label} max=${max} precision=${precision} ?readonly=${readonly} value=${value} style=\"--icon-size: ${iconSize}\" .getIcon=${() => getIcon} ></pc-rating> `, }"
        },
        {
          "kind": "variable",
          "name": "Precision",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"A rating that allows fractions of 0.5\", max: 5, precision: 0.5, readonly: false, value: 0, // CSS styles iconSize: \"1rem\", }, render: ({ disabled, label, max, precision, readonly, value, getIcon, // CSS styles iconSize, }) => html` <pc-rating class=\"rating-precision\" ?disabled=${disabled} label=${label} max=${max} precision=${precision} ?readonly=${readonly} value=${value} style=\"--icon-size: ${iconSize}\" .getIcon=${() => getIcon} ></pc-rating> `, }"
        },
        {
          "kind": "variable",
          "name": "IconSize",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Rating with large stars\", max: 5, precision: 1, readonly: false, value: 0, // CSS styles iconSize: \"2rem\", }, render: ({ disabled, label, max, precision, readonly, value, getIcon, // CSS styles iconSize, }) => html` <pc-rating class=\"rating-icon-size\" ?disabled=${disabled} label=${label} max=${max} precision=${precision} ?readonly=${readonly} value=${value} style=\"--icon-size: ${iconSize}\" .getIcon=${() => getIcon} ></pc-rating> `, }"
        },
        {
          "kind": "variable",
          "name": "CustomIcon",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { disabled: false, label: \"Rating with hearts\", max: 5, precision: 1, readonly: false, value: 0, getIcon: '<pc-icon library=\"default\" =\"solid\" name=\"heart\"></pc-icon>', iconSize: \"1rem\", }, render: ({ disabled, label, max, precision, readonly, value, getIcon, iconSize, }) => html` <pc-rating class=\"rating-default\" ?disabled=${disabled} label=${label} max=${max} precision=${precision} ?readonly=${readonly} value=${value} style=\"--icon-size: ${iconSize}; --icon-color-active: #ff4136\" .getIcon=${() => getIcon} ></pc-rating> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/rating/Rating.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/rating/Rating.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MaximumValue",
          "declaration": {
            "name": "MaximumValue",
            "module": "src/components/rating/Rating.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Precision",
          "declaration": {
            "name": "Precision",
            "module": "src/components/rating/Rating.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconSize",
          "declaration": {
            "name": "IconSize",
            "module": "src/components/rating/Rating.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CustomIcon",
          "declaration": {
            "name": "CustomIcon",
            "module": "src/components/rating/Rating.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/rating/rating.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --icon-color: var(--pc-color-neutral-300); --icon-color-active: var(--pc-color-amber-500); --icon-size: 1.2rem; display: inline-flex; } .rating { position: relative; display: inline-flex; border-radius: var(--pc-border-radius-m); vertical-align: middle; } .rating:focus { outline: none; } .rating:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .rating-icons { display: inline-flex; position: relative; font-size: var(--icon-size); line-height: 0; color: var(--icon-color); white-space: nowrap; cursor: pointer; } .rating-icons > * { padding: 0.0625rem; } .rating-icon-active, .rating-partial-filled { color: var(--icon-color-active); } .rating-partial-icon-container { position: relative; } .rating-partial-filled { position: absolute; top: 0.0625rem; left: 0.0625rem; } .rating-icon { pointer-events: none; transition: all var(--pc-transition-fast) ease-in-out; } .rating-icon pc-icon::part(svg) { overflow: visible; } .rating-icon-hover { scale: 1.15; } .rating-disabled .rating-icons, .rating-readonly .rating-icons { cursor: default; } .rating-disabled .rating-icon-hover, .rating-readonly .rating-icon-hover { scale: none; } .rating-disabled { opacity: 0.6; } .rating-disabled .rating-icons { cursor: not-allowed; } @media (forced-colors: active) { .rating-icon-active { color: SelectedItem; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/rating/rating.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/rating/rating.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./rating.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcRating",
            "module": "src/components/rating/rating.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resize-observer/resize-observer.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcResizeObserver",
          "members": [
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "observedElements",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "startObserver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "stopObserver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-resize-observer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcResizeObserver",
          "declaration": {
            "name": "PcResizeObserver",
            "module": "src/components/resize-observer/resize-observer.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-resize-observer",
          "declaration": {
            "name": "PcResizeObserver",
            "module": "src/components/resize-observer/resize-observer.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resize-observer/resize-observer.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: contents; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/resize-observer/resize-observer.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resize-observer/resize-observer.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./resize-observer.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcResizeObserver",
            "module": "src/components/resize-observer/resize-observer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resize-observer/ResizeObserver.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Resize Observer\", component: \"pc-resize-observer\", argTypes: { disabled: { control: \"boolean\" }, }, args: { disabled: false, }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ disabled }) => html` <div class=\"resize-observer-overview\"> <pc-resize-observer ?disabled=${disabled}> <span>Resize this box and watch the console ↘️</span> </pc-resize-observer> </div> <script> const container = document.querySelector( \".resize-observer-overview\", ); const resizeObserver = container.querySelector(\"pc-resize-observer\"); resizeObserver.addEventListener(\"pc-resize\", (event) => { console.log(event.detail); }); </script> <style> .resize-observer-overview { display: flex; align-items: center; justify-content: center; padding: var(--pc-spacing-xxxl) var(--pc-spacing-xxl); border: 2px solid var(--pc-input-border-color); border-radius: var(--pc-border-radius-l) var(--pc-border-radius-l) 0 var(--pc-border-radius-l); overflow: auto; resize: both; } </style> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resize-observer/ResizeObserver.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/resize-observer/ResizeObserver.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/spinner/spinner.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcSpinner",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-spinner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSpinner",
          "declaration": {
            "name": "PcSpinner",
            "module": "src/components/spinner/spinner.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-spinner",
          "declaration": {
            "name": "PcSpinner",
            "module": "src/components/spinner/spinner.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/spinner/Spinner.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Spinner\", component: \"pc-spinner\", argTypes: { // CSS styles fontSize: { control: \"text\" }, indicatorColor: { control: \"color\" }, speed: { control: \"text\" }, trackColor: { control: \"color\" }, trackWidth: { control: \"text\" }, }, args: { fontSize: \"1rem\", indicatorColor: \"var(--pc-color-primary-600)\", speed: \"2s\", trackColor: \"rgba(112, 120, 128, 0.25)\", trackWidth: \"0.125rem\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ fontSize, indicatorColor, speed, trackColor, trackWidth, }) => html` <pc-spinner style=\" --indicator-color: ${indicatorColor}; --speed: ${speed}; --track-color: ${trackColor}; --track-width: ${trackWidth}; font-size: ${fontSize}; \" ></pc-spinner> `, }"
        },
        {
          "kind": "variable",
          "name": "Sizing",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { fontSize: \"3rem\", indicatorColor: \"var(--pc-color-primary-600)\", speed: \"2s\", trackColor: \"rgba(112, 120, 128, 0.25)\", trackWidth: \"0.125rem\", }, render: ({ fontSize, indicatorColor, speed, trackColor, trackWidth, }) => html` <pc-spinner style=\" --indicator-color: ${indicatorColor}; --speed: ${speed}; --track-color: ${trackColor}; --track-width: ${trackWidth}; font-size: ${fontSize}; \" ></pc-spinner> `, }"
        },
        {
          "kind": "variable",
          "name": "TrackWidth",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { fontSize: \"1rem\", indicatorColor: \"var(--pc-color-primary-600)\", speed: \"2s\", trackColor: \"rgba(112, 120, 128, 0.25)\", trackWidth: \"0.25rem\", }, render: ({ fontSize, indicatorColor, speed, trackColor, trackWidth, }) => html` <pc-spinner style=\" --indicator-color: ${indicatorColor}; --speed: ${speed}; --track-color: ${trackColor}; --track-width: ${trackWidth}; font-size: ${fontSize}; \" ></pc-spinner> `, }"
        },
        {
          "kind": "variable",
          "name": "Colour",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { fontSize: \"1rem\", indicatorColor: \"var(--pc-color-pink-800)\", speed: \"2s\", trackColor: \"var(--pc-color-pink-500)\", trackWidth: \"0.125rem\", }, render: ({ fontSize, indicatorColor, speed, trackColor, trackWidth, }) => html` <pc-spinner style=\" --indicator-color: ${indicatorColor}; --speed: ${speed}; --track-color: ${trackColor}; --track-width: ${trackWidth}; font-size: ${fontSize}; \" ></pc-spinner> `, }"
        },
        {
          "kind": "variable",
          "name": "Speed",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { fontSize: \"1rem\", indicatorColor: \"var(--pc-color-primary-600)\", speed: \"5s\", trackColor: \"rgba(112, 120, 128, 0.25)\", trackWidth: \"0.125rem\", }, render: ({ fontSize, indicatorColor, speed, trackColor, trackWidth, }) => html` <pc-spinner style=\" --indicator-color: ${indicatorColor}; --speed: ${speed}; --track-color: ${trackColor}; --track-width: ${trackWidth}; font-size: ${fontSize}; \" ></pc-spinner> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Sizing",
          "declaration": {
            "name": "Sizing",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TrackWidth",
          "declaration": {
            "name": "TrackWidth",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Colour",
          "declaration": {
            "name": "Colour",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Speed",
          "declaration": {
            "name": "Speed",
            "module": "src/components/spinner/Spinner.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/spinner/spinner.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --track-width: 0.125rem; --track-color: rgba(112, 120, 128, 0.25); --indicator-color: var(--pc-color-primary-600); --speed: 2s; display: inline-flex; width: 1em; height: 1em; flex: none; } .spinner { flex: 1 1 auto; height: 100%; width: 100%; overflow: visible; } .track, .indicator { fill: none; stroke-width: var(--track-width); r: calc(0.5em - var(--track-width) / 2); cx: 0.5em; cy: 0.5em; transform-origin: 50% 50%; } .track { stroke: var(--track-color); transform-origin: 0% 0%; } .indicator { stroke: var(--indicator-color); stroke-linecap: round; stroke-dasharray: 150% 75%; animation: spin var(--speed) linear infinite; } @keyframes spin { 0% { transform: rotate(0deg); stroke-dasharray: 0% 314.159%; } 50% { transform: rotate(450deg); stroke-dasharray: 157.08% 157.08%; } 100% { transform: rotate(1080deg); stroke-dasharray: 0% 314.159%; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/spinner/spinner.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/spinner/spinner.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./spinner.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcSpinner",
            "module": "src/components/spinner/spinner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/switch/switch.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcSwitch",
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "readonly": true,
              "default": "new FormControlController(this, { value: (control: PcSwitch) => control.checked ? control.value || \"on\" : undefined, defaultValue: (control: PcSwitch) => control.defaultChecked, setValue: (control: PcSwitch, checked: boolean) => (control.checked = checked), })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "readonly": true,
              "default": "new HasSlotController(this, \"hint\")"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "defaultChecked",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "hint"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "validity",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleCheckedChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "click"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "title"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "form"
            },
            {
              "name": "hint",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "hint"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-switch",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSwitch",
          "declaration": {
            "name": "PcSwitch",
            "module": "src/components/switch/switch.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-switch",
          "declaration": {
            "name": "PcSwitch",
            "module": "src/components/switch/switch.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/switch/Switch.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Switch\", component: \"pc-switch\", argTypes: { checked: { control: \"boolean\" }, defaultChecked: { control: \"boolean\" }, disabled: { control: \"boolean\" }, form: { control: \"text\" }, hint: { control: \"text\" }, label: { control: \"text\" }, name: { control: \"text\" }, required: { control: \"boolean\" }, size: { control: \"select\", options: [\"small\", \"medium\", \"large\"], }, title: { control: \"text\" }, value: { control: \"text\" }, }, args: { checked: false, defaultChecked: false, disabled: false, form: \"\", hint: \"\", label: \"Switch\", name: \"\", required: false, size: \"medium\", title: \"\", value: \"\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Checked",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: true, defaultChecked: false, disabled: false, form: \"\", hint: \"\", label: \"Checked\", name: \"\", required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Large",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, form: \"\", hint: \"\", label: \"Large\", name: \"\", required: false, size: \"large\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Small",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, form: \"\", hint: \"\", label: \"Small\", name: \"\", required: false, size: \"small\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: true, form: \"\", hint: \"\", label: \"Disabled\", name: \"\", required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Hint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, form: \"\", hint: \"What does this switch do?\", label: \"Switch with hint\", name: \"\", required: false, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        },
        {
          "kind": "variable",
          "name": "Required",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { checked: false, defaultChecked: false, disabled: false, form: \"\", hint: \"\", label: \"Required\", name: \"\", required: true, size: \"medium\", title: \"\", value: \"\", }, render: ({ checked, defaultChecked, disabled, form, hint, label, name, required, size, title, value, }) => html` <pc-switch ?checked=${checked} ?defaultChecked=${defaultChecked} ?disabled=${disabled} form=${form} hint=${hint} name=${name} ?required=${required} size=${size} title=${title} value=${value} > ${label} </pc-switch> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Checked",
          "declaration": {
            "name": "Checked",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Large",
          "declaration": {
            "name": "Large",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Small",
          "declaration": {
            "name": "Small",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Hint",
          "declaration": {
            "name": "Hint",
            "module": "src/components/switch/Switch.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "src/components/switch/Switch.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/switch/switch.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; } :host([size=\"small\"]) { --height: var(--pc-toggle-size-s); --thumb-size: calc(var(--pc-toggle-size-s) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-s); } :host([size=\"medium\"]) { --height: var(--pc-toggle-size-m); --thumb-size: calc(var(--pc-toggle-size-m) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-m); } :host([size=\"large\"]) { --height: var(--pc-toggle-size-l); --thumb-size: calc(var(--pc-toggle-size-l) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-l); } .switch { display: inline-flex; position: relative; align-items: center; vertical-align: middle; color: var(--pc-input-label-color); font-size: inherit; font-family: var(--pc-input-font-family); font-weight: var(--pc-input-font-weight); cursor: pointer; } .control { display: inline-flex; position: relative; align-items: center; justify-content: center; flex: 0 0 auto; width: var(--width); height: var(--height); background-color: var(--pc-color-neutral-200); border: var(--pc-input-border-width) solid var(--pc-color-neutral-200); border-radius: var(--pc-border-radius-pill); transition: all var(--pc-transition-fast) ease-in-out; } .control .thumb { background-color: hsl(220, 25%, 96%); width: var(--thumb-size); height: var(--thumb-size); border-radius: var(--pc-border-radius-circle); translate: calc((var(--width) - var(--height)) / -2); box-shadow: var(--pc-shadow-xs); transition: outline var(--pc-transition-fast) ease-in-out, translate var(--pc-transition-medium) cubic-bezier(0.34, 1.35, 0.64, 1); } .switch-input { position: absolute; margin: 0; padding: 0; opacity: 0; pointer-events: none; } .switch:not(.switch-checked):not(.switch-disabled) .control:hover { background-color: var(--pc-color-neutral-300); border-color: var(--pc-color-neutral-300); } .switch:not(.switch-checked):not(.switch-disabled) .control:hover:active { background-color: var(--pc-color-neutral-100); border-color: var(--pc-color-neutral-100); } .switch:not(.switch-checked):not(.switch-disabled) .switch-input:focus-visible ~ .control .thumb { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .switch-checked .control { background-color: var(--pc-color-primary-400); border-color: var(--pc-color-primary-400); } .switch-checked .control .thumb { translate: calc((var(--width) - var(--height)) / 2); } .switch.switch-checked:not(.switch-disabled) .control:hover { background-color: var(--pc-color-primary-500); border-color: var(--pc-color-primary-500); } .switch.switch-checked:not(.switch-disabled) .control:hover:active { background-color: var(--pc-color-primary-300); border-color: var(--pc-color-primary-300); } .switch.switch-checked:not(.switch-disabled) .switch-input:focus-visible ~ .control { background-color: var(--pc-color-primary-600); border-color: var(--pc-color-primary-600); } .switch.switch-checked:not(.switch-disabled) .switch-input:focus-visible ~ .control .thumb { outline: var(--pc-focus-ring); outline-color: var(--pc-color-primary-300); outline-offset: var(--pc-focus-ring-offset); } .switch-disabled { opacity: 0.6; cursor: not-allowed; } .label { display: inline-block; line-height: var(--height); margin-inline-start: var(--pc-spacing-s); user-select: none; -webkit-user-select: none; transition: color var(--pc-transition-fast) ease-in-out; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margin-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); } @media (forced-colors: active) { .switch:not(.switch-disabled) .control:hover .thumb, .switch .control .thumb { border: 1px solid ButtonText; width: calc(var(--thumb-size) - 2px); height: calc(var(--thumb-size) - 2px); } .switch.switch-checked:not(.switch-disabled) .control:hover .thumb, .switch-checked .control .thumb { background-color: ButtonText; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/switch/switch.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/switch/switch.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./switch.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcSwitch",
            "module": "src/components/switch/switch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab/tab.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcTab",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon-button\": PcIconButton }"
            },
            {
              "kind": "field",
              "name": "attributeID",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "++id"
            },
            {
              "kind": "field",
              "name": "componentID",
              "privacy": "private",
              "readonly": true,
              "default": "`pc-tab-${this.attributeID}`"
            },
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "closable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "panel",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "panel",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabIndex",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleCloseClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleActiveChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "closable"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "panel",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "panel"
            },
            {
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-tab",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTab",
          "declaration": {
            "name": "PcTab",
            "module": "src/components/tab/tab.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-tab",
          "declaration": {
            "name": "PcTab",
            "module": "src/components/tab/tab.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab/Tab.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Tab\", component: \"pc-tab\", argTypes: { active: { control: \"boolean\" }, closable: { control: \"boolean\" }, disabled: { control: \"boolean\" }, label: { control: \"text\" }, panel: { control: \"text\" }, tabIndex: { control: \"number\" }, }, args: { active: false, closable: false, disabled: false, label: \"Tab\", panel: \"\", tabIndex: 0, }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ active, closable, disabled, label, panel, tabIndex }) => html` <pc-tab ?active=${active} ?closable=${closable} ?disabled=${disabled} panel=${panel} tabIndex=${tabIndex} > ${label} </pc-tab> `, }"
        },
        {
          "kind": "variable",
          "name": "Active",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { active: true, closable: false, disabled: false, label: \"Active\", panel: \"\", tabIndex: 0, }, render: ({ active, closable, disabled, label, panel, tabIndex }) => html` <pc-tab ?active=${active} ?closable=${closable} ?disabled=${disabled} panel=${panel} tabIndex=${tabIndex} > ${label} </pc-tab> `, }"
        },
        {
          "kind": "variable",
          "name": "Closable",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { active: false, closable: true, disabled: false, label: \"Closable\", panel: \"\", tabIndex: 0, }, render: ({ active, closable, disabled, label, panel, tabIndex }) => html` <pc-tab ?active=${active} ?closable=${closable} ?disabled=${disabled} panel=${panel} tabIndex=${tabIndex} > ${label} </pc-tab> `, }"
        },
        {
          "kind": "variable",
          "name": "Disabled",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { active: false, closable: false, disabled: true, label: \"Disabled\", panel: \"\", tabIndex: 0, }, render: ({ active, closable, disabled, label, panel, tabIndex }) => html` <pc-tab ?active=${active} ?closable=${closable} ?disabled=${disabled} panel=${panel} tabIndex=${tabIndex} > ${label} </pc-tab> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/tab/Tab.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/tab/Tab.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Active",
          "declaration": {
            "name": "Active",
            "module": "src/components/tab/Tab.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Closable",
          "declaration": {
            "name": "Closable",
            "module": "src/components/tab/Tab.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Disabled",
          "declaration": {
            "name": "Disabled",
            "module": "src/components/tab/Tab.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab/tab.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: inline-block; } :host(:focus) { outline: transparent; } :host(:focus-visible) { color: var(--pc-color-primary-800); outline: var(--pc-focus-ring); outline-offset: calc( -1 * var(--pc-focus-ring-width) - var(--pc-focus-ring-offset) ); } .tab { display: inline-flex; align-items: center; font-family: var(--pc-font-sans); font-size: var(--pc-font-size-s); font-weight: var(--pc-font-weight-semibold); border-radius: var(--pc-border-radius-m); color: var(--pc-color-neutral-600); padding: var(--pc-spacing-m); white-space: nowrap; user-select: none; -webkit-user-select: none; cursor: pointer; transition: all var(--pc-transition-fast) ease-in-out; } .tab:hover:not(.tab-disabled, .tab-active) { color: var(--pc-color-neutral-700); } .tab:hover:active:not(.tab-disabled, .tab-active) { color: var(--pc-color-neutral-500); } .tab.tab-active:not(.tab-disabled) { color: var(--pc-color-neutral-900); } .tab.tab-closable { padding-inline-end: var(--pc-spacing-s); } .tab.tab-disabled { opacity: 0.6; cursor: not-allowed; } .close-button { font-size: var(--pc-font-size-s); margin-inline-start: var(--pc-spacing-s); } .close-button::part(base) { padding: var(--pc-spacing-xxxs); } @media (forced-colors: active) { .tab.tab-active:not(.tab-disabled) { outline: 1px solid transparent; outline-offset: -3px; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/tab/tab.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab/tab.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./tab.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTab",
            "module": "src/components/tab/tab.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-group/tab-group.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcTabGroup",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-icon-button\": PcIconButton, \"pc-resize-observer\": PcResizeObserver, }"
            },
            {
              "kind": "field",
              "name": "activeTab",
              "type": {
                "text": "PcTab | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mutationObserver",
              "type": {
                "text": "MutationObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "PcTab[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "focusableTabs",
              "type": {
                "text": "PcTab[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "panels",
              "type": {
                "text": "PcTabPanel[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "tabGroup",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "body",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "navigation",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "indicator",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "hasScrollControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "shouldHideScrollStartButton",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "shouldHideScrollEndButton",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "activation",
              "type": {
                "text": "\"auto\" | \"manual\""
              },
              "default": "\"auto\"",
              "attribute": "activation"
            },
            {
              "kind": "field",
              "name": "fixedScrollControls",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "fixed-scroll-controls"
            },
            {
              "kind": "field",
              "name": "noScrollControls",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "no-scroll-controls"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "\"top\" | \"bottom\" | \"start\" | \"end\""
              },
              "default": "\"top\"",
              "attribute": "placement"
            },
            {
              "kind": "method",
              "name": "getAllTabs",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getAllPanels",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getActiveTab",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrollToStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleScrollToEnd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setActiveTab",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tab",
                  "type": {
                    "text": "PcTab"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "{ emitEvents?: boolean; scrollBehavior?: \"auto\" | \"smooth\" }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setAriaLabels",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "repositionIndicator",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncTabsAndPanels",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "findNextFocusableTab",
              "privacy": "private",
              "parameters": [
                {
                  "name": "currentIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "direction",
                  "type": {
                    "text": "\"forward\" | \"backward\""
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "scrollOffset",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "1"
            },
            {
              "kind": "method",
              "name": "updateScrollButtons",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isScrolledToEnd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "scrollFromStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateScrollControls"
            },
            {
              "kind": "method",
              "name": "syncIndicator"
            },
            {
              "kind": "method",
              "name": "show",
              "parameters": [
                {
                  "name": "panel",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "activation",
              "type": {
                "text": "\"auto\" | \"manual\""
              },
              "default": "\"auto\"",
              "fieldName": "activation"
            },
            {
              "name": "fixed-scroll-controls",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fixedScrollControls"
            },
            {
              "name": "no-scroll-controls",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "noScrollControls"
            },
            {
              "name": "placement",
              "type": {
                "text": "\"top\" | \"bottom\" | \"start\" | \"end\""
              },
              "default": "\"top\"",
              "fieldName": "placement"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-tab-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabGroup",
          "declaration": {
            "name": "PcTabGroup",
            "module": "src/components/tab-group/tab-group.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-tab-group",
          "declaration": {
            "name": "PcTabGroup",
            "module": "src/components/tab-group/tab-group.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-group/tab-group.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --indicator-color: var(--pc-color-primary-500); --track-width: 4px; display: block; } .tab-group { display: flex; border-radius: 0; } .tab-group-tabs { display: flex; position: relative; } .tab-group-indicator { position: absolute; transition: all var(--pc-transition-medium) ease-in-out; } .tab-group-has-scroll-controls .tab-group-navigation-container { position: relative; padding: 0 var(--pc-spacing-xl); } .tab-group-has-scroll-controls .tab-group-scroll-button-start-hidden, .tab-group-has-scroll-controls .tab-group-scroll-button-end-hidden { opacity: 0; pointer-events: none; } .tab-group-navigation-container, .tab-group-navigation { outline: none; } .tab-group-body { display: block; overflow: auto; } .tab-group-scroll-button { display: flex; position: absolute; align-items: center; justify-content: center; top: 0; bottom: 0; width: var(--pc-spacing-xl); opacity: 1; pointer-events: auto; transition: opacity var(--pc-transition-fast) ease-in-out; } .tab-group-scroll-button-start { left: 0; } .tab-group-scroll-button-end { right: 0; } .tab-group-rtl .tab-group-scroll-button-start { left: auto; right: 0; } .tab-group-rtl .tab-group-scroll-button-end { left: 0; right: auto; } .tab-group-top { flex-direction: column; } .tab-group-top .tab-group-navigation-container { order: 1; } .tab-group-top .tab-group-navigation { display: flex; overflow-x: auto; scrollbar-width: none; } .tab-group-top .tab-group-navigation::-webkit-scrollbar { width: 0; height: 0; } .tab-group-top .tab-group-tabs { position: relative; flex-direction: row; flex: 1 1 auto; } .tab-group-top .tab-group-indicator { bottom: 0; min-height: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-top .tab-group-body { order: 2; } .tab-group-top ::slotted(pc-tab-panel) { padding: var(--pc-spacing-m) 0; } .tab-group-bottom { flex-direction: column; } .tab-group-bottom .tab-group-navigation-container { order: 2; } .tab-group-bottom .tab-group-navigation { display: flex; overflow-x: auto; scrollbar-width: none; } .tab-group-bottom .tab-group-tabs { position: relative; flex-direction: row; flex: 1 1 auto; } .tab-group-bottom .tab-group-indicator { top: 0; min-height: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-bottom .tab-group-body { order: 1; } .tab-group-bottom ::slotted(pc-tab-panel) { padding: var(--pc-spacing-m) 0; } .tab-group-start { flex-direction: row; } .tab-group-start .tab-group-navigation-container { order: 1; } .tab-group-start .tab-group-tabs { flex-direction: column; flex: 0 0 auto; } .tab-group-start .tab-group-indicator { right: 0; min-width: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-start .tab-group-body { flex: 1 1 auto; order: 2; } .tab-group-start ::slotted(pc-tab-panel) { padding: 0 var(--pc-spacing-m); } .tab-group-end { flex-direction: row; } .tab-group-end .tab-group-navigation-container { order: 2; } .tab-group-end .tab-group-tabs { flex-direction: column; flex: 0 0 auto; } .tab-group-end .tab-group-indicator { left: 0; min-width: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-end.tab-group-rtl .tab-group-indicator { right: 0; left: auto; } .tab-group-end .tab-group-body { flex: 1 1 auto; order: 1; } .tab-group-end ::slotted(pc-tab-panel) { padding: 0 var(--pc-spacing-m); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/tab-group/tab-group.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-group/tab-group.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./tab-group.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTabGroup",
            "module": "src/components/tab-group/tab-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-group/TabGroup.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Tab Group\", component: \"pc-tab-group\", subcomponents: { \"pc-tab\": \"pc-tab\", \"pc-tab-panel\": \"pc-tab-panel\", }, argTypes: { activation: { control: \"select\", options: [\"auto\", \"manual\"], }, fixedScrollControls: { control: \"boolean\" }, noScrollControls: { control: \"boolean\" }, placement: { control: \"select\", options: [\"top\", \"bottom\", \"start\", \"end\"], }, }, args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"top\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"custom\">Custom</pc-tab> <pc-tab slot=\"navigation\" panel=\"advanced\">Advanced</pc-tab> <pc-tab slot=\"navigation\" panel=\"disabled\" disabled=\"\"> Disabled </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"custom\"> This is the custom tab panel. </pc-tab-panel> <pc-tab-panel name=\"advanced\"> This is the advanced tab panel. </pc-tab-panel> <pc-tab-panel name=\"disabled\"> This is a disabled tab panel. </pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Bottom",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"bottom\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"custom\">Custom</pc-tab> <pc-tab slot=\"navigation\" panel=\"advanced\">Advanced</pc-tab> <pc-tab slot=\"navigation\" panel=\"disabled\" disabled=\"\"> Disabled </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"custom\"> This is the custom tab panel. </pc-tab-panel> <pc-tab-panel name=\"advanced\"> This is the advanced tab panel. </pc-tab-panel> <pc-tab-panel name=\"disabled\"> This is a disabled tab panel. </pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Start",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"start\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"custom\">Custom</pc-tab> <pc-tab slot=\"navigation\" panel=\"advanced\">Advanced</pc-tab> <pc-tab slot=\"navigation\" panel=\"disabled\" disabled=\"\"> Disabled </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"custom\"> This is the custom tab panel. </pc-tab-panel> <pc-tab-panel name=\"advanced\"> This is the advanced tab panel. </pc-tab-panel> <pc-tab-panel name=\"disabled\"> This is a disabled tab panel. </pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "End",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"end\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"custom\">Custom</pc-tab> <pc-tab slot=\"navigation\" panel=\"advanced\">Advanced</pc-tab> <pc-tab slot=\"navigation\" panel=\"disabled\" disabled=\"\"> Disabled </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"custom\"> This is the custom tab panel. </pc-tab-panel> <pc-tab-panel name=\"advanced\"> This is the advanced tab panel. </pc-tab-panel> <pc-tab-panel name=\"disabled\"> This is a disabled tab panel. </pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "Closable",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"top\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group class=\"tabs-closable\" activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"closable-1\" closable> Closable 1 </pc-tab> <pc-tab slot=\"navigation\" panel=\"closable-2\" closable> Closable 2 </pc-tab> <pc-tab slot=\"navigation\" panel=\"closable-3\" closable> Closable 3 </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"closable-1\"> This is the first closable tab panel. </pc-tab-panel> <pc-tab-panel name=\"closable-2\"> This is the second closable tab panel. </pc-tab-panel> <pc-tab-panel name=\"closable-3\"> This is a third closable tab panel. </pc-tab-panel> </pc-tab-group> <script> const tabGroup = document.querySelector(\".tabs-closable\"); tabGroup.addEventListener(\"pc-close\", async (event) => { const tab = event.target; const panel = tabGroup.querySelector( 'pc-tab-panel[name=\"\\${tab.panel}\"]', ); if (tab.active) { tabGroup.show(tab.previousElementSibling.panel); } tab.remove(); panel.remove(); }); </script> `, }"
        },
        {
          "kind": "variable",
          "name": "Scrollable",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: false, noScrollControls: false, placement: \"top\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"tab-1\">Tab 1</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-2\">Tab 2</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-3\">Tab 3</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-4\">Tab 4</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-5\">Tab 5</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-6\">Tab 6</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-7\">Tab 7</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-8\">Tab 8</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-9\">Tab 9</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-10\">Tab 10</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-11\">Tab 11</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-12\">Tab 12</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-13\">Tab 13</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-14\">Tab 14</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-15\">Tab 15</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-16\">Tab 16</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-17\">Tab 17</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-18\">Tab 18</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-19\">Tab 19</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-20\">Tab 20</pc-tab> <pc-tab-panel name=\"tab-1\">Tab panel 1</pc-tab-panel> <pc-tab-panel name=\"tab-2\">Tab panel 2</pc-tab-panel> <pc-tab-panel name=\"tab-3\">Tab panel 3</pc-tab-panel> <pc-tab-panel name=\"tab-4\">Tab panel 4</pc-tab-panel> <pc-tab-panel name=\"tab-5\">Tab panel 5</pc-tab-panel> <pc-tab-panel name=\"tab-6\">Tab panel 6</pc-tab-panel> <pc-tab-panel name=\"tab-7\">Tab panel 7</pc-tab-panel> <pc-tab-panel name=\"tab-8\">Tab panel 8</pc-tab-panel> <pc-tab-panel name=\"tab-9\">Tab panel 9</pc-tab-panel> <pc-tab-panel name=\"tab-10\">Tab panel 10</pc-tab-panel> <pc-tab-panel name=\"tab-11\">Tab panel 11</pc-tab-panel> <pc-tab-panel name=\"tab-12\">Tab panel 12</pc-tab-panel> <pc-tab-panel name=\"tab-13\">Tab panel 13</pc-tab-panel> <pc-tab-panel name=\"tab-14\">Tab panel 14</pc-tab-panel> <pc-tab-panel name=\"tab-15\">Tab panel 15</pc-tab-panel> <pc-tab-panel name=\"tab-16\">Tab panel 16</pc-tab-panel> <pc-tab-panel name=\"tab-17\">Tab panel 17</pc-tab-panel> <pc-tab-panel name=\"tab-18\">Tab panel 18</pc-tab-panel> <pc-tab-panel name=\"tab-19\">Tab panel 19</pc-tab-panel> <pc-tab-panel name=\"tab-20\">Tab panel 20</pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "FixedScrollControls",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"auto\", fixedScrollControls: true, noScrollControls: false, placement: \"top\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"tab-1\">Tab 1</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-2\">Tab 2</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-3\">Tab 3</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-4\">Tab 4</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-5\">Tab 5</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-6\">Tab 6</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-7\">Tab 7</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-8\">Tab 8</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-9\">Tab 9</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-10\">Tab 10</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-11\">Tab 11</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-12\">Tab 12</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-13\">Tab 13</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-14\">Tab 14</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-15\">Tab 15</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-16\">Tab 16</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-17\">Tab 17</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-18\">Tab 18</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-19\">Tab 19</pc-tab> <pc-tab slot=\"navigation\" panel=\"tab-20\">Tab 20</pc-tab> <pc-tab-panel name=\"tab-1\">Tab panel 1</pc-tab-panel> <pc-tab-panel name=\"tab-2\">Tab panel 2</pc-tab-panel> <pc-tab-panel name=\"tab-3\">Tab panel 3</pc-tab-panel> <pc-tab-panel name=\"tab-4\">Tab panel 4</pc-tab-panel> <pc-tab-panel name=\"tab-5\">Tab panel 5</pc-tab-panel> <pc-tab-panel name=\"tab-6\">Tab panel 6</pc-tab-panel> <pc-tab-panel name=\"tab-7\">Tab panel 7</pc-tab-panel> <pc-tab-panel name=\"tab-8\">Tab panel 8</pc-tab-panel> <pc-tab-panel name=\"tab-9\">Tab panel 9</pc-tab-panel> <pc-tab-panel name=\"tab-10\">Tab panel 10</pc-tab-panel> <pc-tab-panel name=\"tab-11\">Tab panel 11</pc-tab-panel> <pc-tab-panel name=\"tab-12\">Tab panel 12</pc-tab-panel> <pc-tab-panel name=\"tab-13\">Tab panel 13</pc-tab-panel> <pc-tab-panel name=\"tab-14\">Tab panel 14</pc-tab-panel> <pc-tab-panel name=\"tab-15\">Tab panel 15</pc-tab-panel> <pc-tab-panel name=\"tab-16\">Tab panel 16</pc-tab-panel> <pc-tab-panel name=\"tab-17\">Tab panel 17</pc-tab-panel> <pc-tab-panel name=\"tab-18\">Tab panel 18</pc-tab-panel> <pc-tab-panel name=\"tab-19\">Tab panel 19</pc-tab-panel> <pc-tab-panel name=\"tab-20\">Tab panel 20</pc-tab-panel> </pc-tab-group> `, }"
        },
        {
          "kind": "variable",
          "name": "ManualActivation",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { activation: \"manual\", fixedScrollControls: false, noScrollControls: false, placement: \"top\", }, render: ({ activation, fixedScrollControls, noScrollControls, placement, }) => html` <pc-tab-group activation=${activation} ?fixed-scroll-controls=${fixedScrollControls} ?no-scroll-controls=${noScrollControls} placement=${placement} > <pc-tab slot=\"navigation\" panel=\"general\">General</pc-tab> <pc-tab slot=\"navigation\" panel=\"custom\">Custom</pc-tab> <pc-tab slot=\"navigation\" panel=\"advanced\">Advanced</pc-tab> <pc-tab slot=\"navigation\" panel=\"disabled\" disabled=\"\"> Disabled </pc-tab> <pc-tab-panel name=\"general\"> This is the general tab panel. </pc-tab-panel> <pc-tab-panel name=\"custom\"> This is the custom tab panel. </pc-tab-panel> <pc-tab-panel name=\"advanced\"> This is the advanced tab panel. </pc-tab-panel> <pc-tab-panel name=\"disabled\"> This is a disabled tab panel. </pc-tab-panel> </pc-tab-group> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Bottom",
          "declaration": {
            "name": "Bottom",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Start",
          "declaration": {
            "name": "Start",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "End",
          "declaration": {
            "name": "End",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Closable",
          "declaration": {
            "name": "Closable",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Scrollable",
          "declaration": {
            "name": "Scrollable",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "FixedScrollControls",
          "declaration": {
            "name": "FixedScrollControls",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ManualActivation",
          "declaration": {
            "name": "ManualActivation",
            "module": "src/components/tab-group/TabGroup.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-panel/tab-panel.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcTabPanel",
          "members": [
            {
              "kind": "field",
              "name": "attributeID",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "++id"
            },
            {
              "kind": "field",
              "name": "componentID",
              "privacy": "private",
              "readonly": true,
              "default": "`pc-tab-panel-${this.attributeID}`"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleActiveChange"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabPanel",
          "declaration": {
            "name": "PcTabPanel",
            "module": "src/components/tab-panel/tab-panel.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-tab-panel",
          "declaration": {
            "name": "PcTabPanel",
            "module": "src/components/tab-panel/tab-panel.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-panel/tab-panel.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { display: none; } :host([active]) { display: block; } .tab-panel { display: block; padding: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/tab-panel/tab-panel.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-panel/tab-panel.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./tab-panel.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTabPanel",
            "module": "src/components/tab-panel/tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tab-panel/TabPanel.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Tab Panel\", component: \"pc-tab-panel\", argTypes: { active: { control: \"boolean\" }, content: { control: \"text\" }, name: { control: \"text\" }, }, args: { active: false, content: \"Tab Panel\", name: \"tab\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ active, content, name }) => html` <pc-tab-panel ?active=${active} name=${name}>${content}</pc-tab-panel> `, }"
        },
        {
          "kind": "variable",
          "name": "Active",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { active: true, content: \"Active tab panel\", name: \"tab-active\", }, render: ({ active, content, name }) => html` <pc-tab-panel ?active=${active} name=${name}>${content}</pc-tab-panel> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/tab-panel/TabPanel.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/tab-panel/TabPanel.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Active",
          "declaration": {
            "name": "Active",
            "module": "src/components/tab-panel/TabPanel.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tooltip/tooltip.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcTooltip",
          "members": [
            {
              "kind": "field",
              "name": "dependencies",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ \"pc-popup\": PcPopup }"
            },
            {
              "kind": "field",
              "name": "hoverTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closeWatcher",
              "type": {
                "text": "any | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "body",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "popup",
              "type": {
                "text": "PcPopup"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "8",
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hoist"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "| \"top\"\n        | \"top-start\"\n        | \"top-end\"\n        | \"right\"\n        | \"right-start\"\n        | \"right-end\"\n        | \"bottom\"\n        | \"bottom-start\"\n        | \"bottom-end\"\n        | \"left\"\n        | \"left-start\"\n        | \"left-end\""
              },
              "default": "\"top\"",
              "attribute": "placement"
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "skidding"
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "string"
              },
              "default": "\"hover focus\"",
              "attribute": "trigger"
            },
            {
              "kind": "field",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleDocumentKeyDown",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMouseOver",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMouseOut",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasTrigger",
              "privacy": "private",
              "parameters": [
                {
                  "name": "triggerType",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpenChange"
            },
            {
              "kind": "method",
              "name": "handleOptionsChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "hide"
            }
          ],
          "attributes": [
            {
              "name": "content",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "content"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "8",
              "fieldName": "distance"
            },
            {
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hoist"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "placement",
              "type": {
                "text": "| \"top\"\n        | \"top-start\"\n        | \"top-end\"\n        | \"right\"\n        | \"right-start\"\n        | \"right-end\"\n        | \"bottom\"\n        | \"bottom-start\"\n        | \"bottom-end\"\n        | \"left\"\n        | \"left-start\"\n        | \"left-end\""
              },
              "default": "\"top\"",
              "fieldName": "placement"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "skidding"
            },
            {
              "name": "trigger",
              "type": {
                "text": "string"
              },
              "default": "\"hover focus\"",
              "fieldName": "trigger"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTooltip",
          "declaration": {
            "name": "PcTooltip",
            "module": "src/components/tooltip/tooltip.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-tooltip",
          "declaration": {
            "name": "PcTooltip",
            "module": "src/components/tooltip/tooltip.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tooltip/Tooltip.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Tooltip\", component: \"pc-tooltip\", argTypes: { content: { control: \"text\", description: \"This contains the tooltip’s content. If you need to display HTML in it, use the `content` slot instead.\", }, disabled: { control: \"boolean\", description: \"This disables the tooltip.\", }, distance: { control: \"number\", description: \"Controls the distance in pixels from which to offset the tooltip away from its target.\", }, hoist: { control: \"boolean\", description: \"This prevents the tooltip from being clipped when the component is placed inside a container with overflow set to auto, hidden or scroll. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.\", }, open: { control: \"boolean\", description: \"Indicates whether or not the tooltip is open. You can use this with the show and hide methods.\", }, placement: { control: \"select\", options: [ \"top\", \"top-start\", \"top-end\", \"right\", \"right-start\", \"right-end\", \"bottom\", \"bottom-start\", \"bottom-end\", \"left\", \"left-start\", \"left-end\", ], description: \"Control the placement of the tooltip.\", }, skidding: { control: \"number\", description: \"Controls the distance in pixels from which to offset the tooltip along its target.\", }, trigger: { control: \"text\" }, }, args: { content: \"This is a tooltip\", disabled: false, distance: 8, hoist: false, open: false, placement: \"top\", skidding: 0, trigger: \"hover focus\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-tooltip content=${content} ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} > <pc-button>Hover me</pc-button> </pc-tooltip> `, }"
        },
        {
          "kind": "variable",
          "name": "Placement",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <div class=\"tooltip-placement-example\"> <div class=\"tooltip-placement-example-row\"> <pc-tooltip content=\"top-start\" placement=\"top-start\"> <pc-button></pc-button> </pc-tooltip> <pc-tooltip content=\"top\" placement=\"top\"> <pc-button> <pc-icon library=\"default\" icon-style=\"solid\" name=\"arrow-up\" ></pc-icon> </pc-button> </pc-tooltip> <pc-tooltip content=\"top-end\" placement=\"top-end\"> <pc-button></pc-button> </pc-tooltip> </div> <div class=\"tooltip-placement-example-row\"> <pc-tooltip content=\"left-start\" placement=\"left-start\"> <pc-button></pc-button> </pc-tooltip> <pc-tooltip content=\"right-start\" placement=\"right-start\"> <pc-button></pc-button> </pc-tooltip> </div> <div class=\"tooltip-placement-example-row\"> <pc-tooltip content=\"left\" placement=\"left\"> <pc-button> <pc-icon library=\"default\" icon-style=\"solid\" name=\"arrow-left\" ></pc-icon> </pc-button> </pc-tooltip> <pc-tooltip content=\"right\" placement=\"right\"> <pc-button> <pc-icon library=\"default\" icon-style=\"solid\" name=\"arrow-right\" ></pc-icon> </pc-button> </pc-tooltip> </div> <div class=\"tooltip-placement-example-row\"> <pc-tooltip content=\"left-end\" placement=\"left-end\"> <pc-button></pc-button> </pc-tooltip> <pc-tooltip content=\"right-end\" placement=\"right-end\"> <pc-button></pc-button> </pc-tooltip> </div> <div class=\"tooltip-placement-example-row\"> <pc-tooltip content=\"bottom-start\" placement=\"bottom-start\"> <pc-button></pc-button> </pc-tooltip> <pc-tooltip content=\"bottom\" placement=\"bottom\"> <pc-button> <pc-icon library=\"default\" icon-style=\"solid\" name=\"arrow-down\" ></pc-icon> </pc-button> </pc-tooltip> <pc-tooltip content=\"bottom-end\" placement=\"bottom-end\"> <pc-button></pc-button> </pc-tooltip> </div> </div> <style> .tooltip-placement-example { width: 300px; margin: 1.5rem 1rem 1rem 4.5rem; } .tooltip-placement-example-row::after { content: \"\"; display: table; clear: both; } .tooltip-placement-example pc-button { float: left; width: 2.5rem; height: 2.5rem; margin-right: 0.25rem; } .tooltip-placement-example-row:nth-child(1) pc-tooltip:first-child pc-button, .tooltip-placement-example-row:nth-child(5) pc-tooltip:first-child pc-button { margin-left: calc(40px + 0.25rem); } .tooltip-placement-example-row:nth-child(2) pc-tooltip:nth-child(2) pc-button, .tooltip-placement-example-row:nth-child(3) pc-tooltip:nth-child(2) pc-button, .tooltip-placement-example-row:nth-child(4) pc-tooltip:nth-child(2) pc-button { margin-left: calc((40px * 3) + (0.25rem * 3)); } </style> `, }"
        },
        {
          "kind": "variable",
          "name": "ClickTrigger",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { content: \"Click again to dismiss\", disabled: false, distance: 8, hoist: false, open: false, placement: \"top\", skidding: 0, trigger: \"click\", }, render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-tooltip content=${content} ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} > <pc-button>Hover me</pc-button> </pc-tooltip> `, }"
        },
        {
          "kind": "variable",
          "name": "ManualTrigger",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { content: \"This is an avatar\", disabled: false, distance: 8, hoist: false, open: false, placement: \"top\", skidding: 0, trigger: \"manual\", }, render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-button style=\"margin-right: 4rem\">Click me</pc-button> <pc-tooltip class=\"manual-tooltip\" content=${content} ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} > <pc-avatar label=\"User avatar\"></pc-avatar> </pc-tooltip> <script> const tooltip = document.querySelector(\".manual-tooltip\"); const toggle = tooltip.previousElementSibling; toggle.addEventListener( \"click\", () => (tooltip.open = !tooltip.open), ); </script> `, }"
        },
        {
          "kind": "variable",
          "name": "NoArrow",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-tooltip content=${content} ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} style=\"--pc-tooltip-arrow-size: 0\" > <pc-button>No arrow</pc-button> </pc-tooltip> `, }"
        },
        {
          "kind": "variable",
          "name": "WithHTML",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { content: \"I’m not <strong>just</strong> a tooltip, I’m a <em>tooltip</em> with HTML!\", disabled: false, distance: 8, hoist: false, open: false, placement: \"top\", skidding: 0, trigger: \"hover focus\", }, render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-tooltip ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} > <div slot=\"content\">${unsafeHTML(content)}</div> <pc-button>Hover me</pc-button> </pc-tooltip> `, }"
        },
        {
          "kind": "variable",
          "name": "MaximumWidth",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { content: \"This tooltip will wrap only after 80 pixels.\", disabled: false, distance: 8, hoist: false, open: false, placement: \"top\", skidding: 0, trigger: \"hover focus\", }, render: ({ content, disabled, distance, hoist, open, placement, skidding, trigger, }) => html` <pc-tooltip content=${content} ?disabled=${disabled} distance=${distance} ?hoist=${hoist} ?open=${open} placement=${placement} skidding=${skidding} trigger=${trigger} style=\"--max-width: 80px\" > <pc-button>Hover me</pc-button> </pc-tooltip> `, }"
        },
        {
          "kind": "variable",
          "name": "Hoist",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <div class=\"tooltip-hoist\"> <pc-tooltip content=\"This is a tooltip\"> <pc-button>No hoist</pc-button> </pc-tooltip> <pc-tooltip content=\"This is a tooltip\" hoist=\"\"> <pc-button>Hoist</pc-button> </pc-tooltip> </div> <style> .tooltip-hoist { position: relative; padding: var(--pc-spacing-m); border: 2px solid var(--pc-panel-border-color); border-radius: var(--pc-border-radius-m); overflow: hidden; } </style> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Placement",
          "declaration": {
            "name": "Placement",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClickTrigger",
          "declaration": {
            "name": "ClickTrigger",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ManualTrigger",
          "declaration": {
            "name": "ManualTrigger",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoArrow",
          "declaration": {
            "name": "NoArrow",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithHTML",
          "declaration": {
            "name": "WithHTML",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MaximumWidth",
          "declaration": {
            "name": "MaximumWidth",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Hoist",
          "declaration": {
            "name": "Hoist",
            "module": "src/components/tooltip/Tooltip.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tooltip/tooltip.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host { --max-width: 20rem; --hide-delay: 0s; --show-delay: 0.15s; display: contents; } .tooltip { --arrow-size: var(--pc-tooltip-arrow-size); --arrow-color: var(--pc-tooltip-background-color); box-shadow: var(--pc-shadow-xs); } .tooltip::part(popup) { z-index: var(--pc-z-index-tooltip); } .tooltip[placement^=\"top\"]::part(popup) { transform-origin: bottom; } .tooltip[placement^=\"bottom\"]::part(popup) { transform-origin: top; } .tooltip[placement^=\"left\"]::part(popup) { transform-origin: right; } .tooltip[placement^=\"right\"]::part(popup) { transform-origin: left; } .tooltip-body { display: block; width: max-content; max-width: var(--max-width); border-radius: var(--pc-tooltip-border-radius); background-color: var(--pc-tooltip-background-color); font-family: var(--pc-tooltip-font-family); font-size: var(--pc-tooltip-font-size); font-weight: var(--pc-tooltip-font-weight); line-height: var(--pc-tooltip-line-height); text-align: start; white-space: normal; color: var(--pc-tooltip-color); padding: var(--pc-tooltip-padding); pointer-events: none; user-select: none; -webkit-user-select: none; box-shadow: var(--pc-shadow-xs); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/tooltip/tooltip.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/tooltip/tooltip.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./tooltip.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTooltip",
            "module": "src/components/tooltip/tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/visually-hidden/visually-hidden.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PcVisuallyHidden",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pc-visually-hidden",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcVisuallyHidden",
          "declaration": {
            "name": "PcVisuallyHidden",
            "module": "src/components/visually-hidden/visually-hidden.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pc-visually-hidden",
          "declaration": {
            "name": "PcVisuallyHidden",
            "module": "src/components/visually-hidden/visually-hidden.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/visually-hidden/visually-hidden.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css` :host(:not(:focus-within)) { position: absolute !important; margin: -1px !important; padding: 0 !important; width: 1px !important; height: 1px !important; clip-path: inset(50%) !important; border: none !important; overflow: hidden !important; white-space: nowrap !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/components/visually-hidden/visually-hidden.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/visually-hidden/visually-hidden.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./visually-hidden.component.js\""
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcVisuallyHidden",
            "module": "src/components/visually-hidden/visually-hidden.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/visually-hidden/VisuallyHidden.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: \"Components/Visually Hidden\", component: \"pc-visually-hidden\", argTypes: { content: { control: \"text\" }, visuallyHidden: { control: \"text\" }, }, args: { content: \"Link to example.com\", visuallyHidden: \"opens in a new window\", }, }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: ({ content, visuallyHidden }) => html` <a href=\"https://example.com/\" target=\"_blank\"> ${content} <pc-icon library=\"default\" icon-style=\"solid\" name=\"arrow-up-right-from-square\" style=\"font-size: 0.75rem; vertical-align: 0.25rem\" aria-hidden=\"true\" ></pc-icon> <pc-visually-hidden>${visuallyHidden}</pc-visually-hidden> </a> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/visually-hidden/VisuallyHidden.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/components/visually-hidden/VisuallyHidden.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/badge/badge.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcBadge",
          "default": "class PcBadge extends LitElement { constructor() { super(...arguments); this.appearance = \"primary\"; this.rounded = false; this.pulse = false; } render() { return html ` <span part=\"base\" class=${classMap({ \"appearance-primary\": this.appearance === \"primary\", \"appearance-success\": this.appearance === \"success\", \"appearance-neutral\": this.appearance === \"neutral\", \"appearance-warning\": this.appearance === \"warning\", \"appearance-danger\": this.appearance === \"danger\", \"rounded\": this.rounded === true, \"pulse\": this.pulse === true, })} role=\"status\" > <slot></slot> </span> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcBadge",
          "declaration": {
            "name": "PcBadge",
            "module": "dist/components/badge/badge.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/badge/badge.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcBadge",
          "default": "PcBadge$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcBadge",
          "declaration": {
            "name": "PcBadge$1",
            "module": "dist/components/badge/badge.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcBadge",
            "module": "dist/components/badge/badge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/badge/badge.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-flex; } span { padding: var(--pc-spacing-xs) var(--pc-spacing-s); font-family: var(--pc-font-sans); font-size: var(--pc-font-size-xs); font-weight: var(--pc-font-weight-bold); color: var(--pc-color-neutral-0); border: 1px solid transparent; border-radius: var(--pc-border-radius-pill); user-select: none; -webkit-user-select: none; cursor: inherit; transition: all var(--pc-transition-fast) ease-in-out; } span, span.appearance-primary { --pulse-color: var(--pc-color-primary-600); background-color: var(--pc-color-primary-500); border: 1px solid var(--pc-color-primary-400); } span.appearance-success { --pulse-color: var(--pc-color-success-600); background-color: var(--pc-color-success-500); border: 1px solid var(--pc-color-success-400); } span.appearance-neutral { --pulse-color: var(--pc-color-neutral-600); background-color: var(--pc-color-neutral-500); border: 1px solid var(--pc-color-neutral-400); } span.appearance-warning { --pulse-color: var(--pc-color-warning-600); background-color: var(--pc-color-warning-500); border: 1px solid var(--pc-color-warning-400); } span.appearance-danger { --pulse-color: var(--pc-color-danger-600); background-color: var(--pc-color-danger-500); border: 1px solid var(--pc-color-danger-400); } span.rounded { border-radius: var(--pc-border-radius-s); } span.pulse { animation: pulse 1.5s cubic-bezier(0, 0.55, 0.45, 1) infinite; } @keyframes pulse { 0% { box-shadow: 0 0 0 0 var(--pulse-color); } 70% { box-shadow: 0 0 0 0.5rem transparent; } 100% { box-shadow: 0 0 0 0 transparent; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/badge/badge.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/avatar/avatar.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcAvatar",
          "default": "class PcAvatar extends LitElement { constructor() { super(...arguments); this.hasError = false; this.image = \"\"; this.initials = \"\"; this.label = \"\"; this.loading = \"eager\"; this.shape = \"circle\"; } handleImageChange() { this.hasError = false; } handleImageLoadError() { this.hasError = true; emit(this, \"pc-error\"); } render() { const avatarWithImage = html ` <img class=\"image\" part=\"image\" src=${this.image} loading=${this.loading} alt=\"\" @error=${this.handleImageLoadError} /> `; let avatarWithoutImage = html ``; if (this.initials) { avatarWithoutImage = html ` <div class=\"initials\">${this.initials}</div> `; } else { avatarWithoutImage = html ` <div class=\"icon\" part=\"icon\" aria-hidden=\"true\"> <slot name=\"icon\"> <pc-icon library=\"default\" iconStyle=\"solid\" name=\"user\" ></pc-icon> </slot> </div> `; } return html ` <div part=\"base\" class=${classMap({ avatar: true, circle: this.shape === \"circle\", rounded: this.shape === \"rounded\", square: this.shape === \"square\", })} role=\"img\" aria-label=${this.label} > ${this.image && !this.hasError ? avatarWithImage : avatarWithoutImage} </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcAvatar",
          "declaration": {
            "name": "PcAvatar",
            "module": "dist/components/avatar/avatar.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/avatar/avatar.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcAvatar",
          "default": "PcAvatar$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcAvatar",
          "declaration": {
            "name": "PcAvatar$1",
            "module": "dist/components/avatar/avatar.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcAvatar",
            "module": "dist/components/avatar/avatar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/avatar/avatar.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { --size: 3rem; display: inline-block; } .avatar { display: inline-flex; position: relative; align-items: center; justify-content: center; width: var(--size); height: var(--size); background-color: var(--pc-color-neutral-500); color: var(--pc-color-neutral-0); font-family: var(--pc-font-sans); font-size: calc(var(--size) * 0.4); font-weight: var(--pc-font-weight-bold); user-select: none; -webkit-user-select: none; vertical-align: middle; transition: all var(--pc-transition-fast) ease-in-out; } .circle, .circle .image { border-radius: var(--pc-border-radius-circle); } .rounded, .rounded .image { border-radius: var(--pc-border-radius-m); } .square { border-radius: 0; } .icon { display: flex; position: absolute; align-items: center; justify-content: center; top: 0; left: 0; width: 100%; height: 100%; } .initials { line-height: 1; text-transform: uppercase; } .image { position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; overflow: hidden; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/avatar/avatar.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/button/button.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcButton",
          "default": "class PcButton extends LitElement { constructor() { super(...arguments); // @ts-expect-error this.formControlController = new FormControlController(this, { assumeInteractionOn: [\"click\"], }); this.hasSlotController = new HasSlotController(this, \"[default]\", \"prefix\", \"suffix\"); this.hasFocus = false; this.invalid = false; this.title = \"\"; this.appearance = \"default\"; this.disabled = false; this.href = \"\"; this.name = \"\"; this.outlined = false; this.pill = false; this.rel = \"noreferrer noopener\"; this.size = \"medium\"; this.type = \"button\"; this.value = \"\"; this.direction = \"ltr\"; } get validity() { if (this.isButton()) { return this.button.validity; } return validValidityState; } get validationMessage() { if (this.isButton()) { return this.button.validationMessage; } return \"\"; } firstUpdated() { if (this.isButton()) { this.formControlController.updateValidity(); } } connectedCallback() { super.connectedCallback(); this.updateDirection(); } updateDirection() { const dir = document.documentElement.getAttribute(\"dir\"); this.direction = dir === \"rtl\" ? \"rtl\" : \"ltr\"; } handleBlur() { this.hasFocus = false; emit(this, \"pc-blur\"); } handleFocus() { this.hasFocus = true; emit(this, \"pc-focus\"); } handleClick() { if (this.type === \"submit\") { this.formControlController.submit(this.button); } if (this.type === \"reset\") { this.formControlController.reset(this.button); } } handleInvalid(event) { this.formControlController.setValidity(false); this.formControlController.emitInvalidEvent(event); } isButton() { return this.href ? false : true; } isLink() { return this.href ? true : false; } handleDisabledChange() { if (this.isButton()) { this.formControlController.setValidity(this.disabled); } } click() { this.button.click(); } focus(options) { this.button.focus(options); } blur() { this.button.blur(); } checkValidity() { if (this.isButton()) { return this.button.checkValidity(); } return true; } getForm() { return this.formControlController.getForm(); } reportValidity() { if (this.isButton()) { return this.button.reportValidity(); } return true; } setCustomValidity(message) { if (this.isButton()) { this.button.setCustomValidity(message); this.formControlController.updateValidity(); } } render() { const isLink = this.isLink(); if (isLink) { return html ` <a part=\"base\" class=${classMap({ \"button\": true, \"appearance-default\": this.appearance === \"default\", \"appearance-primary\": this.appearance === \"primary\", \"appearance-success\": this.appearance === \"success\", \"appearance-warning\": this.appearance === \"warning\", \"appearance-danger\": this.appearance === \"danger\", \"appearance-text\": this.appearance === \"text\", \"focused\": this.hasFocus === true, \"outlined\": this.outlined === true, \"pill\": this.pill === true, \"size-small\": this.size === \"small\", \"size-medium\": this.size === \"medium\", \"size-large\": this.size === \"large\", \"has-label\": this.hasSlotController.test(\"[default]\"), \"has-prefix\": this.hasSlotController.test(\"prefix\"), \"has-suffix\": this.hasSlotController.test(\"suffix\"), \"is-rtl\": this.direction === \"rtl\", })} href=${ifDefined(!this.disabled ? this.href : undefined)} target=${ifDefined(this.target)} download=${ifDefined(this.download)} rel=${ifDefined(this.rel)} aria-disabled=${this.disabled ? \"true\" : \"false\"} tabindex=${this.disabled ? \"-1\" : \"0\"} @click=${this.handleClick} @focus=${this.handleFocus} @blur=${this.handleBlur} > <slot class=\"prefix\" name=\"prefix\" part=\"prefix\"></slot> <slot class=\"label\" part=\"label\"></slot> <slot class=\"suffix\" name=\"suffix\" part=\"suffix\"></slot> </a> `; } else { return html ` <button part=\"base\" class=${classMap({ \"button\": true, \"appearance-default\": this.appearance === \"default\", \"appearance-primary\": this.appearance === \"primary\", \"appearance-success\": this.appearance === \"success\", \"appearance-warning\": this.appearance === \"warning\", \"appearance-danger\": this.appearance === \"danger\", \"appearance-text\": this.appearance === \"text\", \"focused\": this.hasFocus === true, \"outlined\": this.outlined === true, \"pill\": this.pill === true, \"size-small\": this.size === \"small\", \"size-medium\": this.size === \"medium\", \"size-large\": this.size === \"large\", \"has-label\": this.hasSlotController.test(\"[default]\"), \"has-prefix\": this.hasSlotController.test(\"prefix\"), \"has-suffix\": this.hasSlotController.test(\"suffix\"), })} ?disabled=${this.disabled} type=${this.type} title=${this.title} name=${this.name} value=${this.value} role=\"button\" aria-disabled=${this.disabled ? \"true\" : \"false\"} tabindex=${this.disabled ? \"-1\" : \"0\"} @click=${this.handleClick} @focus=${this.handleFocus} @blur=${this.handleBlur} @invalid=${this.handleInvalid} > <slot class=\"prefix\" name=\"prefix\" part=\"prefix\"></slot> <slot class=\"label\" part=\"label\"></slot> <slot class=\"suffix\" name=\"suffix\" part=\"suffix\"></slot> </button> `; } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcButton",
          "declaration": {
            "name": "PcButton",
            "module": "dist/components/button/button.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/button/button.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcButton",
          "default": "PcButton$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcButton",
          "declaration": {
            "name": "PcButton$1",
            "module": "dist/components/button/button.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcButton",
            "module": "dist/components/button/button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/button/button.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { position: relative; display: inline-block; width: auto; cursor: pointer; } .button { display: inline-flex; align-items: stretch; justify-content: center; width: auto; max-width: 100%; height: auto; border: none; border-radius: var(--pc-border-radius-s); padding: 0; box-sizing: border-box; color: var(--pc-color-neutral-900); font-family: var(--pc-input-font-family); font-weight: var(--pc-font-weight-bold); vertical-align: middle; white-space: nowrap; user-select: none; -webkit-user-select: none; cursor: inherit; text-decoration: none; transition: all var(--pc-transition-fast) ease-in-out; text-align: center; } .button::-moz-focus-inner { border: 0; } .button:focus { outline: none; } .button:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .prefix, .suffix { display: flex; align-items: center; flex: 0 0 auto; pointer-events: none; } .label::slotted(pc-icon) { vertical-align: -2px; } .label { display: inline-block; transition: color var(--pc-transition-fast) ease-in-out; } .button[disabled], .button[aria-disabled=\"true\"] { opacity: 0.6; cursor: not-allowed; } .button[disabled] *, .button[aria-disabled=\"true\"] * { pointer-events: none; } .button, .button.appearance-default { background-color: var(--pc-color-neutral-200); border: var(--pc-input-border-width) solid var(--pc-color-neutral-100); } .button:hover:not(.button[disabled]), .button.appearance-default:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-300); border: var(--pc-input-border-width) solid var(--pc-color-neutral-200); } .button:hover:active:not(.button[disabled]), .button.appearance-default:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-100); border: var(--pc-input-border-width) solid var(--pc-color-neutral-100); color: var(--pc-color-neutral-800); } .button.appearance-primary { background-color: var(--pc-color-primary-200); border: var(--pc-input-border-width) solid var(--pc-color-primary-100); } .button.appearance-primary:hover:not(.button[disabled]) { background-color: var(--pc-color-primary-300); border: var(--pc-input-border-width) solid var(--pc-color-primary-200); } .button.appearance-primary:hover:active:not(.button[disabled]) { background-color: var(--pc-color-primary-100); border: var(--pc-input-border-width) solid var(--pc-color-primary-100); color: var(--pc-color-primary-800); } .button.appearance-success { background-color: var(--pc-color-success-200); border: var(--pc-input-border-width) solid var(--pc-color-success-100); } .button.appearance-success:hover:not(.button[disabled]) { background-color: var(--pc-color-success-300); border: var(--pc-input-border-width) solid var(--pc-color-success-200); } .button.appearance-success:hover:active:not(.button[disabled]) { background-color: var(--pc-color-success-100); border: var(--pc-input-border-width) solid var(--pc-color-success-100); color: var(--pc-color-success-800); } .button.appearance-warning { background-color: var(--pc-color-warning-200); border: var(--pc-input-border-width) solid var(--pc-color-warning-100); } .button.appearance-warning:hover:not(.button[disabled]) { background-color: var(--pc-color-warning-300); border: var(--pc-input-border-width) solid var(--pc-color-warning-200); } .button.appearance-warning:hover:active:not(.button[disabled]) { background-color: var(--pc-color-warning-100); border: var(--pc-input-border-width) solid var(--pc-color-warning-100); color: var(--pc-color-warning-800); } .button.appearance-danger { background-color: var(--pc-color-danger-200); border: var(--pc-input-border-width) solid var(--pc-color-danger-100); } .button.appearance-danger:hover:not(.button[disabled]) { background-color: var(--pc-color-danger-300); border: var(--pc-input-border-width) solid var(--pc-color-danger-200); } .button.appearance-danger:hover:active:not(.button[disabled]) { background-color: var(--pc-color-danger-100); border: var(--pc-input-border-width) solid var(--pc-color-danger-100); color: var(--pc-color-danger-800); } .button.appearance-text { background-color: transparent; border: 1px solid transparent; } .button.appearance-text:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-200); border: 1px solid var(--pc-color-neutral-200); color: var(--pc-color-sky-600); } .button.appearance-text:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-100); border: 1px solid var(--pc-color-neutral-100); color: var(--pc-color-sky-500); } .button.size-small.has-prefix { padding-inline-start: var(--pc-spacing-s); } .button.size-small.has-suffix { padding-inline-end: var(--pc-spacing-s); } .button.size-medium.has-prefix { padding-inline-start: var(--pc-spacing-m); } .button.size-medium.has-suffix { padding-inline-end: var(--pc-spacing-m); } .button.size-large.has-prefix { padding-inline-start: var(--pc-spacing-l); } .button.size-large.has-suffix { padding-inline-end: var(--pc-spacing-l); } .button.has-prefix.has-label .label { padding-left: var(--pc-spacing-s); } .button.has-suffix.has-label .label { padding-right: var(--pc-spacing-s); } .button.size-small.has-label .label { padding: 0 var(--pc-spacing-s); } .button.size-medium.has-label .label { padding: 0 var(--pc-spacing-m); } .button.size-large.has-label .label { padding: 0 var(--pc-spacing-l); } .button.has-prefix.has-label .label { padding-left: var(--pc-spacing-s); } .button.has-suffix.has-label .label { padding-right: var(--pc-spacing-s); } .button.size-small { font-size: var(--pc-button-font-size-s); line-height: calc( var(--pc-input-height-s) - var(--pc-input-border-width) * 2 ); } .button.size-medium { min-height: var(--pc-input-height-m); font-size: var(--pc-button-font-size-m); line-height: calc( var(--pc-input-height-m) - var(--pc-input-border-width) * 2 ); } .button.size-large { font-size: var(--pc-button-font-size-l); line-height: calc( var(--pc-input-height-l) - var(--pc-input-border-width) * 2 ); } .button.outlined, .button.outlined:hover, .button.outlined:hover:active { background: transparent !important; } .radio.outlined:not(.button[disabled]) { } .radio.outlined:hover:not(.button[disabled]) { background-color: var(--pc-color-neutral-100) !important; } .radio.outlined:hover:active:not(.button[disabled]) { background-color: var(--pc-color-neutral-50) !important; } .radio.outlined.checked:not(.button[disabled]) { background-color: var(--pc-color-primary-500) !important; border-color: var(--pc-color-primary-500); color: var(--pc-color-neutral-0); } .radio.outlined.checked:hover:not(.button[disabled]) { background-color: var(--pc-color-primary-600) !important; border-color: var(--pc-color-primary-600); } .radio.outlined.checked:hover:active:not(.button[disabled]) { background-color: var(--pc-color-primary-400) !important; border-color: var(--pc-color-primary-400); color: var(--pc-color-neutral-0); } .button.pill { border-radius: var(--pc-border-radius-pill); } :host( [data-pc-button-group-button-first]:not( [data-pc-button-group-button-last] ) ) .button { border-start-end-radius: 0; border-end-end-radius: 0; } :host([data-pc-button-group-button-inner]) .button { border-radius: 0; } :host( [data-pc-button-group-button-last]:not( [data-pc-button-group-button-first] ) ) .button { border-start-start-radius: 0; border-end-start-radius: 0; } :host( [data-pc-button-group-button]:not( [data-pc-button-group-button-first] ) ) { margin-inline-start: calc(-1 * var(--pc-input-border-width)); } :host( [data-pc-button-group-button]:not( [data-pc-button-group-button-first], [data-pc-button-group-button-radio], [appearance=\"default\"] ):not(:hover) ) .button::after { content: \"\"; position: absolute; top: 0; inset-inline-start: 0; bottom: 0; border-left: 1px solid rgba(112, 120, 128, 0.33); mix-blend-mode: multiply; } :host([data-pc-button-group-button-hover]), :host([data-pc-button-group-button-focus]) { z-index: 1; } :host([data-pc-button-group-button][checked]) { z-index: 2; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/button/button.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon/icon.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcIcon",
          "default": "class PcIcon extends LitElement { constructor() { super(...arguments); this.initialRender = false; this.svg = null; this.label = \"\"; this.library = \"default\"; } async resolveIcon(url, library) { let fileData; if (library?.spriteSheet) { this.svg = html ` <svg part=\"svg\"> <use part=\"use\" href=\"${url}\"></use> </svg> `; return this.svg; } try { fileData = await fetch(url, { mode: \"cors\" }); if (!fileData.ok) { return fileData.status === 410 ? CACHEABLE_ERROR : RETRYABLE_ERROR; } } catch { return RETRYABLE_ERROR; } try { const div = document.createElement(\"div\"); div.innerHTML = await fileData.text(); const svg = div.firstElementChild; if (svg?.tagName?.toLowerCase() !== \"svg\") { return CACHEABLE_ERROR; } if (!parser) { parser = new DOMParser(); } const doc = parser.parseFromString(svg.outerHTML, \"text/html\"); const svgElement = doc.body.querySelector(\"svg\"); if (!svgElement) { return CACHEABLE_ERROR; } svgElement.part.add(\"svg\"); return document.adoptNode(svgElement); } catch { return CACHEABLE_ERROR; } } connectedCallback() { super.connectedCallback(); watchIcon(this); } firstUpdated() { this.initialRender = true; this.setIcon(); } disconnectedCallback() { super.disconnectedCallback(); unwatchIcon(this); } getIconSource() { const library = getIconLibrary(this.library); if (this.name && library) { return { url: library.resolver(this.name, this.iconStyle), fromLibrary: true, }; } return { url: this.src, fromLibrary: false, }; } handleLabelChange() { const hasLabel = typeof this.label === \"string\" && this.label.length > 0; if (hasLabel) { this.setAttribute(\"role\", \"img\"); this.setAttribute(\"aria-label\", this.label); this.removeAttribute(\"aria-hidden\"); } else { this.removeAttribute(\"role\"); this.removeAttribute(\"aria-label\"); this.setAttribute(\"aria-hidden\", \"true\"); } } async setIcon() { const { url, fromLibrary } = this.getIconSource(); const library = fromLibrary ? getIconLibrary(this.library) : undefined; if (!url) { this.svg = null; return; } let iconResolver = iconCache.get(url); if (!iconResolver) { iconResolver = this.resolveIcon(url, library); iconCache.set(url, iconResolver); } if (!this.initialRender) { return; } const svg = await iconResolver; if (svg === RETRYABLE_ERROR) { iconCache.delete(url); } if (url !== this.getIconSource().url) { return; } if (isTemplateResult(svg)) { this.svg = svg; if (library) { await this.updateComplete; const shadowSVG = this.shadowRoot.querySelector(\"[part='svg']\"); if (typeof library.mutator === \"function\" && shadowSVG) { library.mutator(shadowSVG); } } return; } switch (svg) { case RETRYABLE_ERROR: case CACHEABLE_ERROR: this.svg = null; emit(this, \"pc-error\"); break; default: this.svg = svg.cloneNode(true); library?.mutator?.(this.svg); emit(this, \"pc-load\"); } } render() { return this.svg; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIcon",
          "declaration": {
            "name": "PcIcon",
            "module": "dist/components/icon/icon.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon/icon.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcIcon",
          "default": "PcIcon$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIcon",
          "declaration": {
            "name": "PcIcon$1",
            "module": "dist/components/icon/icon.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcIcon",
            "module": "dist/components/icon/icon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon/icon.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-block; box-sizing: content-box !important; width: 1em; height: 1em; } svg { display: block; width: 100%; height: 100%; fill: currentColor; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/icon/icon.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon/library.default.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "library",
          "type": {
            "text": "object"
          },
          "default": "{ name: \"default\", resolver: (name, iconStyle = \"solid\") => { return `https://use.fontawesome.com/releases/v6.7.2/svgs/${iconStyle}/${name}.svg`; }, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "library",
            "module": "dist/components/icon/library.default.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon/library.js",
      "declarations": [
        {
          "kind": "function",
          "name": "watchIcon",
          "parameters": [
            {
              "name": "icon"
            }
          ]
        },
        {
          "kind": "function",
          "name": "unwatchIcon",
          "parameters": [
            {
              "name": "icon"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconLibrary",
          "parameters": [
            {
              "name": "name"
            }
          ]
        },
        {
          "kind": "function",
          "name": "registerIconLibrary",
          "parameters": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "kind": "function",
          "name": "unregisterIconLibrary",
          "parameters": [
            {
              "name": "name"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getIconLibrary",
          "declaration": {
            "name": "getIconLibrary",
            "module": "dist/components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "dist/components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "dist/components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unwatchIcon",
          "declaration": {
            "name": "unwatchIcon",
            "module": "dist/components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "watchIcon",
          "declaration": {
            "name": "watchIcon",
            "module": "dist/components/icon/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/card/card.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcCard",
          "default": "class PcCard extends LitElement { constructor() { super(...arguments); this.hasSlotController = new HasSlotController(this, \"image\", \"header\", \"footer\"); } render() { return html ` <div part=\"base\" class=${classMap({ \"card\": true, \"has-image\": this.hasSlotController.test(\"image\"), \"has-header\": this.hasSlotController.test(\"header\"), \"has-footer\": this.hasSlotController.test(\"footer\"), })} > <slot class=\"image\" name=\"image\" part=\"image\"></slot> <slot class=\"header\" name=\"header\" part=\"header\"></slot> <slot class=\"body\" part=\"body\"></slot> <slot class=\"footer\" name=\"footer\" part=\"footer\"></slot> </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCard",
          "declaration": {
            "name": "PcCard",
            "module": "dist/components/card/card.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/card/card.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcCard",
          "default": "PcCard$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCard",
          "declaration": {
            "name": "PcCard$1",
            "module": "dist/components/card/card.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcCard",
            "module": "dist/components/card/card.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/card/card.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { --border-color: var(--pc-color-neutral-200); --border-radius: var(--pc-border-radius-l); --border-width: 1px; --padding: var(--pc-spacing-l); display: inline-block; } .card { display: flex; flex-direction: column; background-color: var(--pc-panel-background-color); border: var(--border-width) solid var(--border-color); border-radius: var(--border-radius); box-shadow: var(--pc-shadow-l); } .image { display: flex; border-radius: var(--border-radius) var(--border-radius) 0 0; margin: calc(-1 * var(--border-width)); overflow: hidden; } .image::slotted(img) { display: block; width: 100%; } .card:not(.has-image) .image { display: none; } .header { display: block; border-bottom: var(--border-width) solid var(--border-color); padding: calc(var(--padding) / 2) var(--padding); } .card:not(.has-header) .header { display: none; } .body { display: block; padding: var(--padding); } .has-footer .footer { display: block; border-top: var(--border-width) solid var(--border-color); padding: var(--padding); } .card:not(.has-footer) .footer { display: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/card/card.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/checkbox/checkbox.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcCheckbox",
          "default": "class PcCheckbox extends LitElement { constructor() { super(...arguments); // @ts-expect-error this.formControlController = new FormControlController(this, { value: (control) => control.checked ? control.value || \"on\" : undefined, defaultValue: (control) => control.defaultChecked, setValue: (control, checked) => (control.checked = checked), }); this.hasSlotController = new HasSlotController(this, \"hint\"); this.hasFocus = false; this.isFadingOut = false; this.checked = false; this.defaultChecked = false; this.disabled = false; this.form = \"\"; this.hint = \"\"; this.indeterminate = false; this.invalid = false; this.name = \"\"; this.pressed = false; this.required = false; this.size = \"medium\"; this.title = \"\"; this.value = \"\"; } get validity() { return this.input.validity; } get validationMessage() { return this.input.validationMessage; } firstUpdated() { this.formControlController.updateValidity(); } handleClick() { if (!this.indeterminate) { if (this.checked) { this.isFadingOut = true; setTimeout(() => (this.isFadingOut = false), 150); } } this.checked = !this.checked; this.indeterminate = false; emit(this, \"pc-change\"); } handleFocus() { this.hasFocus = true; emit(this, \"pc-focus\"); } handleBlur() { this.hasFocus = false; emit(this, \"pc-blur\"); } handleInput() { emit(this, \"pc-input\"); } handleInvalid(event) { this.formControlController.setValidity(false); this.formControlController.emitInvalidEvent(event); } handleDisabledChange() { this.formControlController.setValidity(this.disabled); } handleStateChange() { if (!this.indeterminate && this.checked) { this.isFadingOut = false; } this.input.checked = this.checked; this.input.indeterminate = this.indeterminate; this.formControlController.updateValidity(); } click() { this.input.click(); } focus(options) { this.input.focus(options); } blur() { this.input.blur(); } checkValidity() { return this.input.checkValidity(); } getForm() { return this.formControlController.getForm(); } reportValidity() { return this.input.reportValidity(); } setCustomValidity(message) { this.input.setCustomValidity(message); this.formControlController.updateValidity(); } render() { const hasHintSlot = this.hasSlotController.test(\"hint\"); const hasHint = this.hint ? true : !!hasHintSlot; return html ` <div class=${classMap({ \"size-small\": this.size === \"small\", \"size-medium\": this.size === \"medium\", \"size-large\": this.size === \"large\", })} > <label part=\"base\" class=${classMap({ \"checkbox\": true, \"size-small\": this.size === \"small\", \"size-medium\": this.size === \"medium\", \"size-large\": this.size === \"large\", \"has-focus\": this.hasFocus, \"is-invalid\": this.invalid, \"is-disabled\": this.disabled, \"is-checked\": this.checked && !this.isFadingOut, \"is-indeterminate\": this.indeterminate, })} > <input class=\"checkbox-input\" type=\"checkbox\" title=${this.title} name=${this.name} value=${ifDefined(this.value)} .indeterminate=${live(this.indeterminate)} .checked=${live(this.checked)} .disabled=${this.disabled} .required=${this.required} aria-checked=${this.checked ? \"true\" : \"false\"} aria-describedby=${this.hint ? \"hint-text\" : nothing} @click=${this.handleClick} @input=${this.handleInput} @focus=${this.handleFocus} @blur=${this.handleBlur} @invalid=${this.handleInvalid} /> <span part=\"control ${this.checked ? \"checkbox-checked\" : \"\"} ${this.indeterminate ? \"checkbox-indeterminate\" : \"\"}\" class=${classMap({ \"checkbox-control\": true, \"fade-in\": this.checked && !this.isFadingOut, \"fade-out\": this.isFadingOut, })} > ${this.checked || this.isFadingOut ? html ` <pc-icon library=\"default\" family=\"solid\" name=\"check\" part=\"icon-checked\" ></pc-icon> ` : \"\"} ${this.indeterminate ? html ` <pc-icon library=\"default\" family=\"solid\" name=\"minus\" part=\"icon-indeterminate\" ></pc-icon> ` : \"\"} </span> <div class=\"label\" part=\"label\"> <slot></slot> </div> </label> <div class=\"hint\" part=\"hint\" id=\"hint-text\" aria-hidden=${hasHint ? \"false\" : \"true\"} > <slot name=\"hint\">${this.hint}</slot> </div> </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCheckbox",
          "declaration": {
            "name": "PcCheckbox",
            "module": "dist/components/checkbox/checkbox.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/checkbox/checkbox.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcCheckbox",
          "default": "PcCheckbox$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcCheckbox",
          "declaration": {
            "name": "PcCheckbox$1",
            "module": "dist/components/checkbox/checkbox.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcCheckbox",
            "module": "dist/components/checkbox/checkbox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/checkbox/checkbox.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-block; } .checkbox { display: inline-flex; align-items: flex-start; position: relative; font-family: var(--pc-input-font-family); font-weight: var(--pc-input-font-weight); color: var(--pc-input-label-color); vertical-align: middle; cursor: pointer; } .size-small { --toggle-size: var(--pc-toggle-size-s); font-size: var(--pc-input-font-size-s); } .size-medium { --toggle-size: var(--pc-toggle-size-m); font-size: var(--pc-input-font-size-m); } .size-large { --toggle-size: var(--pc-toggle-size-l); font-size: var(--pc-input-font-size-l); } .checkbox-control { display: inline-flex; align-items: center; justify-content: center; flex: 0 0 auto; position: relative; width: var(--toggle-size); height: var(--toggle-size); border: var(--pc-input-border-width) solid var(--pc-input-border-color); border-radius: var(--pc-input-border-radius-s); background-color: transparent; color: var(--pc-color-neutral-0); transition: all var(--pc-transition-fast) ease-in-out; } .checkbox-control pc-icon { opacity: 0; visibility: hidden; transition: opacity var(--pc-transition-fast) ease-in-out, visibility var(--pc-transition-fast) ease-in-out; } .is-checked .checkbox-control pc-icon, .is-indeterminate .checkbox-control pc-icon { opacity: 1; visibility: visible; } .is-checked:not(.is-fading-out) .checkbox-control pc-icon { opacity: 1; visibility: visible; } .is-fading-out .checkbox-control pc-icon { opacity: 0; visibility: hidden; } .checkbox-input { position: absolute; margin: 0; padding: 0; opacity: 0; pointer-events: none; } pc-icon { display: inline-flex; width: calc(var(--toggle-size) / 1.25); height: calc(var(--toggle-size) / 1.25); transition: all var(--pc-transition-fast) ease-in-out; } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-control:hover { border-color: var(--pc-input-border-color-hover); } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-control:hover:active { border-color: var(--pc-input-border-color-active); } .checkbox:not(.is-checked):not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .is-checked .checkbox-control, .is-indeterminate .checkbox-control { border-color: var(--pc-color-primary-500); background-color: var(--pc-color-primary-500); } .checkbox.is-checked:not(.is-disabled) .checkbox-control:hover, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-control:hover { border-color: var(--pc-color-primary-600); background-color: var(--pc-color-primary-600); } .checkbox.is-checked:not(.is-disabled) .checkbox-control:hover:active, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-control:hover:active { border-color: var(--pc-color-primary-400); background-color: var(--pc-color-primary-400); } .checkbox.is-checked:not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control, .checkbox.is-indeterminate:not(.is-disabled) .checkbox-input:focus-visible ~ .checkbox-control { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .is-disabled { opacity: 0.6; cursor: not-allowed; } .label { display: inline-block; color: var(--pc-input-label-color); line-height: var(--toggle-size); margin-inline-start: var(--pc-spacing-s); user-select: none; -webkit-user-select: none; transition: color var(--pc-transition-fast) ease-in-out; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margn-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/checkbox/checkbox.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon-button/icon-button.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcIconButton",
          "default": "class PcIconButton extends LitElement { constructor() { super(...arguments); this.hasFocus = false; this.disabled = false; this.label = \"\"; } handleClick(event) { if (this.disabled) { event.preventDefault(); event.stopPropagation(); } } handleFocus() { this.hasFocus = true; emit(this, \"pc-focus\"); } handleBlur() { this.hasFocus = false; emit(this, \"pc-blur\"); } click() { this.button.click(); } focus(options) { this.button.focus(options); } blur() { this.button.blur(); } render() { const isLink = this.href ? true : false; return html ` ${isLink ? html ` <a part=\"base\" class=${classMap({ \"icon-button\": true, \"icon-button-disabled\": false, \"icon-button-focused\": this.hasFocus, })} href=${ifDefined(this.href)} target=${ifDefined(this.target)} download=${ifDefined(this.download)} rel=${ifDefined(this.target ? \"noreferrer noopener\" : undefined)} aria-label=${this.label} tabindex=${this.disabled ? \"-1\" : \"0\"} @click=${this.handleClick} @focus=${this.handleFocus} @blur=${this.handleBlur} > <pc-icon class=\"icon\" library=${ifDefined(this.library)} iconStyle=${ifDefined(this.iconStyle)} name=${ifDefined(this.name)} src=${ifDefined(this.src)} aria-hidden=\"true\" ></pc-icon> </a> ` : html ` <button part=\"base\" class=${classMap({ \"icon-button\": true, \"icon-button-disabled\": this.disabled === true, \"icon-button-focused\": this.hasFocus === true, })} type=\"button\" ?disabled=${this.disabled} aria-label=${this.label} aria-disabled=${this.disabled ? \"true\" : \"false\"} tabindex=${this.disabled ? \"-1\" : \"0\"} @click=${this.handleClick} @focus=${this.handleFocus} @blur=${this.handleBlur} > <pc-icon class=\"icon\" library=${ifDefined(this.library)} iconStyle=${ifDefined(this.iconStyle)} name=${ifDefined(this.name)} src=${ifDefined(this.src)} aria-hidden=\"true\" ></pc-icon> </button> `} `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIconButton",
          "declaration": {
            "name": "PcIconButton",
            "module": "dist/components/icon-button/icon-button.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon-button/icon-button.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcIconButton",
          "default": "PcIconButton$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcIconButton",
          "declaration": {
            "name": "PcIconButton$1",
            "module": "dist/components/icon-button/icon-button.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcIconButton",
            "module": "dist/components/icon-button/icon-button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/icon-button/icon-button.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-flex; color: var(--pc-color-neutral-600); } .icon-button { display: flex; align-items: center; flex: 0 0 auto; background: none; border: none; border-radius: var(--pc-border-radius-m); font-size: inherit; color: inherit; padding: var(--pc-spacing-xs); cursor: pointer; -webkit-appearance: none; transition: all var(--pc-transition-fast) ease-in-out; } .icon-button:hover:not(.icon-button-disabled), .icon-button:focus-visible:not(.icon-button-disabled) { color: var(--pc-color-primary-600); } .icon-button:hover:active:not(.icon-button-disabled) { color: var(--pc-color-primary-500); } .icon-button:focus { outline: none; } .icon-button-disabled { opacity: 0.6; cursor: not-allowed; } .icon-button:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .icon { pointer-events: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/icon-button/icon-button.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/qr-code/qr-code.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcQrCode",
          "default": "class PcQrCode extends LitElement { constructor() { super(...arguments); this.background = \"white\"; this.errorCorrection = \"M\"; this.fill = \"black\"; this.label = \"\"; this.radius = 0; this.size = 128; this.value = \"\"; } firstUpdated() { this.generate(); } generate() { if (!this.hasUpdated) { return; } QrCreator.render({ background: this.background, ecLevel: this.errorCorrection, fill: this.fill, radius: this.radius, size: this.size * 2, text: this.value, }, this.canvas); } render() { return html ` <canvas class=\"qr-code\" part=\"base\" role=\"img\" style=${styleMap({ width: `${this.size}px`, height: `${this.size}px`, })} aria-label=${this.label?.length > 0 ? this.label : this.value} ></canvas> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcQrCode",
          "declaration": {
            "name": "PcQrCode",
            "module": "dist/components/qr-code/qr-code.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/qr-code/qr-code.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcQrCode",
          "default": "PcQrCode$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcQrCode",
          "declaration": {
            "name": "PcQrCode$1",
            "module": "dist/components/qr-code/qr-code.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcQrCode",
            "module": "dist/components/qr-code/qr-code.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/qr-code/qr-code.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-block; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/qr-code/qr-code.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/rating/rating.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcRating",
          "default": "class PcRating extends LitElement { constructor() { super(...arguments); this.hoverValue = 0; this.isHovering = false; this.disabled = false; this.label = \"\"; this.max = 5; this.precision = 1; this.readonly = false; this.value = 0; this.getIcon = () => ` <pc-icon library=\"default\" iconStyle=\"solid\" name=\"star\"></pc-icon> `; } getValueFromMousePosition(event) { return this.getValueFromXCoordinate(event.clientX); } getValueFromTouchPosition(event) { return this.getValueFromXCoordinate(event.touches[0].clientX); } getValueFromXCoordinate(coordinate) { const isRTL = document.documentElement.dir === \"rtl\"; const { left, right, width } = this.rating.getBoundingClientRect(); const value = isRTL ? this.roundToPrecision(((right - coordinate) / width) * this.max, this.precision) : this.roundToPrecision(((coordinate - left) / width) * this.max, this.precision); return clamp(value, 0, this.max); } handleClick(event) { if (this.disabled) { return; } this.setValue(this.getValueFromMousePosition(event)); emit(this, \"pc-change\"); } setValue(newValue) { if (this.disabled || this.readonly) { return; } this.value = newValue === this.value ? 0 : newValue; this.isHovering = false; } handleKeyDown(event) { const isLTR = !document.documentElement.hasAttribute(\"dir\") || document.documentElement.dir === \"ltr\"; const isRTL = document.documentElement.dir === \"rtl\"; const oldValue = this.value; if (this.disabled || this.readonly) { return; } if (event.key === \"ArrowDown\" || (isLTR && event.key === \"ArrowLeft\") || (isRTL && event.key === \"ArrowRight\")) { const decrement = event.shiftKey ? 1 : this.precision; this.value = Math.max(0, this.value - decrement); event.preventDefault(); } if (event.key === \"ArrowUp\" || (isLTR && event.key === \"ArrowRight\") || (isRTL && event.key === \"ArrowLeft\")) { const increment = event.shiftKey ? 1 : this.precision; this.value = Math.min(this.max, this.value + increment); event.preventDefault(); } if (event.key === \"Home\") { this.value = 0; event.preventDefault(); } if (event.key === \"End\") { this.value = this.max; event.preventDefault(); } if (this.value !== oldValue) { emit(this, \"pc-change\"); } } handleMouseEnter(event) { this.isHovering = true; this.hoverValue = this.getValueFromMousePosition(event); } handleMouseMove(event) { this.hoverValue = this.getValueFromMousePosition(event); } handleMouseLeave() { this.isHovering = false; } handleTouchStart(event) { this.isHovering = true; this.hoverValue = this.getValueFromTouchPosition(event); event.preventDefault(); } handleTouchMove(event) { this.hoverValue = this.getValueFromTouchPosition(event); } handleTouchEnd(event) { this.isHovering = false; this.setValue(this.hoverValue); emit(this, \"pc-change\"); event.preventDefault(); } roundToPrecision(numberToRound, precision = 0.5) { const multiplier = 1 / precision; return Math.ceil(numberToRound * multiplier) / multiplier; } handleHoverValueChange() { emit(this, \"pc-hover\", { detail: { phase: \"move\", value: this.hoverValue, }, }); } handleIsHoveringChange() { emit(this, \"pc-hover\", { detail: { phase: this.isHovering ? \"start\" : \"end\", value: this.hoverValue, }, }); } focus(options) { this.rating.focus(options); } blur() { this.rating.blur(); } render() { const isRTL = document.documentElement.dir === \"rtl\"; const counter = Array.from(Array(this.max).keys()); let displayValue = 0; if (this.disabled || this.readonly) { displayValue = this.value; } else { displayValue = this.isHovering ? this.hoverValue : this.value; } return html ` <div part=\"base\" class=${classMap({ \"rating\": true, \"rating-readonly\": this.readonly === true, \"rating-disabled\": this.disabled === true, \"rating-rtl\": isRTL === true, })} role=\"slider\" aria-label=${this.label} aria-disabled=${this.disabled ? \"true\" : \"false\"} aria-readonly=${this.readonly ? \"true\" : \"false\"} aria-valuenow=${this.value} aria-valuemin=${0} aria-valuemax=${this.max} tabindex=${this.disabled || this.readonly ? \"-1\" : \"0\"} @click=${this.handleClick} @keydown=${this.handleKeyDown} @mouseenter=${this.handleMouseEnter} @touchstart=${this.handleTouchStart} @mouseleave=${this.handleMouseLeave} @touchend=${this.handleTouchEnd} @mousemove=${this.handleMouseMove} @touchmove=${this.handleTouchMove} > <span class=\"rating-icons\"> ${counter.map((index) => { if (displayValue > index && displayValue < index + 1) { return html ` <span class=${classMap({ \"rating-icon\": true, \"rating-partial-icon-container\": true, \"rating-icon-hover\": this.isHovering && Math.ceil(displayValue) === index + 1, })} role=\"presentation\" > <div style=${styleMap({ clipPath: isRTL ? `inset(0 ${(displayValue - index) * 100}% 0 0)` : `inset(0 0 0 ${(displayValue - index) * 100}%)`, })} > ${unsafeHTML(this.getIcon(index + 1))} </div> <div class=\"rating-partial-filled\" style=${styleMap({ clipPath: isRTL ? `inset(0 0 0 ${100 - (displayValue - index) * 100}%)` : `inset(0 ${100 - (displayValue - index) * 100}% 0 0)`, })} > ${unsafeHTML(this.getIcon(index + 1))} </div> </span> `; } return html ` <span class=${classMap({ \"rating-icon\": true, \"rating-icon-hover\": this.isHovering && Math.ceil(displayValue) === index + 1, \"rating-icon-active\": displayValue >= index + 1, })} role=\"presentation\" > ${unsafeHTML(this.getIcon(index + 1))} </span> `; })} </span> </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRating",
          "declaration": {
            "name": "PcRating",
            "module": "dist/components/rating/rating.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/rating/rating.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcRating",
          "default": "PcRating$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcRating",
          "declaration": {
            "name": "PcRating$1",
            "module": "dist/components/rating/rating.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcRating",
            "module": "dist/components/rating/rating.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/rating/rating.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { --icon-color: var(--pc-color-neutral-300); --icon-color-active: var(--pc-color-amber-500); --icon-size: 1.2rem; display: inline-flex; } .rating { position: relative; display: inline-flex; border-radius: var(--pc-border-radius-m); vertical-align: middle; } .rating:focus { outline: none; } .rating:focus-visible { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .rating-icons { display: inline-flex; position: relative; font-size: var(--icon-size); line-height: 0; color: var(--icon-color); white-space: nowrap; cursor: pointer; } .rating-icons > * { padding: 0.0625rem; } .rating-icon-active, .rating-partial-filled { color: var(--icon-color-active); } .rating-partial-icon-container { position: relative; } .rating-partial-filled { position: absolute; top: 0.0625rem; left: 0.0625rem; } .rating-icon { pointer-events: none; transition: all var(--pc-transition-fast) ease-in-out; } .rating-icon pc-icon::part(svg) { overflow: visible; } .rating-icon-hover { scale: 1.15; } .rating-disabled .rating-icons, .rating-readonly .rating-icons { cursor: default; } .rating-disabled .rating-icon-hover, .rating-readonly .rating-icon-hover { scale: none; } .rating-disabled { opacity: 0.6; } .rating-disabled .rating-icons { cursor: not-allowed; } @media (forced-colors: active) { .rating-icon-active { color: SelectedItem; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/rating/rating.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/resize-observer/resize-observer.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcResizeObserver",
          "default": "class PcResizeObserver extends LitElement { constructor() { super(...arguments); this.observedElements = []; this.disabled = false; } connectedCallback() { super.connectedCallback(); this.resizeObserver = new ResizeObserver((entries) => { emit(this, \"pc-resize\", { detail: { entries }, }); }); if (!this.disabled) { this.startObserver(); } } disconnectedCallback() { super.disconnectedCallback(); this.stopObserver(); } handleSlotChange() { if (!this.disabled) { this.startObserver(); } } startObserver() { const slot = this.shadowRoot.querySelector(\"slot\"); if (slot !== null) { const elements = slot.assignedElements({ flatten: true, }); this.observedElements.forEach((element) => this.resizeObserver.unobserve(element)); this.observedElements = []; elements.forEach((element) => { this.resizeObserver.observe(element); this.observedElements.push(element); }); } } stopObserver() { this.resizeObserver.disconnect(); } handleDisabledChange() { if (this.disabled) { this.stopObserver(); } else { this.startObserver(); } } render() { return html `<slot @slotchange=${this.handleSlotChange}></slot>`; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcResizeObserver",
          "declaration": {
            "name": "PcResizeObserver",
            "module": "dist/components/resize-observer/resize-observer.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/resize-observer/resize-observer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcResizeObserver",
          "default": "PcResizeObserver$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcResizeObserver",
          "declaration": {
            "name": "PcResizeObserver$1",
            "module": "dist/components/resize-observer/resize-observer.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcResizeObserver",
            "module": "dist/components/resize-observer/resize-observer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/resize-observer/resize-observer.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: contents; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/resize-observer/resize-observer.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab/tab.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTab",
          "default": "class PcTab extends LitElement { constructor() { super(...arguments); this.attributeID = ++id; this.componentID = `pc-tab-${this.attributeID}`; this.active = false; this.closable = false; this.disabled = false; this.panel = \"\"; this.tabIndex = 0; } connectedCallback() { super.connectedCallback(); this.setAttribute(\"role\", \"tab\"); } handleCloseClick(event) { event.stopPropagation(); emit(this, \"pc-close\"); } handleActiveChange() { this.setAttribute(\"aria-selected\", this.active ? \"true\" : \"false\"); } handleDisabledChange() { this.setAttribute(\"aria-disabled\", this.disabled ? \"true\" : \"false\"); if (this.disabled && !this.active) { this.tabIndex = -1; } } render() { this.id = this.id.length > 0 ? this.id : this.componentID; return html ` <div part=\"base\" class=${classMap({ \"tab\": true, \"tab-active\": this.active === true, \"tab-closable\": this.closable === true, \"tab-disabled\": this.disabled === true, })} > <slot></slot> ${this.closable ? html ` <pc-icon-button class=\"close-button\" library=\"default\" name=\"xmark\" label=\"Close tab\" @click=${this.handleCloseClick} tabindex=\"-1\" exportparts=\"base:close-button-base\" ></pc-icon-button> ` : \"\"} </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTab",
          "declaration": {
            "name": "PcTab",
            "module": "dist/components/tab/tab.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab/tab.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTab",
          "default": "PcTab$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTab",
          "declaration": {
            "name": "PcTab$1",
            "module": "dist/components/tab/tab.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTab",
            "module": "dist/components/tab/tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab/tab.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-block; } :host(:focus) { outline: transparent; } :host(:focus-visible) { color: var(--pc-color-primary-800); outline: var(--pc-focus-ring); outline-offset: calc( -1 * var(--pc-focus-ring-width) - var(--pc-focus-ring-offset) ); } .tab { display: inline-flex; align-items: center; font-family: var(--pc-font-sans); font-size: var(--pc-font-size-s); font-weight: var(--pc-font-weight-semibold); border-radius: var(--pc-border-radius-m); color: var(--pc-color-neutral-600); padding: var(--pc-spacing-m); white-space: nowrap; user-select: none; -webkit-user-select: none; cursor: pointer; transition: all var(--pc-transition-fast) ease-in-out; } .tab:hover:not(.tab-disabled, .tab-active) { color: var(--pc-color-neutral-700); } .tab:hover:active:not(.tab-disabled, .tab-active) { color: var(--pc-color-neutral-500); } .tab.tab-active:not(.tab-disabled) { color: var(--pc-color-neutral-900); } .tab.tab-closable { padding-inline-end: var(--pc-spacing-s); } .tab.tab-disabled { opacity: 0.6; cursor: not-allowed; } .close-button { font-size: var(--pc-font-size-s); margin-inline-start: var(--pc-spacing-s); } .close-button::part(base) { padding: var(--pc-spacing-xxxs); } @media (forced-colors: active) { .tab.tab-active:not(.tab-disabled) { outline: 1px solid transparent; outline-offset: -3px; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/tab/tab.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/switch/switch.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcSwitch",
          "default": "class PcSwitch extends LitElement { constructor() { super(...arguments); // @ts-expect-error this.formControlController = new FormControlController(this, { value: (control) => control.checked ? control.value || \"on\" : undefined, defaultValue: (control) => control.defaultChecked, setValue: (control, checked) => (control.checked = checked), }); this.hasSlotController = new HasSlotController(this, \"hint\"); this.hasFocus = false; this.title = \"\"; this.checked = false; this.defaultChecked = false; this.disabled = false; this.form = \"\"; this.hint = \"\"; this.name = \"\"; this.required = false; this.size = \"medium\"; } get validity() { return this.input.validity; } get validationMessage() { return this.input.validationMessage; } firstUpdated() { this.formControlController.updateValidity(); } handleClick() { this.checked = !this.checked; emit(this, \"pc-change\"); } handleInput() { emit(this, \"pc-input\"); } handleFocus() { this.hasFocus = true; emit(this, \"pc-focus\"); } handleBlur() { this.hasFocus = false; emit(this, \"pc-blur\"); } handleInvalid(event) { this.formControlController.setValidity(false); this.formControlController.emitInvalidEvent(event); } handleKeyDown(event) { if (event.key === \"ArrowLeft\") { event.preventDefault(); this.checked = false; emit(this, \"pc-change\"); emit(this, \"pc-input\"); } else if (event.key === \"ArrowRight\") { event.preventDefault(); this.checked = true; emit(this, \"pc-change\"); emit(this, \"pc-input\"); } } handleCheckedChange() { this.input.checked = this.checked; this.formControlController.updateValidity(); } handleDisabledChange() { this.formControlController.setValidity(true); } click() { this.input.click(); } focus(options) { this.input.focus(options); } blur() { this.input.blur(); } checkValidity() { return this.input.checkValidity(); } getForm() { return this.formControlController.getForm(); } reportValidity() { return this.input.reportValidity(); } setCustomValidity(message) { this.input.setCustomValidity(message); this.formControlController.updateValidity(); } render() { const hasHintSlot = this.hasSlotController.test(\"hint\"); const hasHint = this.hint ? true : !!hasHintSlot; return html ` <div class=${classMap({ \"container\": true, \"container-small\": this.size === \"small\", \"container-medium\": this.size === \"medium\", \"container-large\": this.size === \"large\", \"container-has-hint\": hasHint, })} > <label part=\"base\" class=${classMap({ \"switch\": true, \"switch-checked\": this.checked, \"switch-disabled\": this.disabled, \"switch-focused\": this.hasFocus, \"switch-small\": this.size === \"small\", \"switch-medium\": this.size === \"medium\", \"switch-large\": this.size === \"large\", })} > <input class=\"switch-input\" type=\"checkbox\" role=\"switch\" title=${this.title} name=${this.name} value=${ifDefined(this.value)} .checked=${live(this.checked)} .disabled=${this.disabled} .required=${this.required} aria-checked=${this.checked ? \"true\" : \"false\"} aria-describedby=\"hint-text\" @click=${this.handleClick} @input=${this.handleInput} @focus=${this.handleFocus} @blur=${this.handleBlur} @invalid=${this.handleInvalid} @keydown=${this.handleKeyDown} /> <span part=\"control\" class=\"control\"> <span part=\"thumb\" class=\"thumb\"></span> </span> <div part=\"label\" class=\"label\"> <slot></slot> </div> </label> <div class=\"hint\" part=\"hint\" id=\"hint-text\" aria-hidden=${hasHint ? \"false\" : \"true\"} > <slot name=\"hint\">${this.hint}</slot> </div> </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSwitch",
          "declaration": {
            "name": "PcSwitch",
            "module": "dist/components/switch/switch.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/switch/switch.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcSwitch",
          "default": "PcSwitch$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSwitch",
          "declaration": {
            "name": "PcSwitch$1",
            "module": "dist/components/switch/switch.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcSwitch",
            "module": "dist/components/switch/switch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/switch/switch.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: inline-block; } :host([size=\"small\"]) { --height: var(--pc-toggle-size-s); --thumb-size: calc(var(--pc-toggle-size-s) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-s); } :host([size=\"medium\"]) { --height: var(--pc-toggle-size-m); --thumb-size: calc(var(--pc-toggle-size-m) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-m); } :host([size=\"large\"]) { --height: var(--pc-toggle-size-l); --thumb-size: calc(var(--pc-toggle-size-l) - 2px); --width: calc(var(--height) * 1.75); font-size: var(--pc-input-font-size-l); } .switch { display: inline-flex; position: relative; align-items: center; vertical-align: middle; color: var(--pc-input-label-color); font-size: inherit; font-family: var(--pc-input-font-family); font-weight: var(--pc-input-font-weight); cursor: pointer; } .control { display: inline-flex; position: relative; align-items: center; justify-content: center; flex: 0 0 auto; width: var(--width); height: var(--height); background-color: var(--pc-color-neutral-200); border: var(--pc-input-border-width) solid var(--pc-color-neutral-200); border-radius: var(--pc-border-radius-pill); transition: all var(--pc-transition-fast) ease-in-out; } .control .thumb { background-color: hsl(220, 25%, 96%); width: var(--thumb-size); height: var(--thumb-size); border-radius: var(--pc-border-radius-circle); translate: calc((var(--width) - var(--height)) / -2); box-shadow: var(--pc-shadow-xs); transition: outline var(--pc-transition-fast) ease-in-out, translate var(--pc-transition-medium) cubic-bezier(0.34, 1.35, 0.64, 1); } .switch-input { position: absolute; margin: 0; padding: 0; opacity: 0; pointer-events: none; } .switch:not(.switch-checked):not(.switch-disabled) .control:hover { background-color: var(--pc-color-neutral-300); border-color: var(--pc-color-neutral-300); } .switch:not(.switch-checked):not(.switch-disabled) .control:hover:active { background-color: var(--pc-color-neutral-100); border-color: var(--pc-color-neutral-100); } .switch:not(.switch-checked):not(.switch-disabled) .switch-input:focus-visible ~ .control .thumb { outline: var(--pc-focus-ring); outline-offset: var(--pc-focus-ring-offset); } .switch-checked .control { background-color: var(--pc-color-primary-400); border-color: var(--pc-color-primary-400); } .switch-checked .control .thumb { translate: calc((var(--width) - var(--height)) / 2); } .switch.switch-checked:not(.switch-disabled) .control:hover { background-color: var(--pc-color-primary-500); border-color: var(--pc-color-primary-500); } .switch.switch-checked:not(.switch-disabled) .control:hover:active { background-color: var(--pc-color-primary-300); border-color: var(--pc-color-primary-300); } .switch.switch-checked:not(.switch-disabled) .switch-input:focus-visible ~ .control { background-color: var(--pc-color-primary-600); border-color: var(--pc-color-primary-600); } .switch.switch-checked:not(.switch-disabled) .switch-input:focus-visible ~ .control .thumb { outline: var(--pc-focus-ring); outline-color: var(--pc-color-primary-300); outline-offset: var(--pc-focus-ring-offset); } .switch-disabled { opacity: 0.6; cursor: not-allowed; } .label { display: inline-block; line-height: var(--height); margin-inline-start: var(--pc-spacing-s); user-select: none; -webkit-user-select: none; transition: color var(--pc-transition-fast) ease-in-out; } :host([required]) .label::after { content: var(--pc-input-required-content); color: var(--pc-input-required-content-color); margin-inline-start: var(--pc-input-required-content-offset); } .hint { color: var(--pc-input-hint-text-color); font-family: var(--pc-input-font-family); } @media (forced-colors: active) { .switch:not(.switch-disabled) .control:hover .thumb, .switch .control .thumb { border: 1px solid ButtonText; width: calc(var(--thumb-size) - 2px); height: calc(var(--thumb-size) - 2px); } .switch.switch-checked:not(.switch-disabled) .control:hover .thumb, .switch-checked .control .thumb { background-color: ButtonText; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/switch/switch.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/spinner/spinner.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcSpinner",
          "default": "class PcSpinner extends LitElement { render() { return html ` <svg class=\"spinner\" part=\"base\" role=\"progressbar\" aria-label=\"Loading…\" > <circle class=\"track\"></circle> <circle class=\"indicator\"></circle> </svg> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSpinner",
          "declaration": {
            "name": "PcSpinner",
            "module": "dist/components/spinner/spinner.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/spinner/spinner.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcSpinner",
          "default": "PcSpinner$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcSpinner",
          "declaration": {
            "name": "PcSpinner$1",
            "module": "dist/components/spinner/spinner.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcSpinner",
            "module": "dist/components/spinner/spinner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/spinner/spinner.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { --track-width: 0.125rem; --track-color: rgba(112, 120, 128, 0.25); --indicator-color: var(--pc-color-primary-600); --speed: 2s; display: inline-flex; width: 1em; height: 1em; flex: none; } .spinner { flex: 1 1 auto; height: 100%; width: 100%; } .track, .indicator { fill: none; stroke-width: var(--track-width); r: calc(0.5em - var(--track-width) / 2); cx: 0.5em; cy: 0.5em; transform-origin: 50% 50%; } .track { stroke: var(--track-color); transform-origin: 0% 0%; } .indicator { stroke: var(--indicator-color); stroke-linecap: round; stroke-dasharray: 150% 75%; animation: spin var(--speed) linear infinite; } @keyframes spin { 0% { transform: rotate(0deg); stroke-dasharray: 0% 314.159%; } 50% { transform: rotate(450deg); stroke-dasharray: 157.08% 157.08%; } 100% { transform: rotate(1080deg); stroke-dasharray: 0% 314.159%; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/spinner/spinner.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/visually-hidden/visually-hidden.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcVisuallyHidden",
          "default": "class PcVisuallyHidden extends LitElement { render() { return html `<slot></slot>`; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcVisuallyHidden",
          "declaration": {
            "name": "PcVisuallyHidden",
            "module": "dist/components/visually-hidden/visually-hidden.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/visually-hidden/visually-hidden.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcVisuallyHidden",
          "default": "PcVisuallyHidden$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcVisuallyHidden",
          "declaration": {
            "name": "PcVisuallyHidden$1",
            "module": "dist/components/visually-hidden/visually-hidden.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcVisuallyHidden",
            "module": "dist/components/visually-hidden/visually-hidden.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/visually-hidden/visually-hidden.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host(:not(:focus-within)) { position: absolute !important; margin: -1px !important; padding: 0 !important; width: 1px !important; height: 1px !important; clip-path: inset(50%) !important; border: none !important; overflow: hidden !important; white-space: nowrap !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/visually-hidden/visually-hidden.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-group/tab-group.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTabGroup",
          "default": "class PcTabGroup extends LitElement { constructor() { super(...arguments); this.tabs = []; this.focusableTabs = []; this.panels = []; this.hasScrollControls = false; this.shouldHideScrollStartButton = false; this.shouldHideScrollEndButton = false; this.activation = \"auto\"; this.fixedScrollControls = false; this.noScrollControls = false; this.placement = \"top\"; this.scrollOffset = 1; } connectedCallback() { const whenAllDefined = Promise.all([ customElements.whenDefined(\"pc-tab\"), customElements.whenDefined(\"pc-tab-panel\"), ]); super.connectedCallback(); this.resizeObserver = new ResizeObserver(() => { this.repositionIndicator(); this.updateScrollControls(); }); this.mutationObserver = new MutationObserver((mutations) => { const instanceMutations = mutations.filter(({ target }) => { if (target === this) { return true; } if (target.closest(\"pc-tab-group\") !== this) { return false; } const tagName = target.tagName.toLowerCase(); return tagName === \"pc-tab\" || tagName === \"pc-tab-panel\"; }); if (instanceMutations.length === 0) { return; } if (instanceMutations.some((mutation) => ![\"aria-labelledby\", \"aria-controls\"].includes(mutation.attributeName))) { setTimeout(() => this.setAriaLabels()); } if (instanceMutations.some((mutation) => mutation.attributeName === \"disabled\")) { this.syncTabsAndPanels(); } else if (instanceMutations.some((mutation) => mutation.attributeName === \"active\")) { const tabs = instanceMutations .filter((mutation) => mutation.attributeName === \"active\" && mutation.target.tagName.toLowerCase() === \"pc-tab\") .map((mutation) => mutation.target); const newActiveTab = tabs.find((tab) => tab.active); if (newActiveTab) { this.setActiveTab(newActiveTab); } } }); this.updateComplete.then(() => { this.syncTabsAndPanels(); this.mutationObserver.observe(this, { attributes: true, attributeFilter: [\"active\", \"disabled\", \"name\", \"panel\"], childList: true, subtree: true, }); this.resizeObserver.observe(this.navigation); whenAllDefined.then(() => { const intersectionObserver = new IntersectionObserver((entries, observer) => { if (entries[0].intersectionRatio > 0) { this.setAriaLabels(); this.setActiveTab(this.getActiveTab() ?? this.tabs[0], { emitEvents: false }); observer.unobserve(entries[0].target); } }); intersectionObserver.observe(this.tabGroup); }); }); } disconnectedCallback() { super.disconnectedCallback(); this.mutationObserver?.disconnect(); if (this.navigation) { this.resizeObserver?.unobserve(this.navigation); } } getAllTabs() { const slot = this.shadowRoot.querySelector('slot[name=\"navigation\"]'); return slot.assignedElements(); } getAllPanels() { return [...this.body.assignedElements()].filter((element) => element.tagName.toLowerCase() === \"pc-tab-panel\"); } getActiveTab() { return this.tabs.find((element) => element.active); } handleClick(event) { const target = event.target; const tab = target.closest(\"pc-tab\"); const tabGroup = tab?.closest(\"pc-tab-group\"); if (tabGroup !== this) { return; } if (tab !== null) { this.setActiveTab(tab, { scrollBehavior: \"smooth\" }); } } handleKeyDown(event) { const target = event.target; const tab = target.closest(\"pc-tab\"); const tabGroup = tab?.closest(\"pc-tab-group\"); if (tabGroup !== this) { return; } if ([\"Enter\", \" \"].includes(event.key)) { if (tab !== null) { this.setActiveTab(tab, { scrollBehavior: \"smooth\" }); event.preventDefault(); } } if ([ \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\", \"Home\", \"End\", ].includes(event.key)) { const activeElement = this.tabs.find((tab) => tab.matches(\":focus\")); const isRTL = document.documentElement.dir === \"rtl\"; let nextTab = null; if (activeElement?.tagName.toLowerCase() === \"pc-tab\") { if (event.key === \"Home\") { nextTab = this.focusableTabs[0]; } else if (event.key === \"End\") { nextTab = this.focusableTabs[this.focusableTabs.length - 1]; } else if (([\"top\", \"bottom\"].includes(this.placement) && event.key === (isRTL ? \"ArrowRight\" : \"ArrowLeft\")) || ([\"start\", \"end\"].includes(this.placement) && event.key === \"ArrowUp\")) { const currentIndex = this.tabs.findIndex((element) => element === activeElement); nextTab = this.findNextFocusableTab(currentIndex, \"backward\"); } else if (([\"top\", \"bottom\"].includes(this.placement) && event.key === (isRTL ? \"ArrowLeft\" : \"ArrowRight\")) || ([\"start\", \"end\"].includes(this.placement) && event.key === \"ArrowDown\")) { const currentIndex = this.tabs.findIndex((element) => element === activeElement); nextTab = this.findNextFocusableTab(currentIndex, \"forward\"); } if (!nextTab) { return; } nextTab.tabIndex = 0; nextTab.focus({ preventScroll: true }); if (this.activation === \"auto\") { this.setActiveTab(nextTab, { scrollBehavior: \"smooth\" }); } else { this.tabs.forEach((tabElement) => { tabElement.tabIndex = tabElement === nextTab ? 0 : -1; }); } if ([\"top\", \"bottom\"].includes(this.placement)) { scrollIntoView(nextTab, this.navigation, \"horizontal\"); } event.preventDefault(); } } } handleScrollToStart() { this.navigation.scroll({ left: document.documentElement.dir === \"rtl\" ? this.navigation.scrollLeft + this.navigation.clientWidth : this.navigation.scrollLeft - this.navigation.clientWidth, behavior: \"smooth\", }); } handleScrollToEnd() { this.navigation.scroll({ left: document.documentElement.dir === \"rtl\" ? this.navigation.scrollLeft - this.navigation.clientWidth : this.navigation.scrollLeft + this.navigation.clientWidth, behavior: \"smooth\", }); } setActiveTab(tab, options) { options = { emitEvents: true, scrollBehavior: \"auto\", ...options, }; if (tab !== this.activeTab && !tab.disabled) { const previousTab = this.activeTab; this.activeTab = tab; this.tabs.forEach((element) => { element.active = element === this.activeTab; element.tabIndex = element === this.activeTab ? 0 : -1; }); this.panels.forEach((element) => (element.active = element.name === this.activeTab?.panel)); this.syncIndicator(); if ([\"top\", \"bottom\"].includes(this.placement)) { scrollIntoView(this.activeTab, this.navigation, \"horizontal\", options.scrollBehavior); } if (options.emitEvents) { if (previousTab) { emit(this, \"pc-tab-hide\", { detail: { name: previousTab.panel }, }); } emit(this, \"pc-tab-show\", { detail: { name: this.activeTab.panel }, }); } } } setAriaLabels() { this.tabs.forEach((tab) => { const panel = this.panels.find((element) => element.name === tab.panel); if (panel) { tab.setAttribute(\"aria-controls\", panel.getAttribute(\"id\")); panel.setAttribute(\"aria-labelledby\", tab.getAttribute(\"id\")); } }); } repositionIndicator() { const currentTab = this.getActiveTab(); if (!currentTab) { return; } const width = currentTab.clientWidth; const height = currentTab.clientHeight; const isRTL = document.documentElement.dir === \"rtl\"; const allTabs = this.getAllTabs(); const precedingTabs = allTabs.slice(0, allTabs.indexOf(currentTab)); const offset = precedingTabs.reduce((previous, current) => ({ left: previous.left + current.clientWidth, top: previous.top + current.clientHeight, }), { left: 0, top: 0 }); switch (this.placement) { case \"top\": case \"bottom\": this.indicator.style.width = `${width}px`; this.indicator.style.height = \"auto\"; this.indicator.style.translate = isRTL ? `${ -1 * offset.left}px` : `${offset.left}px`; break; case \"start\": case \"end\": this.indicator.style.width = \"auto\"; this.indicator.style.height = `${height}px`; this.indicator.style.translate = `0 ${offset.top}px`; break; } } syncTabsAndPanels() { this.tabs = this.getAllTabs(); this.focusableTabs = this.tabs.filter((el) => !el.disabled); this.panels = this.getAllPanels(); this.syncIndicator(); this.updateComplete.then(() => this.updateScrollControls()); } findNextFocusableTab(currentIndex, direction) { let nextTab = null; const iterator = direction === \"forward\" ? 1 : -1; let nextIndex = currentIndex + iterator; while (currentIndex < this.tabs.length) { nextTab = this.tabs[nextIndex] || null; if (nextTab === null) { if (direction === \"forward\") { nextTab = this.focusableTabs[0]; } else { nextTab = this.focusableTabs[this.focusableTabs.length - 1]; } break; } if (!nextTab.disabled) { break; } nextIndex += iterator; } return nextTab; } updateScrollButtons() { if (this.hasScrollControls && !this.fixedScrollControls) { this.shouldHideScrollStartButton = this.scrollFromStart() <= this.scrollOffset; this.shouldHideScrollEndButton = this.isScrolledToEnd(); } } isScrolledToEnd() { return (this.scrollFromStart() + this.navigation.clientWidth >= this.navigation.scrollWidth - this.scrollOffset); } scrollFromStart() { return document.documentElement.dir === \"rtl\" ? -this.navigation.scrollLeft : this.navigation.scrollLeft; } updateScrollControls() { if (this.noScrollControls) { this.hasScrollControls = false; } else { this.hasScrollControls = [\"top\", \"bottom\"].includes(this.placement) && this.navigation.scrollWidth > this.navigation.clientWidth + 1; } this.updateScrollButtons(); } syncIndicator() { const tab = this.getActiveTab(); if (tab) { this.indicator.style.display = \"block\"; this.repositionIndicator(); } else { this.indicator.style.display = \"none\"; } } show(panel) { const tab = this.tabs.find((el) => el.panel === panel); if (tab) { this.setActiveTab(tab, { scrollBehavior: \"smooth\" }); } } render() { const isRTL = document.documentElement.dir === \"rtl\"; return html ` <div part=\"base\" class=${classMap({ \"tab-group\": true, \"tab-group-top\": this.placement === \"top\", \"tab-group-bottom\": this.placement === \"bottom\", \"tab-group-start\": this.placement === \"start\", \"tab-group-end\": this.placement === \"end\", \"tab-group-rtl\": isRTL === true, \"tab-group-has-scroll-controls\": this.hasScrollControls, })} @click=${this.handleClick} @keydown=${this.handleKeyDown} > <div class=\"tab-group-navigation-container\" part=\"navigation\"> ${this.hasScrollControls ? html ` <pc-icon-button part=\"scroll-button scroll-button-start\" class=${classMap({ \"tab-group-scroll-button\": true, \"tab-group-scroll-button-start\": true, \"tab-group-scroll-button-start-hidden\": this.shouldHideScrollStartButton, })} library=\"default\" iconStyle=\"solid\" name=${isRTL ? \"chevron-right\" : \"chevron-left\"} tabindex=\"-1\" aria-hidden=\"true\" label=\"Scroll left\" @click=${this.handleScrollToStart} exportparts=\"base:scroll-button-base\" ></pc-icon-button> ` : \"\"} <div class=\"tab-group-navigation\" @scrollend=${this.updateScrollButtons} > <div part=\"tabs\" class=\"tab-group-tabs\" role=\"tablist\"> <div class=\"tab-group-indicator\" part=\"active-tab-indicator\" ></div> <pc-resize-observer @pc-resize=${this.syncIndicator} > <slot name=\"navigation\" @slotchange=${this.syncTabsAndPanels} ></slot> </pc-resize-observer> </div> </div> ${this.hasScrollControls ? html ` <pc-icon-button part=\"scroll-button scroll-button-end\" class=${classMap({ \"tab-group-scroll-button\": true, \"tab-group-scroll-button-end\": true, \"tab-group-scroll-button-end-hidden\": this.shouldHideScrollEndButton, })} library=\"default\" iconStyle=\"solid\" name=${isRTL ? \"chevron-left\" : \"chevron-right\"} tabindex=\"-1\" aria-hidden=\"true\" label=\"Scroll right\" @click=${this.handleScrollToEnd} exportparts=\"base:scroll-button-base\" ></pc-icon-button> ` : \"\"} </div> <slot class=\"tab-group-body\" part=\"body\" @slotchange=${this.syncTabsAndPanels} ></slot> </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabGroup",
          "declaration": {
            "name": "PcTabGroup",
            "module": "dist/components/tab-group/tab-group.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-group/tab-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTabGroup",
          "default": "PcTabGroup$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabGroup",
          "declaration": {
            "name": "PcTabGroup$1",
            "module": "dist/components/tab-group/tab-group.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTabGroup",
            "module": "dist/components/tab-group/tab-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-group/tab-group.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { --indicator-color: var(--pc-color-primary-500); --track-width: 4px; display: block; } .tab-group { display: flex; border-radius: 0; } .tab-group-tabs { display: flex; position: relative; } .tab-group-indicator { position: absolute; transition: all var(--pc-transition-medium) ease-in-out; } .tab-group-has-scroll-controls .tab-group-navigation-container { position: relative; padding: 0 var(--pc-spacing-xl); } .tab-group-has-scroll-controls .tab-group-scroll-button-start-hidden, .tab-group-has-scroll-controls .tab-group-scroll-button-end-hidden { opacity: 0; pointer-events: none; } .tab-group-navigation-container, .tab-group-navigation { outline: none; } .tab-group-body { display: block; overflow: auto; } .tab-group-scroll-button { display: flex; position: absolute; align-items: center; justify-content: center; top: 0; bottom: 0; width: var(--pc-spacing-xl); opacity: 1; pointer-events: auto; transition: opacity var(--pc-transition-fast) ease-in-out; } .tab-group-scroll-button-start { left: 0; } .tab-group-scroll-button-end { right: 0; } .tab-group-rtl .tab-group-scroll-button-start { left: auto; right: 0; } .tab-group-rtl .tab-group-scroll-button-end { left: 0; right: auto; } .tab-group-top { flex-direction: column; } .tab-group-top .tab-group-navigation-container { order: 1; } .tab-group-top .tab-group-navigation { display: flex; overflow-x: auto; scrollbar-width: none; } .tab-group-top .tab-group-navigation::-webkit-scrollbar { width: 0; height: 0; } .tab-group-top .tab-group-tabs { position: relative; flex-direction: row; flex: 1 1 auto; } .tab-group-top .tab-group-indicator { bottom: 0; min-height: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-top .tab-group-body { order: 2; } .tab-group-top ::slotted(pc-tab-panel) { padding: var(--pc-spacing-m) 0; } .tab-group-bottom { flex-direction: column; } .tab-group-bottom .tab-group-navigation-container { order: 2; } .tab-group-bottom .tab-group-navigation { display: flex; overflow-x: auto; scrollbar-width: none; } .tab-group-bottom .tab-group-tabs { position: relative; flex-direction: row; flex: 1 1 auto; } .tab-group-bottom .tab-group-indicator { top: 0; min-height: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-bottom .tab-group-body { order: 1; } .tab-group-bottom ::slotted(pc-tab-panel) { padding: var(--pc-spacing-m) 0; } .tab-group-start { flex-direction: row; } .tab-group-start .tab-group-navigation-container { order: 1; } .tab-group-start .tab-group-tabs { flex-direction: column; flex: 0 0 auto; } .tab-group-start .tab-group-indicator { right: 0; min-width: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-start .tab-group-body { flex: 1 1 auto; order: 2; } .tab-group-start ::slotted(pc-tab-panel) { padding: 0 var(--pc-spacing-m); } .tab-group-end { flex-direction: row; } .tab-group-end .tab-group-navigation-container { order: 2; } .tab-group-end .tab-group-tabs { flex-direction: column; flex: 0 0 auto; } .tab-group-end .tab-group-indicator { left: 0; min-width: var(--track-width); background-color: var(--indicator-color); border-radius: var(--pc-border-radius-pill); } .tab-group-end.tab-group-rtl .tab-group-indicator { right: 0; left: auto; } .tab-group-end .tab-group-body { flex: 1 1 auto; order: 1; } .tab-group-end ::slotted(pc-tab-panel) { padding: 0 var(--pc-spacing-m); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/tab-group/tab-group.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-panel/tab-panel.component.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTabPanel",
          "default": "class PcTabPanel extends LitElement { constructor() { super(...arguments); this.attributeID = ++id; this.componentID = `pc-tab-panel-${this.attributeID}`; this.active = false; this.name = \"\"; } connectedCallback() { super.connectedCallback(); this.id = this.id.length > 0 ? this.id : this.componentID; this.setAttribute(\"role\", \"tabpanel\"); } handleActiveChange() { this.setAttribute(\"aria-hidden\", this.active ? \"false\" : \"true\"); } render() { return html ` <slot part=\"base\" class=${classMap({ \"tab-panel\": true, \"tab-panel-active\": this.active, })} ></slot> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabPanel",
          "declaration": {
            "name": "PcTabPanel",
            "module": "dist/components/tab-panel/tab-panel.component.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-panel/tab-panel.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PcTabPanel",
          "default": "PcTabPanel$1"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PcTabPanel",
          "declaration": {
            "name": "PcTabPanel$1",
            "module": "dist/components/tab-panel/tab-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PcTabPanel",
            "module": "dist/components/tab-panel/tab-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/components/tab-panel/tab-panel.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css ` :host { display: none; } :host([active]) { display: block; } .tab-panel { display: block; padding: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "dist/components/tab-panel/tab-panel.styles.js"
          }
        }
      ]
    }
  ]
}
