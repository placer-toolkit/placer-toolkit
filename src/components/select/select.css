:host {
    --tag-max-size: 10ch;
}

:host pc-tag {
    border-radius: calc(
        var(--pc-border-radius-m) -
            (
                var(--pc-form-control-height) * 0.1 -
                    var(--pc-form-control-border-width)
            )
    );
}

:host([pill]) pc-tag {
    border-radius: var(--pc-border-radius-pill);
}

:host pc-tag::part(content) {
    display: initial;
    max-inline-size: var(--tag-max-size);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

:host .disabled [part~="combobox"] {
    opacity: 0.5;
    cursor: not-allowed;
    outline: none;
}

:host .enabled:is(.open, :focus-within) [part~="combobox"] {
    outline: var(--pc-focus-ring);
    outline-offset: var(--pc-focus-ring-offset);
    animation: focus-ring-animation var(--pc-transition-medium)
        cubic-bezier(0.33, 1, 0.68, 1);
}

.select {
    display: inline-flex;
    position: relative;
    flex: 1 1 auto;
    inline-size: 100%;
    vertical-align: middle;
}

.select::part(popup) {
    z-index: 900;
}

.select[data-current-placement^="top"]::part(popup) {
    transform-origin: bottom;
}

.select[data-current-placement^="bottom"]::part(popup) {
    transform-origin: top;
}

.combobox {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: flex-start;
    flex: 1;
    min-inline-size: 0;
    inline-size: 100%;
    min-block-size: var(--pc-form-control-height);
    padding: 0 var(--pc-form-control-padding-inline);
    background-color: var(--pc-form-control-background-color);
    border: var(--pc-form-control-border-width)
        var(--pc-form-control-border-style) var(--pc-form-control-border-color);
    border-radius: var(--pc-form-control-border-radius);
    color: var(--pc-form-control-value-color);
    font-family: inherit;
    font-weight: var(--pc-form-control-value-font-weight);
    line-height: var(--pc-form-control-value-line-height);
    overflow: hidden;
    vertical-align: middle;
    cursor: pointer;
    transition: all var(--pc-transition-fast) ease-in-out;
}

@media (hover: hover) {
    :host(:not([disabled])) .enabled:not(.open, :focus-within) .combobox:hover {
        border-color: color-mix(
            in oklab,
            var(--pc-form-control-border-color),
            var(--pc-color-mix-hover)
        );
    }
}

:host([multiple]) .select:not(.placeholder-visible) .combobox {
    padding-inline-start: 0;
    padding-block: calc(
        var(--pc-form-control-height) * 0.1 -
            var(--pc-form-control-border-width)
    );
}

:host([filled]) .combobox {
    background-color: var(--pc-color-neutral-fill-quiet);
    border-color: var(--pc-color-neutral-fill-quiet);
}

@media (hover: hover) {
    :host([filled]:not([disabled]))
        .enabled:not(.open, :focus-within)
        .combobox:hover {
        background-color: color-mix(
            in oklab,
            var(--pc-color-neutral-fill-quiet),
            var(--pc-color-mix-hover)
        );
        border-color: color-mix(
            in oklab,
            var(--pc-color-neutral-fill-quiet),
            var(--pc-color-mix-hover)
        );
    }
}

:host([pill]) .combobox {
    border-radius: var(--pc-border-radius-pill);
}

.display-input {
    position: relative;
    margin: 0;
    padding: 0;
    inline-size: 100%;
    background: transparent;
    color: var(--pc-form-control-value-color);
    border: none;
    outline: none;
    font: inherit;
    line-height: var(--pc-form-control-value-line-height);
    overflow: hidden;
    cursor: inherit;
    -webkit-appearance: none;
}

.display-input:focus {
    outline: none;
}

.display-input::placeholder {
    color: var(--pc-form-control-placeholder-color);
}

:host([multiple]) .select:not(.placeholder-visible) .display-input {
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    inline-size: 100%;
    block-size: 100%;
    opacity: 0;
    z-index: -1;
}

.value-input {
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    margin: 0;
    padding: 0;
    inline-size: 100%;
    block-size: 100%;
    opacity: 0;
    z-index: -1;
}

.tags {
    display: flex;
    align-items: center;
    flex: 1;
    flex-wrap: wrap;
    margin-inline-start: calc(
        var(--pc-form-control-height) * 0.1 -
            var(--pc-form-control-border-width)
    );
    gap: 0.25em;
}

.tags::slotted(pc-tag) {
    cursor: pointer !important;
}

.disabled .tags,
.disabled .tags::slotted(pc-tag) {
    cursor: not-allowed !important;
}

.prefix,
.suffix {
    display: inline-flex;
    align-items: center;
    flex: 0 0 auto;
}

.prefix::slotted(pc-icon),
.suffix::slotted(pc-icon) {
    color: var(--pc-color-neutral-on-quiet);
}

.prefix::slotted(*) {
    margin-inline-end: var(--pc-form-control-padding-inline);
}

.suffix::slotted(*) {
    margin-inline-start: var(--pc-form-control-padding-inline);
}

:host([multiple]) .prefix::slotted(*) {
    margin-inline: var(--pc-form-control-padding-inline);
}

[part~="clear-button"] {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-inline-start: var(--pc-form-control-padding-inline);
    padding: 0;
    border: none;
    background: transparent;
    color: var(--pc-color-neutral-on-quiet);
    font-size: inherit;
    cursor: pointer;
    transition: color var(--pc-transition-fast) ease-in-out;
}

[part~="clear-button"]:focus {
    outline: none;
}

@media (hover: hover) {
    [part~="clear-button"]:hover {
        color: color-mix(
            in oklab,
            var(--pc-color-neutral-on-quiet),
            var(--pc-color-mix-hover)
        );
    }
}

[part~="clear-button"]:active {
    color: color-mix(
        in oklab,
        var(--pc-color-neutral-on-quiet),
        var(--pc-color-mix-active)
    );
}

.expand-icon {
    display: flex;
    align-items: center;
    flex: 0 0 auto;
    color: var(--pc-color-neutral-on-quiet);
    rotate: 0;
    margin-inline-start: var(--pc-form-control-padding-inline);
    transition: rotate var(--pc-transition-fast) ease-in-out;
}

.open .expand-icon {
    rotate: -180deg;
}

.listbox {
    display: block;
    position: relative;
    font: inherit;
    background-color: var(--pc-color-surface-raised);
    border: none;
    border-radius: calc(var(--pc-border-radius-m) + 0.25rem);
    padding: var(--pc-spacing-xs);
    max-inline-size: var(--auto-size-available-width);
    max-block-size: var(--auto-size-available-height);
    overflow: auto;
    box-shadow: var(--pc-shadow-l);
    overscroll-behavior: none;
}

.listbox ::slotted(pc-divider) {
    --spacing: 0.25em;
}

slot:not([name])::slotted(small) {
    display: block;
    font-size: var(--pc-font-size-smaller);
    font-weight: var(--pc-font-weight-semibold);
    color: var(--pc-color-text-quiet);
    padding-block: 0.5em;
    padding-inline-start: 2em;
}

@keyframes focus-ring-animation {
    0% {
        outline-width: 0;
    }

    50% {
        outline-width: calc(var(--pc-focus-ring-width) * 2);
    }

    100% {
        outline-width: var(--pc-focus-ring-width);
    }
}
