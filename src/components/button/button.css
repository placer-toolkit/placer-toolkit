:host {
    display: inline-block;
    position: relative;
}

.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    inline-size: 100%;
    block-size: var(--pc-form-control-height);
    background-color: var(--pc-color-fill-loud);
    color: var(--pc-color-on-loud);
    border: var(--pc-border-width-s) var(--pc-border-style) transparent;
    border-radius: var(--pc-form-control-border-radius);
    padding: 0 var(--pc-form-control-padding-inline);
    box-sizing: border-box;
    font-family: inherit;
    font-size: inherit;
    font-weight: var(--pc-font-weight-bold);
    line-height: calc(var(--pc-form-control-height) - var(--border-width) * 2);
    vertical-align: middle;
    white-space: nowrap;
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    transition: all var(--pc-transition-fast) ease-in-out;
}

.button::-moz-focus-inner {
    border: 0;
}

.button:focus {
    outline: none;
}

.button:focus-visible {
    outline: var(--pc-focus-ring);
    outline-offset: var(--pc-focus-ring-offset);
    animation: focus-ring-animation var(--pc-transition-medium)
        cubic-bezier(0.33, 1, 0.68, 1);
}

.prefix,
.suffix {
    display: flex;
    align-items: center;
    pointer-events: none;
}

.prefix::slotted(*) {
    margin-inline-end: 0.75em;
}

.suffix::slotted(*) {
    margin-inline-start: 0.75em;
}

.label {
    display: flex;
    transition: color var(--pc-transition-fast) ease-in-out;
}

.label::slotted(pc-icon) {
    align-self: center;
}

:host([pill]) .button {
    border-radius: var(--pc-border-radius-pill);
}

.disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.disabled * {
    pointer-events: none;
}

.icon-button {
    aspect-ratio: 1 / 1;
    inline-size: var(--pc-form-control-height);
}

:host([variant~="accent"]) {
    .button {
        background-color: var(--pc-color-fill-loud);
        color: var(--pc-color-on-loud);
        border-color: transparent;
    }

    @media (hover: hover) {
        .button:not(.disabled):hover {
            background-color: color-mix(
                in oklab,
                var(--pc-color-fill-loud),
                var(--pc-color-mix-hover)
            );
        }
    }

    .button:not(.disabled):active {
        background-color: color-mix(
            in oklab,
            var(--pc-color-fill-loud),
            var(--pc-color-mix-active)
        );
    }
}

:host([variant~="outlined"]) {
    .button {
        background-color: transparent;
        color: var(--pc-color-on-quiet);
        border-color: var(--pc-color-border-loud);
    }

    @media (hover: hover) {
        .button:not(.disabled):hover {
            background-color: color-mix(
                in oklab,
                var(--pc-color-fill-quiet),
                var(--pc-color-mix-hover)
            );
            color: var(--pc-color-on-quiet);
        }
    }

    .button:not(.disabled):active {
        background-color: color-mix(
            in oklab,
            var(--pc-color-fill-quiet),
            var(--pc-color-mix-active)
        );
        color: var(--pc-color-on-quiet);
    }
}

:host([variant~="filled"]) {
    .button {
        background-color: var(--pc-color-fill-normal);
        color: var(--pc-color-on-normal);
        border-color: transparent;
    }

    @media (hover: hover) {
        .button:not(.disabled):hover {
            background-color: color-mix(
                in oklab,
                var(--pc-color-fill-normal),
                var(--pc-color-mix-hover)
            );
        }
    }

    .button:not(.disabled):active {
        background-color: color-mix(
            in oklab,
            var(--pc-color-fill-normal),
            var(--pc-color-mix-active)
        );
    }
}

:host([variant~="filled"][variant~="outlined"]) .button {
    border-color: var(--pc-color-border-normal);
}

:host([variant~="plain"]) {
    .button {
        background-color: transparent;
        color: var(--pc-color-on-quiet);
        border-color: transparent;
    }

    @media (hover: hover) {
        .button:not(.disabled):hover {
            background-color: color-mix(
                in oklab,
                var(--pc-color-fill-quiet),
                var(--pc-color-mix-hover)
            );
            color: var(--pc-color-on-quiet);
        }
    }

    .button:not(.disabled):active {
        background-color: color-mix(
            in oklab,
            var(--pc-color-fill-quiet),
            var(--pc-color-mix-active)
        );
        color: var(--pc-color-on-quiet);
    }
}

:host(
        [data-pc-button-group-button-first]:not(
            [data-pc-button-group-button-last]
        )
    )
    .button {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
}

:host([data-pc-button-group-button-inner]) .button {
    border-radius: 0;
}

:host(
        [data-pc-button-group-button-last]:not(
            [data-pc-button-group-button-first]
        )
    )
    .button {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
}

:host([data-pc-button-group-button]:not([data-pc-button-group-button-first])) {
    margin-inline-start: calc(-1 * var(--pc-input-border-width));
}

:host([data-pc-button-group-button-hover]),
:host([data-pc-button-group-button-focus]) {
    z-index: 1;
}

:host([data-pc-button-group-button][checked]) {
    z-index: 2;
}

@keyframes focus-ring-animation {
    0% {
        outline-width: 0;
    }

    50% {
        outline-width: calc(var(--pc-focus-ring-width) * 2);
    }

    100% {
        outline-width: var(--pc-focus-ring-width);
    }
}
